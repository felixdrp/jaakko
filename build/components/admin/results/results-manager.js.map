{"version":3,"sources":["components/admin/results/results-manager.js"],"names":["ResultsManager","state","_input","surveyxMonetaryTypeIndex","accountsMonetary","props","storeSession","session","surveyPath","reduce","prev","element","index","type","push","accounts","list","accountId","account","accountComponent","email","firstName","surname","moneyData","results","surveyInfo","filter","includes","surveyId","forEach","current","index2","length","style","gray","color","paddingBottom","propTypes","contextTypes","muiTheme","object","isRequired"],"mappings":"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","file":"components/admin/results/results-manager.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\n// groups\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n// import FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Avatar from 'material-ui/Avatar';\n\nimport Class from 'material-ui/svg-icons/action/class';\nimport Language from 'material-ui/svg-icons/action/language';\nimport Group from 'material-ui/svg-icons/social/group';\nimport GroupAdd from 'material-ui/svg-icons/social/group-add';\nimport PersonOutline from 'material-ui/svg-icons/social/person-outline';\nimport DeveloperBoard from 'material-ui/svg-icons/hardware/developer-board';\n\n// Icons\n\nimport ShowChart from 'material-ui/svg-icons/editor/show-chart';\nimport LocalAtm from 'material-ui/svg-icons/maps/local-atm';\nimport Memory from 'material-ui/svg-icons/hardware/memory';\nimport ModeEdit from 'material-ui/svg-icons/editor/mode-edit';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport NavigationClose from 'material-ui/svg-icons/navigation/close';\n//\n// import GeneralInfoContainer from './general-info-container';\n// import SessionTrackerContainer from './session-tracker-container';\n\n\nimport {\n\n} from '../../../websocket-message/server-actions'\n\nclass ResultsManager extends Component {\n  static propTypes = {\n    // groups: PropTypes.object,\n    // unassignedAccounts: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  constructor() {\n    super()\n    this.state = {\n\n    };\n\n    // Used to store references.\n    this._input = {};\n  }\n\n  render() {\n    let surveyxMonetaryTypeIndex = []\n    let accountsMonetary = []\n\n    if ( this.props.storeSession && 'session' in this.props.storeSession ) {\n      surveyxMonetaryTypeIndex = this.props.storeSession.session.surveyPath.reduce(\n        (prev, element, index) => {\n          // The survey have a monetary value?\n          if (element.type == 'RESULTS' || element.type == 'MATH_RESULTS') {\n            prev.push( index )\n            return prev\n          }\n          return prev\n        },\n        []\n      )\n\n      accountsMonetary = this.props.storeSession.accounts.list.reduce(\n        ( prev, accountId, index ) => {\n          let account = this.props.storeSession.accounts[ accountId ]\n          let accountComponent = []\n\n          accountComponent.push( <span key={ account.email + 0 }> {account.firstName} {account.surname} {account.email} </span> )\n\n          let moneyData = this.props.storeSession.results.surveyInfo.filter(\n            (element) => element.accountId == accountId && surveyxMonetaryTypeIndex.includes( element.surveyId )\n          )\n\n          moneyData.forEach(\n            (current, index2) => {\n              if ( index2 < moneyData.length - 1 ) {\n                accountComponent.push( <span key={ account.email + index2 + 1 }> pago {account.firstName} {account.surname} {account.email} </span> )\n              } else {\n                accountComponent.push( <span key={ account.email + index2 + 1 }> pago fin {account.firstName} {account.surname} {account.email} </span> )\n              }\n            }\n          )\n\n          prev.push( <div key={ index }> {accountComponent} </div> )\n\n          return prev\n        },\n        []\n      )\n    }\n\n\n    // let accounts = this.props.storeSession.accounts.list.map(\n    //   ( account, index ) => {\n    //     let accountComponent = []\n    //     accountComponent.push( <span key={account.email}> {account.firstName} {account.surname} {account.email} </span> )\n    //     let moneyData = this.props.storeSession.results.filter(\n    //       (element) => element.creator == account && surveyxMonetaryTypeIndex.includes( element. )\n    //     )\n    //     accountComponent = [\n    //       ...accountComponent,\n    //       ...this.props.storeSession.reduce(\n    //         (prev, current, index) => {\n    //           if (  ) {\n    //\n    //           } else {\n    //\n    //           }\n    //         },\n    //         []\n    //       )\n    //     ]\n    //     return <div key={index}> accountComponent </div>\n    //   }\n    // )\n\n    // let result =\n\n    const style = {\n      gray: {\n        color: '#565555'\n      }\n    }\n\n    return (\n      <Card\n        style={{\n          paddingBottom: 20,\n        }}\n      >\n        <CardHeader\n          title={ <span><ShowChart /> Results manager </span> }\n          subtitle=\"Results manager\"\n        />\n        <CardHeader\n          title={ <span><LocalAtm /> Results manager </span> }\n        />\n        { accountsMonetary }\n      </Card>\n    )\n  }\n}\n\nexport default ResultsManager\n"],"sourceRoot":"/source/"}