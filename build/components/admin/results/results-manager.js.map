{"version":3,"sources":["components/admin/results/results-manager.js"],"names":["ResultsManager","selectAccount","accountId","maintainPrevSelection","prevSelected","state","selectedAccounts","selected","ctrlKey","includes","splice","indexOf","concat","setState","unassignAccount","props","wsSession","send","unassignSelectedAccounts","assignSelectedAccountsToGroup","event","groupId","nativeEvent","defaultPrevented","addGroup","name","removeGroup","automateGroupCreation","numberOfGroups","accounts","groups","_input","console","log","context","style","gray","color","paddingBottom","propTypes","contextTypes","muiTheme","object","isRequired"],"mappings":"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","file":"components/admin/results/results-manager.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\n// groups\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n// import FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Avatar from 'material-ui/Avatar';\n\nimport Class from 'material-ui/svg-icons/action/class';\nimport Language from 'material-ui/svg-icons/action/language';\nimport Group from 'material-ui/svg-icons/social/group';\nimport GroupAdd from 'material-ui/svg-icons/social/group-add';\nimport PersonOutline from 'material-ui/svg-icons/social/person-outline';\nimport DeveloperBoard from 'material-ui/svg-icons/hardware/developer-board';\n\n// Icons\n\nimport ShowChart from 'material-ui/svg-icons/editor/show-chart';\nimport LocalAtm from 'material-ui/svg-icons/maps/local-atm';\nimport Memory from 'material-ui/svg-icons/hardware/memory';\nimport ModeEdit from 'material-ui/svg-icons/editor/mode-edit';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport NavigationClose from 'material-ui/svg-icons/navigation/close';\n//\n// import GeneralInfoContainer from './general-info-container';\n// import SessionTrackerContainer from './session-tracker-container';\n\n\nimport {\n  wsGroupAdd,\n  wsGroupRemove,\n  wsAssignSelectedAccountsToGroup,\n  wsUnassignSelectedAccounts,\n  wsUnassignAccount,\n  wsAutomateGroupsCreation,\n} from '../../../websocket-message/server-actions'\n\nclass ResultsManager extends Component {\n  static propTypes = {\n    // groups: PropTypes.object,\n    // unassignedAccounts: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n    // wsSession: PropTypes.object,\n    // websocket: PropTypes.object,\n  };\n\n  constructor() {\n    super()\n    this.state = {\n      accounts: { },\n      groups: { },\n      selectedAccounts: [],\n    };\n\n    // Used to store references.\n    this._input = {};\n  }\n\n  // Add or remove a selection\n  // if maintainPrevSelection == true it will maintain the previus selection\n  selectAccount = ( accountId, maintainPrevSelection ) => {\n    let prevSelected = this.state.selectedAccounts\n    let selected = []\n    if (maintainPrevSelection.ctrlKey) {\n      // Alredy in the list? then remove\n      if (prevSelected.includes(accountId)) {\n        selected = prevSelected\n        selected.splice( selected.indexOf(accountId), 1 )\n      } else {\n        selected = this.state.selectedAccounts.concat(accountId)\n      }\n    } else {\n      // If not selected select\n      if (!prevSelected.includes(accountId)) {\n        selected = [ accountId ]\n      }\n    }\n\n    this.setState({ selectedAccounts: selected })\n    // debugger\n    // console.log('select an account!!! > ' + accountId)\n\n  }\n\n  // Free an account from group\n  unassignAccount = (accountId) => {\n    // console.log('unassign an account!!! > ' + accountId)\n    // console.log(this.props)\n    this.props.wsSession.send(\n      wsUnassignAccount( accountId )\n    )\n  }\n\n  // Free the selected accounts from groups\n  unassignSelectedAccounts = () => {\n    // console.log('unassign!!!')\n    this.props.wsSession.send(\n      wsUnassignSelectedAccounts( this.state.selectedAccounts )\n    )\n    this.setState({ selectedAccounts: [] })\n  }\n\n  // Free the selected accounts from groups\n  assignSelectedAccountsToGroup = (event, groupId) => {\n    if (event.nativeEvent.defaultPrevented) {\n      return\n    }\n\n    let selected = this.state.selectedAccounts\n\n    // send selection and groupid to server\n    this.props.wsSession.send(\n      wsAssignSelectedAccountsToGroup( groupId, selected )\n    )\n\n    this.setState({ selectedAccounts: [] })\n    // console.log('assign to group !!! > ' + groupId)\n  }\n\n  addGroup = (name) => {\n    // send WsAddGroup\n    this.props.wsSession.send(\n      wsGroupAdd()\n    )\n    // console.log('addgroup!!!')\n    // console.log(this.props)\n\n  }\n\n  removeGroup = (groupId) => {\n    // send WsAddGroup\n    this.props.wsSession.send(\n      wsGroupRemove(groupId)\n    )\n  }\n\n  automateGroupCreation = (numberOfGroups) => {\n    // send WsAddGroup\n    this.props.wsSession.send(\n      wsAutomateGroupsCreation(numberOfGroups)\n    )\n  }\n\n  render() {\n    console.log(this.context)\n    const style = {\n      gray: {\n        color: '#565555'\n      }\n    }\n    return (\n      <Card\n        style={{\n          paddingBottom: 20,\n        }}\n      >\n        <CardHeader\n          title={ <span><ShowChart /> Results manager </span> }\n          subtitle=\"Results manager\"\n        />\n        <CardHeader\n          title={ <span><LocalAtm /> Results manager </span> }\n        />\n\n      </Card>\n    )\n  }\n}\n\nexport default ResultsManager\n"],"sourceRoot":"/source/"}