{"version":3,"sources":["components/admin/results/results-manager.js"],"names":["ResultsManager","state","_input","style","gray","color","paddingBottom","accounts","propTypes","contextTypes","muiTheme","object","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAGA;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAMA;;;;AA1BA;IA8BMA,c;;;AAUJ,4BAAc;AAAA;;AAAA;;AAEZ,UAAKC,KAAL,GAAa,EAAb;;AAIA;AACA,UAAKC,MAAL,GAAc,EAAd;AAPY;AAQb;;;;6BAEQ;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,UAAMC,QAAQ;AACZC,cAAM;AACJC,iBAAO;AADH;AADM,OAAd;;AAMA,aACE;AAAA;AAAA;AACE,iBAAO;AACLC,2BAAe;AADV;AADT;AAKE;AACE,iBAAQ;AAAA;AAAA;AAAM,oEAAN;AAAA;AAAA,WADV;AAEE,oBAAS;AAFX,UALF;AASE;AACE,iBAAQ;AAAA;AAAA;AAAM,mEAAN;AAAA;AAAA;AADV,UATF;AAYIC;AAZJ,OADF;AAgBD;;;;AA1FH;AACA;AACA;;;AAVA;;AAXA;;;AA4BMP,c,CACGQ,S,GAAY;AACjB;AACA;AAFiB,C;AADfR,c,CAMGS,Y,GAAe;AACpBC,YAAU,iBAAUC,MAAV,CAAiBC;AADP,C;kBA8ETZ,c","file":"components/admin/results/results-manager.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\n// groups\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n// import FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Avatar from 'material-ui/Avatar';\n\nimport Class from 'material-ui/svg-icons/action/class';\nimport Language from 'material-ui/svg-icons/action/language';\nimport Group from 'material-ui/svg-icons/social/group';\nimport GroupAdd from 'material-ui/svg-icons/social/group-add';\nimport PersonOutline from 'material-ui/svg-icons/social/person-outline';\nimport DeveloperBoard from 'material-ui/svg-icons/hardware/developer-board';\n\n// Icons\n\nimport ShowChart from 'material-ui/svg-icons/editor/show-chart';\nimport LocalAtm from 'material-ui/svg-icons/maps/local-atm';\nimport Memory from 'material-ui/svg-icons/hardware/memory';\nimport ModeEdit from 'material-ui/svg-icons/editor/mode-edit';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport NavigationClose from 'material-ui/svg-icons/navigation/close';\n//\n// import GeneralInfoContainer from './general-info-container';\n// import SessionTrackerContainer from './session-tracker-container';\n\n\nimport {\n\n} from '../../../websocket-message/server-actions'\n\nclass ResultsManager extends Component {\n  static propTypes = {\n    // groups: PropTypes.object,\n    // unassignedAccounts: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  constructor() {\n    super()\n    this.state = {\n\n    };\n\n    // Used to store references.\n    this._input = {};\n  }\n\n  render() {\n    // let surveyxMonetaryTypeIndex = this.props.storeSession.session.surveyPath.reduce(\n    //   (prev, element, index) => {\n    //     // The survey have a monetary value?\n    //     if (element.type == 'RESULTS' || element.type == 'MATH_RESULTS') {\n    //       prev.push( index )\n    //       return prev\n    //     }\n    //     return prev\n    //   },\n    //   []\n    // )\n    //\n    // let accounts = this.props.storeSession.accounts.list.map(\n    //   ( account, index ) => {\n    //     let accountComponent = []\n    //     accountComponent.push( <span key={account.email}> {account.firstName} {account.surname} {account.email} </span> )\n    //     let moneyData = this.props.storeSession.results.filter(\n    //       (element) => element.creator == account && surveyxMonetaryTypeIndex.includes( element. )\n    //     )\n    //     accountComponent = [\n    //       ...accountComponent,\n    //       ...this.props.storeSession.reduce(\n    //         (prev, current, index) => {\n    //           if (  ) {\n    //\n    //           } else {\n    //\n    //           }\n    //         },\n    //         []\n    //       )\n    //     ]\n    //     return <div key={index}> accountComponent </div>\n    //   }\n    // )\n\n    // let result =\n\n    const style = {\n      gray: {\n        color: '#565555'\n      }\n    }\n\n    return (\n      <Card\n        style={{\n          paddingBottom: 20,\n        }}\n      >\n        <CardHeader\n          title={ <span><ShowChart /> Results manager </span> }\n          subtitle=\"Results manager\"\n        />\n        <CardHeader\n          title={ <span><LocalAtm /> Results manager </span> }\n        />\n        { accounts }\n      </Card>\n    )\n  }\n}\n\nexport default ResultsManager\n"],"sourceRoot":"/source/"}