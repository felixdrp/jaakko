{"version":3,"sources":["components/admin/control-room.js"],"names":["ControlRoom","handleToggle","setState","openSideMenu","state","handleClose","wsSession","storeSession","console","log","mlk","ws","WebSocket","location","hostname","parseInt","port","onmessage","event","message","data","test","JSON","parse","type","action","payload","onopen","e","websocket","send","close","style","gray","color","iconGray","fill","position","top","marginRight","horizontal","vertical","open","textDecoration","props","children","cloneElement","accounts","groups","Component"],"mappings":"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","file":"components/admin/control-room.js","sourcesContent":["import React from 'react';\nimport AppBar from 'material-ui/AppBar';\nimport IconButton from 'material-ui/IconButton';\nimport IconMenu from 'material-ui/IconMenu';\nimport MenuItem from 'material-ui/MenuItem';\nimport Drawer from 'material-ui/Drawer';\n\nimport Memory from 'material-ui/svg-icons/hardware/memory';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport Group from 'material-ui/svg-icons/social/group';\nimport Class from 'material-ui/svg-icons/action/class';\nimport ShowChart from 'material-ui/svg-icons/editor/show-chart';\n\nimport { Link } from 'react-router'\n\nimport WebSocketSimple from '../../websocket-message/websocket-simple'\n\nimport {\n  SESSION_STATE_GET,\n\n  wsSessionStateGet,\n} from '../../websocket-message/query-actions'\n\nimport {\n  // Remove the WS from a store state\n  storeStateWithoutWebSocket,\n} from '../../actions/actions'\n\n// import Perf from 'react-addons-perf'\n// window.Perf = Perf\n\nclass ControlRoom extends React.Component {\n  // static childContextTypes = {\n  //   wsSession: React.PropTypes.object\n  // }\n  //\n  // async getChildContext() {\n  //   return { wsSession: this.state.wsSession };\n  // }\n\n  constructor() {\n    super()\n    this.state = {\n      // WebSocket Session, used to create an admin connection.\n      wsSession: {},\n      // storeSession. Estore the server session store.\n      storeSession: {},\n      openSideMenu: false,\n    };\n  }\n\n  componentWillMount() {\n    console.log('testing storeStateWithoutWebSocket' + storeStateWithoutWebSocket( {mlk: 'supermlk'} ))\n    // Connection example: \"wss://localhost:8008\"\n    let ws = new WebSocket( 'wss://' + location.hostname + ':' + (parseInt(location.port) + 1) )\n\n    ws.onmessage = (event) => {\n      // Check the query.\n      // Process action.\n      let message\n      console.log( '>>>' + event.data )\n      if ( /^\\{.*\\}$/.test(event.data) ) {\n        message = JSON.parse(event.data)\n      } else {\n        console.log(event.data)\n        return\n      }\n      console.log( '>>>' + JSON.stringify(event.data) )\n\n      switch ( message.type ) {\n        // Process message of type MUTATE\n        case 'MUTATE':\n          // mutate({\n          //   action: message.action,\n          //   payload: message.payload,\n          //   websocket,\n          //   store\n          // })\n          break\n        // Process message of type QUERY\n        case 'QUERY':\n          // console.log(message.type + ' ' + message.payload.email || '')\n          break\n        // Process message of type ACTIONS\n        default:\n          switch ( message.action ) {\n            case SESSION_STATE_GET:\n              this.setState({ storeSession: message.payload})\n              break;\n            default:\n\n          }\n          // dispatch 'ACTIONS'\n          console.log(message.type + ' ' + message.payload || '')\n          // store.dispatch( { type: message.action, payload: message.payload } )\n      }\n    }\n    ws.onopen = (e) => {\n      // var websocket used to send data.\n      let websocket = new WebSocketSimple(ws)\n      // Ask for the server state\n      websocket.send( wsSessionStateGet() )\n      this.setState({ wsSession: websocket })\n    }\n  }\n\n  async componentWillUnmount() {\n    this.state.wsSession.ws.close()\n    this.setState({ wsSession: {} })\n    // debugger\n  }\n\n  handleToggle = () => this.setState({openSideMenu: !this.state.openSideMenu});\n\n  handleClose = () => this.setState({openSideMenu: false});\n\n  render() {\n    const style = {\n      gray: {\n        color: '#565555'\n      },\n      iconGray: {\n        fill: '#565555',\n        position: 'relative',\n        top: 6,\n        marginRight: 7,\n      }\n    }\n    return (\n      <div>\n        <AppBar\n          title=\"Study Admin\"\n          iconElementLeft={\n            <IconButton onTouchTap={this.handleToggle}>\n              <Memory />\n            </IconButton>\n          }\n          iconElementRight={\n            <IconMenu\n              iconButtonElement={\n                <IconButton><MoreVertIcon /></IconButton>\n              }\n              targetOrigin={{horizontal: 'right', vertical: 'top'}}\n              anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n            >\n              <MenuItem primaryText=\"Refresh\" />\n              <MenuItem primaryText=\"Help\" />\n              <MenuItem primaryText=\"Sign out\" />\n            </IconMenu>\n          }\n        />\n        <Drawer\n          docked={false}\n          width={200}\n          open={this.state.openSideMenu}\n          onRequestChange={(open) => this.setState({openSideMenu: open})}\n        >\n          <Link to={`/controlRoom/groups`} style={{ textDecoration: 'none' }}>\n            <MenuItem onTouchTap={this.handleClose}>\n              <span style={style.gray}>\n                <Group style={style.iconGray} />\n                Groups manager\n              </span>\n            </MenuItem>\n          </Link>\n\n          <Link to={`/controlRoom/sessionControl`} style={{ textDecoration: 'none' }}>\n            <MenuItem onTouchTap={this.handleClose}>\n              <span style={style.gray}>\n                <Class style={style.iconGray} />\n                Session manager\n              </span>\n            </MenuItem>\n          </Link>\n\n          <Link to={`/controlRoom/results`} style={{ textDecoration: 'none' }}>\n            <MenuItem onTouchTap={this.handleClose}>\n              <span style={style.gray}>\n                <ShowChart style={style.iconGray} />\n                Result manager\n              </span>\n            </MenuItem>\n          </Link>\n        </Drawer>\n        {\n          this.props.children &&\n          React.cloneElement(\n            this.props.children,\n            {\n              wsSession: this.state.wsSession,\n              accounts: this.state.storeSession.accounts,\n              groups: this.state.storeSession.groups,\n              storeSession: this.state.storeSession,\n            }\n          )\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default ControlRoom;\n"],"sourceRoot":"/source/"}