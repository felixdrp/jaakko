{"version":3,"sources":["components/admin/control-room.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;AAGA;;;;AAEA;;AAQA;;;;AAKA;AACA;;AAlBA;;IAoBM,W;;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAc;AAAA;;AAAA;;AAEZ,UAAK,KAAL,GAAa;AACX;AACA,iBAAW,EAFA;AAGX;AACA,oBAAc;AAJH,KAAb;AAFY;AAQb;;;;yCAEoB;AAAA;;AACnB,cAAQ,GAAR,CAAY,uCAAuC,yCAA4B,EAAC,KAAK,UAAN,EAA5B,CAAnD;AACA;AACA,UAAI,KAAK,IAAI,SAAJ,CAAe,WAAW,SAAS,QAApB,GAA+B,GAA/B,IAAsC,SAAS,SAAS,IAAlB,IAA0B,CAAhE,CAAf,CAAT;;AAEA,SAAG,SAAH,GAAe,UAAC,KAAD,EAAW;AACxB;AACA;AACA,YAAI,gBAAJ;AACA,gBAAQ,GAAR,CAAa,QAAQ,MAAM,IAA3B;AACA,YAAK,WAAW,IAAX,CAAgB,MAAM,IAAtB,CAAL,EAAmC;AACjC,oBAAU,KAAK,KAAL,CAAW,MAAM,IAAjB,CAAV;AACD,SAFD,MAEO;AACL,kBAAQ,GAAR,CAAY,MAAM,IAAlB;AACA;AACD;AACD,gBAAQ,GAAR,CAAa,QAAQ,yBAAe,MAAM,IAArB,CAArB;;AAEA,gBAAS,QAAQ,IAAjB;AACE;AACA,eAAK,QAAL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACA,eAAK,OAAL;AACE;AACA;AACF;AACA;AACE,oBAAS,QAAQ,MAAjB;AACE;AACE,uBAAK,QAAL,CAAc,EAAE,cAAc,QAAQ,OAAxB,EAAd;AACA;AACF;;AAJF;AAOA;AACA,oBAAQ,GAAR,CAAY,QAAQ,IAAR,GAAe,GAAf,GAAqB,QAAQ,OAA7B,IAAwC,EAApD;AACA;AAzBJ;AA2BD,OAxCD;AAyCA,SAAG,MAAH,GAAY,UAAC,CAAD,EAAO;AACjB;AACA,YAAI,YAAY,8BAAoB,EAApB,CAAhB;AACA;AACA,kBAAU,IAAV,CAAgB,sCAAhB;AACA,eAAK,QAAL,CAAc,EAAE,WAAW,SAAb,EAAd;AACD,OAND;AAOD;;;;;;;;;AAGC,qBAAK,KAAL,CAAW,SAAX,CAAqB,EAArB,CAAwB,KAAxB;AACA,qBAAK,QAAL,CAAc,EAAE,WAAW,EAAb,EAAd;AACA;;;;;;;;;;;;;;;;;;6BAGO;;AAEP,aACE;AAAA;AAAA;AACE;AACE,iBAAM,aADR;AAEE,2BAAiB;AAAA;AAAA;AAAY;AAAZ,WAFnB;AAGE,4BACE;AAAA;AAAA;AACE,iCACE;AAAA;AAAA;AAAY;AAAZ,eAFJ;AAIE,4BAAc,EAAC,YAAY,OAAb,EAAsB,UAAU,KAAhC,EAJhB;AAKE,4BAAc,EAAC,YAAY,OAAb,EAAsB,UAAU,KAAhC;AALhB;AAOE,gEAAU,aAAY,SAAtB,GAPF;AAQE,gEAAU,aAAY,MAAtB,GARF;AASE,gEAAU,aAAY,UAAtB;AATF;AAJJ,UADF;AAmBA;AACE,qBAAY,KAAK,KAAL,CAAW,SADzB;AAEE,oBAAU,KAAK,KAAL,CAAW,YAAX,CAAwB,QAFpC;AAGE,kBAAQ,KAAK,KAAL,CAAW,YAAX,CAAwB;AAHlC;AAnBA,OADF;AA2BD;;;EA7GuB,gBAAM,S;;kBAgHjB,W","file":"components/admin/control-room.js","sourcesContent":["import React from 'react';\nimport AppBar from 'material-ui/AppBar';\nimport IconButton from 'material-ui/IconButton';\nimport IconMenu from 'material-ui/IconMenu';\nimport MenuItem from 'material-ui/MenuItem';\n\nimport Memory from 'material-ui/svg-icons/hardware/memory';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\n\nimport { GroupManager } from './groups';\n// import GroupManager from './groups/group-manager';\n\nimport WebSocketSimple from '../../websocket-message/websocket-simple'\n\nimport {\n  SESSION_STATE_GET,\n} from '../../websocket-message/query-actions'\n\nimport {\n  wsSessionStateGet,\n} from '../../websocket-message/query-actions'\n\nimport {\n  // Remove the WS from a store state\n  storeStateWithoutWebSocket,\n} from '../../actions/actions'\n\n// import Perf from 'react-addons-perf'\n// window.Perf = Perf\n\nclass ControlRoom extends React.Component {\n  // static childContextTypes = {\n  //   wsSession: React.PropTypes.object\n  // }\n  //\n  // async getChildContext() {\n  //   return { wsSession: this.state.wsSession };\n  // }\n\n  constructor() {\n    super()\n    this.state = {\n      // WebSocket Session, used to create an admin connection.\n      wsSession: {},\n      // storeSession. Estore the server session store.\n      storeSession: {},\n    };\n  }\n\n  componentWillMount() {\n    console.log('testing storeStateWithoutWebSocket' + storeStateWithoutWebSocket( {mlk: 'supermlk'} ))\n    // Connection example: \"wss://localhost:8008\"\n    let ws = new WebSocket( 'wss://' + location.hostname + ':' + (parseInt(location.port) + 1) )\n\n    ws.onmessage = (event) => {\n      // Check the query.\n      // Process action.\n      let message\n      console.log( '>>>' + event.data )\n      if ( /^\\{.*\\}$/.test(event.data) ) {\n        message = JSON.parse(event.data)\n      } else {\n        console.log(event.data)\n        return\n      }\n      console.log( '>>>' + JSON.stringify(event.data) )\n\n      switch ( message.type ) {\n        // Process message of type MUTATE\n        case 'MUTATE':\n          // mutate({\n          //   action: message.action,\n          //   payload: message.payload,\n          //   websocket,\n          //   store\n          // })\n          break\n        // Process message of type QUERY\n        case 'QUERY':\n          // console.log(message.type + ' ' + message.payload.email || '')\n          break\n        // Process message of type ACTIONS\n        default:\n          switch ( message.action ) {\n            case SESSION_STATE_GET:\n              this.setState({ storeSession: message.payload})\n              break;\n            default:\n\n          }\n          // dispatch 'ACTIONS'\n          console.log(message.type + ' ' + message.payload || '')\n          // store.dispatch( { type: message.action, payload: message.payload } )\n      }\n    }\n    ws.onopen = (e) => {\n      // var websocket used to send data.\n      let websocket = new WebSocketSimple(ws)\n      // Ask for the server state\n      websocket.send( wsSessionStateGet() )\n      this.setState({ wsSession: websocket })\n    }\n  }\n\n  async componentWillUnmount() {\n    this.state.wsSession.ws.close()\n    this.setState({ wsSession: {} })\n    // debugger\n  }\n\n  render() {\n\n    return (\n      <div>\n        <AppBar\n          title=\"Study Admin\"\n          iconElementLeft={<IconButton><Memory /></IconButton>}\n          iconElementRight={\n            <IconMenu\n              iconButtonElement={\n                <IconButton><MoreVertIcon /></IconButton>\n              }\n              targetOrigin={{horizontal: 'right', vertical: 'top'}}\n              anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n            >\n              <MenuItem primaryText=\"Refresh\" />\n              <MenuItem primaryText=\"Help\" />\n              <MenuItem primaryText=\"Sign out\" />\n            </IconMenu>\n          }\n        />\n\n      <GroupManager\n        wsSession={ this.state.wsSession }\n        accounts={this.state.storeSession.accounts}\n        groups={this.state.storeSession.groups}\n      />\n      </div>\n    );\n  }\n}\n\nexport default ControlRoom;\n"],"sourceRoot":"/source/"}