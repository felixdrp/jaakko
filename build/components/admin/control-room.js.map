{"version":3,"sources":["components/admin/control-room.js"],"names":["ControlRoom","state","wsSession","storeSession","console","log","mlk","ws","WebSocket","location","hostname","parseInt","port","onmessage","event","message","data","test","JSON","parse","type","action","setState","payload","onopen","e","websocket","send","close","horizontal","vertical","accounts","groups","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;AAGA;;;;AAEA;;AAQA;;;;AAKA;AACA;;AAlBA;;IAoBMA,W;;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAc;AAAA;;AAAA;;AAEZ,UAAKC,KAAL,GAAa;AACX;AACAC,iBAAW,EAFA;AAGX;AACAC,oBAAc;AAJH,KAAb;AAFY;AAQb;;;;yCAEoB;AAAA;;AACnBC,cAAQC,GAAR,CAAY,uCAAuC,yCAA4B,EAACC,KAAK,UAAN,EAA5B,CAAnD;AACA;AACA,UAAIC,KAAK,IAAIC,SAAJ,CAAe,WAAWC,SAASC,QAApB,GAA+B,GAA/B,IAAsCC,SAASF,SAASG,IAAlB,IAA0B,CAAhE,CAAf,CAAT;;AAEAL,SAAGM,SAAH,GAAe,UAACC,KAAD,EAAW;AACxB;AACA;AACA,YAAIC,gBAAJ;AACAX,gBAAQC,GAAR,CAAa,QAAQS,MAAME,IAA3B;AACA,YAAK,WAAWC,IAAX,CAAgBH,MAAME,IAAtB,CAAL,EAAmC;AACjCD,oBAAUG,KAAKC,KAAL,CAAWL,MAAME,IAAjB,CAAV;AACD,SAFD,MAEO;AACLZ,kBAAQC,GAAR,CAAYS,MAAME,IAAlB;AACA;AACD;AACDZ,gBAAQC,GAAR,CAAa,QAAQ,yBAAeS,MAAME,IAArB,CAArB;;AAEA,gBAASD,QAAQK,IAAjB;AACE;AACA,eAAK,QAAL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACA,eAAK,OAAL;AACE;AACA;AACF;AACA;AACE,oBAASL,QAAQM,MAAjB;AACE;AACE,uBAAKC,QAAL,CAAc,EAAEnB,cAAcY,QAAQQ,OAAxB,EAAd;AACA;AACF;;AAJF;AAOA;AACAnB,oBAAQC,GAAR,CAAYU,QAAQK,IAAR,GAAe,GAAf,GAAqBL,QAAQQ,OAA7B,IAAwC,EAApD;AACA;AAzBJ;AA2BD,OAxCD;AAyCAhB,SAAGiB,MAAH,GAAY,UAACC,CAAD,EAAO;AACjB;AACA,YAAIC,YAAY,8BAAoBnB,EAApB,CAAhB;AACA;AACAmB,kBAAUC,IAAV,CAAgB,sCAAhB;AACA,eAAKL,QAAL,CAAc,EAAEpB,WAAWwB,SAAb,EAAd;AACD,OAND;AAOD;;;;;;;;;AAGC,qBAAKzB,KAAL,CAAWC,SAAX,CAAqBK,EAArB,CAAwBqB,KAAxB;AACA,qBAAKN,QAAL,CAAc,EAAEpB,WAAW,EAAb,EAAd;AACA;;;;;;;;;;;;;;;;;;6BAGO;;AAEP,aACE;AAAA;AAAA;AACE;AACE,iBAAM,aADR;AAEE,2BAAiB;AAAA;AAAA;AAAY;AAAZ,WAFnB;AAGE,4BACE;AAAA;AAAA;AACE,iCACE;AAAA;AAAA;AAAY;AAAZ,eAFJ;AAIE,4BAAc,EAAC2B,YAAY,OAAb,EAAsBC,UAAU,KAAhC,EAJhB;AAKE,4BAAc,EAACD,YAAY,OAAb,EAAsBC,UAAU,KAAhC;AALhB;AAOE,gEAAU,aAAY,SAAtB,GAPF;AAQE,gEAAU,aAAY,MAAtB,GARF;AASE,gEAAU,aAAY,UAAtB;AATF;AAJJ,UADF;AAmBA;AACE,qBAAY,KAAK7B,KAAL,CAAWC,SADzB;AAEE,oBAAU,KAAKD,KAAL,CAAWE,YAAX,CAAwB4B,QAFpC;AAGE,kBAAQ,KAAK9B,KAAL,CAAWE,YAAX,CAAwB6B;AAHlC;AAnBA,OADF;AA2BD;;;EA7GuB,gBAAMC,S;;kBAgHjBjC,W","file":"components/admin/control-room.js","sourcesContent":["import React from 'react';\nimport AppBar from 'material-ui/AppBar';\nimport IconButton from 'material-ui/IconButton';\nimport IconMenu from 'material-ui/IconMenu';\nimport MenuItem from 'material-ui/MenuItem';\n\nimport Memory from 'material-ui/svg-icons/hardware/memory';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\n\nimport { GroupManager } from './groups';\n// import GroupManager from './groups/group-manager';\n\nimport WebSocketSimple from '../../websocket-message/websocket-simple'\n\nimport {\n  SESSION_STATE_GET,\n} from '../../websocket-message/query-actions'\n\nimport {\n  wsSessionStateGet,\n} from '../../websocket-message/query-actions'\n\nimport {\n  // Remove the WS from a store state\n  storeStateWithoutWebSocket,\n} from '../../actions/actions'\n\n// import Perf from 'react-addons-perf'\n// window.Perf = Perf\n\nclass ControlRoom extends React.Component {\n  // static childContextTypes = {\n  //   wsSession: React.PropTypes.object\n  // }\n  //\n  // async getChildContext() {\n  //   return { wsSession: this.state.wsSession };\n  // }\n\n  constructor() {\n    super()\n    this.state = {\n      // WebSocket Session, used to create an admin connection.\n      wsSession: {},\n      // storeSession. Estore the server session store.\n      storeSession: {},\n    };\n  }\n\n  componentWillMount() {\n    console.log('testing storeStateWithoutWebSocket' + storeStateWithoutWebSocket( {mlk: 'supermlk'} ))\n    // Connection example: \"wss://localhost:8008\"\n    let ws = new WebSocket( 'wss://' + location.hostname + ':' + (parseInt(location.port) + 1) )\n\n    ws.onmessage = (event) => {\n      // Check the query.\n      // Process action.\n      let message\n      console.log( '>>>' + event.data )\n      if ( /^\\{.*\\}$/.test(event.data) ) {\n        message = JSON.parse(event.data)\n      } else {\n        console.log(event.data)\n        return\n      }\n      console.log( '>>>' + JSON.stringify(event.data) )\n\n      switch ( message.type ) {\n        // Process message of type MUTATE\n        case 'MUTATE':\n          // mutate({\n          //   action: message.action,\n          //   payload: message.payload,\n          //   websocket,\n          //   store\n          // })\n          break\n        // Process message of type QUERY\n        case 'QUERY':\n          // console.log(message.type + ' ' + message.payload.email || '')\n          break\n        // Process message of type ACTIONS\n        default:\n          switch ( message.action ) {\n            case SESSION_STATE_GET:\n              this.setState({ storeSession: message.payload})\n              break;\n            default:\n\n          }\n          // dispatch 'ACTIONS'\n          console.log(message.type + ' ' + message.payload || '')\n          // store.dispatch( { type: message.action, payload: message.payload } )\n      }\n    }\n    ws.onopen = (e) => {\n      // var websocket used to send data.\n      let websocket = new WebSocketSimple(ws)\n      // Ask for the server state\n      websocket.send( wsSessionStateGet() )\n      this.setState({ wsSession: websocket })\n    }\n  }\n\n  async componentWillUnmount() {\n    this.state.wsSession.ws.close()\n    this.setState({ wsSession: {} })\n    // debugger\n  }\n\n  render() {\n\n    return (\n      <div>\n        <AppBar\n          title=\"Study Admin\"\n          iconElementLeft={<IconButton><Memory /></IconButton>}\n          iconElementRight={\n            <IconMenu\n              iconButtonElement={\n                <IconButton><MoreVertIcon /></IconButton>\n              }\n              targetOrigin={{horizontal: 'right', vertical: 'top'}}\n              anchorOrigin={{horizontal: 'right', vertical: 'top'}}\n            >\n              <MenuItem primaryText=\"Refresh\" />\n              <MenuItem primaryText=\"Help\" />\n              <MenuItem primaryText=\"Sign out\" />\n            </IconMenu>\n          }\n        />\n\n      <GroupManager\n        wsSession={ this.state.wsSession }\n        accounts={this.state.storeSession.accounts}\n        groups={this.state.storeSession.groups}\n      />\n      </div>\n    );\n  }\n}\n\nexport default ControlRoom;\n"],"sourceRoot":"/source/"}