{"version":3,"sources":["components/admin/groups/group-container.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;IAEM,c;;;AAYJ,4BAAc;AAAA;;AAAA;;AAEZ,UAAK,KAAL,GAAa;AACX,gBAAU,EADC;AAEX,cAAQ,EAFG;AAGX,iBAAW;AAHA,KAAb;;AAMA;AACA,UAAK,MAAL,GAAc,EAAd;AATY;AAUb;;;;6BAEQ;AACP,cAAQ,GAAR,CAAY,KAAK,OAAjB;AACA,UAAM,QAAQ;AACZ,cAAM;AACJ,iBAAO;AADH;AADM,OAAd;AAKA,UAAI,QAAQ,KAAK,KAAjB;AACA,UAAI,YAAY,EAAhB;AACA,UAAK,MAAM,MAAX,EAAmB;AACjB,oBAAY,MAAM,MAAN,CAAa,IAAb,CAAkB,GAAlB,CACV,UAAC,OAAD,EAAU,KAAV;AAAA,iBACE;AACE,iBAAK,KADP;AAEE,qBAAS,OAFX;AAGE,4BAAgB,MAAM,MAAN,CAAa,OAAb,EAAsB,MAHxC;AAIE,2BAAgB,yBAAK,CAAE,CAJzB;AAKE,yBAAc,uBAAM;AAAC,oBAAM,WAAN,CAAkB,OAAlB;AAA2B;AALlD,YADF;AAAA,SADU,CAAZ;AAWD;;AAED,aACE;AAAA;AAAA;AACE,iBAAO;AACL,qBAAS,MADJ;AAEL,sBAAU;AAFL;AADT;AAMG;AANH,OADF;AAUD;;;;;AAzDG,c,CACG,S,GAAY;AACjB,UAAQ,iBAAU,MADD;AAEjB,YAAU,iBAAU;AAFH,C;AADf,c,CAMG,Y,GAAe;AACpB,YAAU,iBAAU,MAAV,CAAiB;AADP,C;kBAsDT,c","file":"components/admin/groups/group-container.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\nimport { GroupView } from './';\n\nclass GroupContainer extends Component {\n  static propTypes = {\n    groups: PropTypes.object,\n    accounts: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n    // wsSession: PropTypes.object,\n    // websocket: PropTypes.object,\n  };\n\n  constructor() {\n    super()\n    this.state = {\n      accounts: { },\n      groups: { },\n      selection: [],\n    };\n\n    // Used to store references.\n    this._input = {};\n  }\n\n  render() {\n    console.log(this.context)\n    const style = {\n      gray: {\n        color: '#565555'\n      }\n    }\n    let props = this.props\n    let groupList = ''\n    if  (props.groups) {\n      groupList = props.groups.list.map(\n        (groupId, index) => (\n          <GroupView\n            key={index}\n            groupId={groupId}\n            accountsNumber={props.groups[groupId].length}\n            assignToGroup={ ()=> {} }\n            removeGroup={ () => {props.removeGroup(groupId)} }\n          />\n        )\n      )\n    }\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n        }}\n      >\n        {groupList}\n      </div>\n    )\n  }\n}\n\nexport default GroupContainer\n"],"sourceRoot":"/source/"}