{"version":3,"sources":["components/admin/groups/unassigned-container.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;AAEA;;;;;;IAGM,mB;;;AAYJ,iCAAc;AAAA;;AAAA;;AAEZ,UAAK,KAAL,GAAa;AACX,gBAAU,EADC;AAEX,cAAQ,EAFG;AAGX,iBAAW;AAHA,KAAb;;AAMA;AACA,UAAK,MAAL,GAAc,EAAd;AATY;AAUb;;;;6BAEQ;AACP,cAAQ,GAAR,CAAY,KAAK,OAAjB;AACA,UAAM,QAAQ;AACZ,cAAM;AACJ,iBAAO;AADH;AADM,OAAd;AAKA,UAAI,QAAQ,KAAK,KAAjB;AACA,UAAI,qBAAqB;AACvB,cAAM;AADiB,OAAzB;;AAIA,UAAI,MAAM,QAAV,EAAoB;AAClB;AACA,2BAAmB,IAAnB,GAA0B,MAAM,QAAN,CAAe,IAAf,CAAoB,MAApB,CACxB,UAAC,SAAD;AAAA,iBAAe,MAAM,QAAN,CAAe,SAAf,EAA0B,KAA1B,IAAmC,YAAnC,GAAiD,IAAjD,GAAuD,KAAtE;AAAA,SADwB,CAA1B;AAGA;AACA,2BAAmB,IAAnB,CAAwB,GAAxB,CACE,UAAC,SAAD,EAAe;AACb,6BAAmB,SAAnB,IAAgC,oBAAU,MAAV,CAAiB;AAC/C,uBAAW,MAAM,QAAN,CAAe,SAAf,EAA0B,SADU;AAE/C,mBAAO,MAAM,QAAN,CAAe,SAAf,EAA0B,KAFc;AAG/C,sBAAU,MAAM,gBAAN,CAAuB,QAAvB,CAAgC,SAAhC;AAHqC,WAAjB,EAI7B,IAJ6B,EAAhC;AAKD,SAPH;AASD;;AAED,aACE;AAAA;AAAA;AACE;AACE,oBAAW,kBADb;AAEE,yBAAgB,yBAAK,CAAE,CAFzB;AAGE,4BAAkB,MAAM;AACxB;AAJF;AADF,OADF;AAUD;;;;;AA/DG,mB,CACG,S,GAAY;AACjB,UAAQ,iBAAU,MADD;AAEjB,sBAAoB,iBAAU;AAFb,C;AADf,mB,CAMG,Y,GAAe;AACpB,YAAU,iBAAU,MAAV,CAAiB;AADP,C;kBA4DT,mB","file":"components/admin/groups/unassigned-container.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\nimport { UnassignedView } from './';\n\nimport Immutable from 'immutable'\n\n\nclass UnassignedContainer extends Component {\n  static propTypes = {\n    groups: PropTypes.object,\n    unassignedAccounts: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n    // wsSession: PropTypes.object,\n    // websocket: PropTypes.object,\n  };\n\n  constructor() {\n    super()\n    this.state = {\n      accounts: { },\n      groups: { },\n      selection: [],\n    };\n\n    // Used to store references.\n    this._input = {};\n  }\n\n  render() {\n    console.log(this.context)\n    const style = {\n      gray: {\n        color: '#565555'\n      }\n    }\n    let props = this.props\n    let unassignedAccounts = {\n      list: [],\n    }\n\n    if (props.accounts) {\n      // Filter the accounts with groups\n      unassignedAccounts.list = props.accounts.list.filter(\n        (accountId) => props.accounts[accountId].group == 'unassigned'? true: false\n      )\n      // Add accounts unassigned\n      unassignedAccounts.list.map(\n        (accountId) => {\n          unassignedAccounts[accountId] = Immutable.fromJS({\n            firstName: props.accounts[accountId].firstName,\n            email: props.accounts[accountId].email,\n            selected: props.selectedAccounts.includes(accountId),\n          }).toJS()\n        }\n      )\n    }\n\n    return (\n      <div>\n        <UnassignedView\n          accounts={ unassignedAccounts }\n          assignToGroup={ ()=> {} }\n          selectionHandler={props.selectionHandler}\n          // removeGroup={ () => {} }\n        />\n      </div>\n    )\n  }\n}\n\nexport default UnassignedContainer\n"],"sourceRoot":"/source/"}