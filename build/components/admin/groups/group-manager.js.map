{"version":3,"sources":["components/admin/groups/group-manager.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAGA;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AAEA;;;;AATA;;AATA;;IAsBM,Y;;;AAYJ,0BAAc;AAAA;;AAAA;;AAAA,UAoCd,QApCc,GAoCH,UAAC,IAAD,EAAU;AACnB;AACA,YAAK,KAAL,CAAW,SAAX,CAAqB,IAArB,CACE,gCADF;AAGA,cAAQ,GAAR,CAAY,aAAZ;AACA,cAAQ,GAAR,CAAY,MAAK,KAAjB;AAED,KA5Ca;;AAEZ,UAAK,KAAL,GAAa;AACX,gBAAU,EADC;AAEX,cAAQ,EAFG;AAGX,iBAAW;AAHA,KAAb;;AAMA;AACA,UAAK,MAAL,GAAc,EAAd;AATY;AAUb;;AAED;AACA;;;;;kCACe,S,EAAW,qB,EAAwB;AAChD,cAAQ,GAAR,CAAY,4BAA4B,SAAxC;AAED;;AAED;;;;oCACgB,S,EAAW;AACzB,cAAQ,GAAR,CAAY,8BAA8B,SAA1C;AACA,cAAQ,GAAR,CAAY,KAAK,KAAjB;AACD;;AAED;;;;+CAC2B;AACzB,cAAQ,GAAR,CAAY,aAAZ;AACD;;AAED;;;;kDAC8B,O,EAAS;AACrC,cAAQ,GAAR,CAAY,2BAA2B,OAAvC;AAED;;;gCAYW,O,EAAS;AACnB,cAAQ,GAAR,CAAY,aAAZ;AACA,cAAQ,GAAR,CAAY,KAAK,KAAjB;AACD;;;6BAEQ;AACP,cAAQ,GAAR,CAAY,KAAK,OAAjB;AACA,UAAM,QAAQ;AACZ,cAAM;AACJ,iBAAO;AADH;AADM,OAAd;AAKA,aACE;AAAA;AAAA;AACE,iBAAO;AACL,2BAAe;AADV;AADT;AAKE;AACE,iBAAQ;AAAA;AAAA;AAAM,gEAAN;AAAA;AAAA,WADV;AAEE,oBAAS;AACT;AAHF,UALF;AAUE;AACE,iBACE;AAAA;AAAA;AACE,6DAAO,OAAO,MAAM,IAApB,GADF;AAEE,sEAAgB,kCAAW,MAAM,IAAjB,IAAuB,aAAa,EAApC,GAAhB,GAFF;AAAA;AAAA,WAFJ;AAQE,oBAAS;AARX,UAVF;AAoBE;AAAA;AAAA;AAAA;AAAA,SApBF;AA0BE;AACE,iBACE;AAAA;AAAA;AACE,6DAAO,OAAO,MAAM,IAApB,GADF;AAEE,gEAAU,kCAAW,MAAM,IAAjB,IAAuB,aAAa,EAApC,GAAV,GAFF;AAAA;AAAA,WAFJ;AAQE,oBAAS;AARX,UA1BF;AAqCE,+DAAqB,UAAU,KAAK,KAAL,CAAW,QAA1C,EAAoD,gBAAiB,KAAK,wBAA1E,EAAqG,kBAAmB,KAAK,aAA7H,GArCF;AAuCE;AAAA;AAAA;AACE;AACA;AACA,mBAAO;AACL,wBAAU,KADL;AAEL,sBAAQ,MAFH;AAGL,yBAAW;AAHN;AAHT;AASE;AACE;AADF,cAEE,OACE;AAAA;AAAA;AACE,kEAAU,OAAO;AACf,4BAAU,UADK;AAEf,uBAAK,CAFU;AAGf,+BAAa;AAHE,iBAAjB,GADF;AAAA;AAAA,aAHJ;AAYE,qBAAU,KAAK,QAZjB;AAaE,6BAAiB,SAbnB;AAcE,mBAAO;AACL;AACA,4BAAc;AAFT;AAdT,YATF;AA6BA,4DAAgB,QAAQ,KAAK,KAAL,CAAW,MAAnC;AA7BA;AAvCF,OADF;AAyED;;;;;AAvKH;;;AAwBM,Y,CACG,S,GAAY;AACjB,UAAQ,iBAAU,MADD;AAEjB,sBAAoB,iBAAU;AAFb,C;AADf,Y,CAMG,Y,GAAe;AACpB,YAAU,iBAAU,MAAV,CAAiB;AADP,C;kBA4IT,Y","file":"components/admin/groups/group-manager.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\n// groups\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n// import FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Avatar from 'material-ui/Avatar';\n\nimport Group from 'material-ui/svg-icons/social/group';\nimport GroupAdd from 'material-ui/svg-icons/social/group-add';\nimport PersonOutline from 'material-ui/svg-icons/social/person-outline';\nimport DeveloperBoard from 'material-ui/svg-icons/hardware/developer-board';\n\n// Icons\n\nimport Memory from 'material-ui/svg-icons/hardware/memory';\nimport ModeEdit from 'material-ui/svg-icons/editor/mode-edit';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport NavigationClose from 'material-ui/svg-icons/navigation/close';\n\nimport { GroupContainer, UnassignedContainer } from './';\n\nimport {\n  wsGroupAdd,\n} from '../../../websocket-message/server-actions'\n\nclass GroupManager extends Component {\n  static propTypes = {\n    groups: PropTypes.object,\n    unassignedAccounts: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n    // wsSession: PropTypes.object,\n    // websocket: PropTypes.object,\n  };\n\n  constructor() {\n    super()\n    this.state = {\n      accounts: { },\n      groups: { },\n      selection: [],\n    };\n\n    // Used to store references.\n    this._input = {};\n  }\n\n  // Add or remove a selection\n  // if maintainPrevSelection == true it will maintain the previus selection\n  selectAccount( accountId, maintainPrevSelection ) {\n    console.log('select an account!!! > ' + accountId)\n\n  }\n\n  // Free an account from group\n  unassignAccount(accountId) {\n    console.log('unassign an account!!! > ' + accountId)\n    console.log(this.props)\n  }\n\n  // Free the selected accounts from groups\n  unassignSelectedAccounts() {\n    console.log('unassign!!!')\n  }\n\n  // Free the selected accounts from groups\n  assignSelectedAccountsToGroup(groupId) {\n    console.log('assign to group !!! > ' + groupId)\n\n  }\n\n  addGroup = (name) => {\n    // send WsAddGroup\n    this.props.wsSession.send(\n      wsGroupAdd()\n    )\n    console.log('addgroup!!!')\n    console.log(this.props)\n\n  }\n\n  removeGroup(groupId) {\n    console.log('addgroup!!!')\n    console.log(this.props)\n  }\n\n  render() {\n    console.log(this.context)\n    const style = {\n      gray: {\n        color: '#565555'\n      }\n    }\n    return (\n      <Card\n        style={{\n          paddingBottom: 20,\n        }}\n      >\n        <CardHeader\n          title={ <span><Group /> Groups manager </span> }\n          subtitle=\"Groups manager\"\n          // avatar=\"images/jsa-128.jpg\"\n        />\n        <CardTitle\n          title={\n            <span>\n              <Group style={style.gray} />\n              <DeveloperBoard style={{...style.gray, marginRight: 10}} />\n              Groups automated\n            </span>\n          }\n          subtitle=\"Groups creation with AI help\"\n        />\n        <CardText>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n          Donec mattis pretium massa. Aliquam erat volutpat. Nulla facilisi.\n          Donec vulputate interdum sollicitudin. Nunc lacinia auctor quam sed pellentesque.\n          Aliquam dui mauris, mattis quis lacus id, pellentesque lobortis odio.\n        </CardText>\n        <CardTitle\n          title={\n            <span>\n              <Group style={style.gray} />\n              <ModeEdit style={{...style.gray, marginRight: 10}} />\n              Groups customization\n            </span>\n          }\n          subtitle=\"Groups manual fine customization\"\n        />\n\n        <UnassignedContainer accounts={this.props.accounts} unassingButton={ this.unassignSelectedAccounts } selectionHandler={ this.selectAccount } />\n\n        <div\n          // Assign Groups\n          // Groups Chips\n          style={{\n            minWidth: '95%',\n            margin: '2.5%',\n            marginTop: 65,\n          }}\n        >\n          <RaisedButton\n            // Add group button\n            label={\n              <span>\n                <GroupAdd style={{\n                  position: 'relative',\n                  top: 6,\n                  marginRight: 7,\n                }}/>\n                Add group\n              </span>\n            }\n            onClick={ this.addGroup }\n            backgroundColor={'#ddffb1'}\n            style={{\n              // minWidth: '95%',\n              marginBottom: 20,\n            }}\n          />\n\n        <GroupContainer groups={this.props.groups}/>\n        </div>\n      </Card>\n    )\n  }\n}\n\nexport default GroupManager\n"],"sourceRoot":"/source/"}