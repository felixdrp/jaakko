{"version":3,"sources":["components/admin/groups/group-view.js"],"names":["GroupView","props","context","palette","muiTheme","style","centerIcon","color","position","top","marginLeft","marginRight","buttonLabel","float","paddingLeft","groupId","accountsNumber","groupType","e","nativeEvent","preventDefault","removeGroup","width","paddingBottom","margin","assignToGroup","height","minWidth","display","flexWrap","accounts","list","map","accountId","selected","chipSelected","chip","selectionHandler","unassignAccount","fontWeight","fontFamily","firstName","email","contextTypes","object","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;IAIMA,S;;;;;;;;;;6BAKK;AACP,UAAIC,QAAQ,KAAKA,KAAjB;AACA,UAAIC,UAAU,KAAKA,OAAnB;AACA,UAAIC,UAAUD,QAAQE,QAAR,CAAiBD,OAA/B;AACA,UAAIE,QAAQ;AACVC,oBAAY;AACRC,iBAAO,SADC;AAERC,oBAAU,UAFF;AAGRC,eAAK,CAHG;AAIRC,sBAAY,CAJJ;AAKRC,uBAAa;AALL;AADF,OAAZ;AASA,UAAIC,cACF;AAAA;AAAA;AACE;AAAA;AAAA;AACE,mBAAO;AACLC,qBAAO,MADF;AAELC,2BAAa;AAFR;AADT;AAME;AACE,8CACKT,MAAMC,UADX;AAEEI,0BAAY;AAFd;AADF,YANF;AAAA;AAYST,gBAAMc,OAZf;AAcE;AACE,8CACKV,MAAMC,UADX;AADF,YAdF;AAmBKL,gBAAMe,cAnBX;AAoBE;AAAA;AAAA;AACE,qBAAO;AACLT,uBAAO,SADF;AAELG,4BAAY;AAFP;AADT;AAAA;AAAA,WApBF;AA4BE;AAAA;AAAA;AACE,qBAAO;AACLA,4BAAY;AADP;AADT;AAAA;AAKQT,kBAAMgB;AALd;AA5BF,SADF;AAsCE;AACE,mBAAU,iBAACC,CAAD,EAAO;AAAEA,cAAEC,WAAF,CAAcC,cAAd,GAAgCnB,MAAMoB,WAAN,CAAkBpB,MAAMc,OAAxB;AAAmC,WADxF;AAEE,4CACKV,MAAMC,UADX;AAEEO,mBAAO;AAFT;AAFF;AAtCF,OADF;AAgDA;AACA,aACA;AAAA;AAAA;AACE,iBAAO;AACLS,mBAAO,GADF;AAELC,2BAAe,EAFV;AAGLC,oBAAQ;AAHH;AADT;AAOE;AAAA;AACE;AADF;AAAA,YAEE,SAAUvB,MAAMwB,aAFlB;AAGE,6BAAiB,SAHnB;AAIE,mBAAO;AACLC,sBAAQ,EADH;AAELC,wBAAU,KAFL;AAGLH,sBAAQ;AAHH;AAJT;AAUGZ;AAVH,SAPF;AAAA;AAmBSX,cAAMc,OAnBf;AAoBE;AAAA;AAAA;AACE;AACA,mBAAO;AACLa,uBAAS,MADJ;AAELC,wBAAU,MAFL;AAGLF,wBAAU,KAHL;AAILH,sBAAQ;AAJH;AAFT;AAUEvB,gBAAM6B,QAAN,CAAeC,IAAf,CAAoBC,GAApB,CACE,UAACC,SAAD;AAAA,mBACE;AAAA;AAAA;AACE,qBAAKA,SADP;AAEE,iCAAiBhC,MAAM6B,QAAN,CAAeG,SAAf,EAA0BC,QAA1B,GAAoC/B,QAAQgC,YAA5C,GAA2DhC,QAAQiC,IAFtF;AAGE,4BAAa,oBAAClB,CAAD;AAAA,yBAAOjB,MAAMoC,gBAAN,CAAuBJ,SAAvB,EAAkCf,EAAEC,WAApC,CAAP;AAAA,iBAHf;AAIE,iCAAkB,yBAACD,CAAD;AAAA,yBAAOjB,MAAMqC,eAAN,CAAsBL,SAAtB,CAAP;AAAA,iBAJpB;AAKE,uBAAO;AACLT,0BAAQ;AADH;AALT;AASE;AAAA;AAAA;AACE,yBAAO;AACLe,gCAAY,GADP;AAEL5B,iCAAa,CAFR;AAGL6B,gCAAY;AAHP;AADT;AAOIvC,sBAAM6B,QAAN,CAAeG,SAAf,EAA0BQ;AAP9B,eATF;AAkBIxC,oBAAM6B,QAAN,CAAeG,SAAf,EAA0BS;AAlB9B,aADF;AAAA,WADF;AAVF;AApBF,OADA;AA0DA;;;;;AA7HE1C,S,CACG2C,Y,GAAe;AACpBvC,YAAU,iBAAUwC,MAAV,CAAiBC;AADP,C;kBA+HT7C,S","file":"components/admin/groups/group-view.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Avatar from 'material-ui/Avatar';\nimport Chip from 'material-ui/Chip';\n\nimport Group from 'material-ui/svg-icons/social/group';\nimport GroupAdd from 'material-ui/svg-icons/social/group-add';\nimport PersonOutline from 'material-ui/svg-icons/social/person-outline';\n\nimport {\n  NavigationCancel,\n} from 'material-ui/svg-icons'\n\nclass GroupView extends Component {\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  render() {\n    let props = this.props\n    let context = this.context\n    let palette = context.muiTheme.palette\n    let style = {\n      centerIcon: {\n          color: '#6c6c6c',\n          position: 'relative',\n          top: 6,\n          marginLeft: 7,\n          marginRight: 7,\n      },\n    }\n    let buttonLabel = (\n      <span>\n        <span\n          style={{\n            float: 'left',\n            paddingLeft: 15,\n          }}\n        >\n          <Group\n            style={{\n              ...style.centerIcon,\n              marginLeft: 0,\n            }}\n          />\n          Group {props.groupId}\n\n          <PersonOutline\n            style={{\n              ...style.centerIcon\n            }}\n          />\n            {props.accountsNumber}\n          <span\n            style={{\n              color: '#6c6c6c',\n              marginLeft: 10,\n            }}\n          >\n            Accounts\n          </span>\n          <span\n            style={{\n              marginLeft: 5,\n            }}\n          >\n            Type {props.groupType}\n          </span>\n        </span>\n\n        <NavigationCancel\n          onClick={ (e) => { e.nativeEvent.preventDefault(); props.removeGroup(props.groupId); } }\n          style={{\n            ...style.centerIcon,\n            float: 'right',\n          }}\n        />\n      </span>\n    )\n    // console.log(context)\n    return (\n    <Card\n      style={{\n        width: 460,\n        paddingBottom: 15,\n        margin: 10,\n      }}\n    >\n      <RaisedButton\n        // Group main button\n        onClick={ props.assignToGroup }\n        backgroundColor={'#f59999'}\n        style={{\n          height: 36,\n          minWidth: '95%',\n          margin: '2.5%',\n        }}\n      >\n        {buttonLabel}\n      </ RaisedButton>\n      Group {props.groupId}\n      <div\n        // Group 1 Chips\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          minWidth: '95%',\n          margin: '2.5%',\n        }}\n      >\n      {\n        props.accounts.list.map(\n          (accountId) => (\n            <Chip\n              key={accountId}\n              backgroundColor={props.accounts[accountId].selected? palette.chipSelected : palette.chip}\n              onTouchTap={ (e) => props.selectionHandler(accountId, e.nativeEvent) }\n              onRequestDelete={ (e) => props.unassignAccount(accountId) }\n              style={{\n                margin: 3,\n              }}\n            >\n              <span\n                style={{\n                  fontWeight: 500,\n                  marginRight: 8,\n                  fontFamily: 'monospace',\n                }}\n              >\n                { props.accounts[accountId].firstName }\n              </span>\n              { props.accounts[accountId].email }\n            </Chip>\n          )\n        )\n      }\n      </div>\n    </Card>\n  )};\n}\n\nexport default GroupView\n"],"sourceRoot":"/source/"}