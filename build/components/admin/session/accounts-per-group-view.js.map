{"version":3,"sources":["components/admin/session/accounts-per-group-view.js"],"names":["AccountsPerGroupView","handleTouchTap","event","preventDefault","openMenus","state","slice","anchorEl","index","Number","currentTarget","attributes","getNamedItem","value","setState","handleRequestClose","props","context","groupName","marginLeft","color","fontSize","position","top","marginRight","height","groupType","groupAccounts","length","horizontal","vertical","map","account","propTypes","contextTypes","muiTheme","object","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;IAEMA,oB;;;AAQJ,kCAAc;AAAA;;AAAA;;AAAA,UAQdC,cARc,GAQG,UAACC,KAAD,EAAW;AAC1B;AACAA,YAAMC,cAAN;AACA,UAAIC,YAAY,MAAKC,KAAL,CAAWD,SAAX,CAAqBE,KAArB,EAAhB;AACA,UAAIC,WAAW,MAAKF,KAAL,CAAWE,QAAX,CAAoBD,KAApB,EAAf;AACA,UAAIE,QAAQC,OAAQP,MAAMQ,aAAN,CAAoBC,UAApB,CAA+BC,YAA/B,CAA4C,MAA5C,EAAoDC,KAA5D,CAAZ;;AAEAT,gBAAUI,KAAV,IAAmB,IAAnB;AACAD,eAASC,KAAT,IAAkBN,MAAMQ,aAAxB;;AAEA,YAAKI,QAAL,CAAc;AACZV,4BADY;AAEZG;AAFY,OAAd;AAID,KAtBa;;AAAA,UAwBdQ,kBAxBc,GAwBO,UAACP,KAAD,EAAW;AAC9B,UAAIJ,YAAY,MAAKC,KAAL,CAAWD,SAAX,CAAqBE,KAArB,EAAhB;;AAEAF,gBAAUI,KAAV,IAAmB,KAAnB;AACA,YAAKM,QAAL,CAAc;AACZV;AADY,OAAd;AAGD,KA/Ba;;AAEZ,UAAKC,KAAL,GAAa;AACXD,iBAAW,EADA;AAEXG,gBAAU;AAFC,KAAb;AAFY;AAMb;;;;6BA2BQ;AAAA;;AACP,UAAIS,QAAQ,KAAKA,KAAjB;AACA,UAAIC,UAAU,KAAKA,OAAnB;AACA,UAAIT,QAAQQ,MAAME,SAAlB;;AAEA,aACE;AAAA;AAAA;AACE,iBAAO;AACLC,wBAAY;AADP;AADT;AAKE;AAAA;AAAA;AACE,mBAAO;AACLC,qBAAO,SADF;AAELC,wBAAU;AAFL;AADT;AAME,2DAAO,OAAO;AACZD,qBAAO,SADK;AAEZE,wBAAU,UAFE;AAGZC,mBAAK,CAHO;AAIZC,2BAAa,CAJD;AAKZC,sBAAQ;AALI,aAAd,GANF;AAaIT,gBAAME,SAbV;AAcE;AAAA;AAAA,cAAM,OAAO,EAAEC,YAAY,CAAd,EAAb;AAAA;AACSH,kBAAMU;AADf;AAdF,SALF;AAwBE;AAAA;AAAA;AACE,kBAAMlB,KADR;AAEE,mBAAO;AACLY,qBAAO,SADF;AAELD,0BAAY;AAFP,aAFT;AAME,wBAAY,KAAKlB;AANnB;AAQE,mEAAe,OAAO;AACpBmB,qBAAO,SADa;AAEpBE,wBAAU,UAFU;AAGpBC,mBAAK,CAHe;AAIpBE,sBAAQ;AAJY,aAAtB,GARF;AAAA;AAcKT,gBAAMW,aAAN,CAAoBC;AAdzB,SAxBF;AAwCE;AAAA;AAAA;AACE,kBAAMpB,KADR;AAEE,kBAAM,KAAKH,KAAL,CAAWD,SAAX,CAAqBI,KAArB,KAA+B,KAFvC;AAGE,sBAAU,KAAKH,KAAL,CAAWE,QAAX,CAAoBC,KAApB,CAHZ;AAIE,0BAAc,EAACqB,YAAY,MAAb,EAAqBC,UAAU,QAA/B,EAJhB;AAKE,0BAAc,EAACD,YAAY,MAAb,EAAqBC,UAAU,KAA/B,EALhB;AAME,4BAAiB;AAAA,qBAAM,OAAKf,kBAAL,CAAwBP,KAAxB,CAAN;AAAA;AANnB;AAQE;AAAA;AAAA;AAEIQ,kBAAMW,aAAN,CAAoBI,GAApB,CACE,UAACC,OAAD;AAAA,qBAAa,oDAAU,KAAKA,OAAf,EAAwB,aAAaA,OAArC,GAAb;AAAA,aADF;AAFJ;AARF;AAxCF,OADF;AA2DD;;;;;AAzGGhC,oB,CACGiC,S,GAAY,E;AADfjC,oB,CAIGkC,Y,GAAe;AACpBC,YAAU,iBAAUC,MAAV,CAAiBC;AADP,C;kBAwGTrC,oB","file":"accounts-per-group-view.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\nimport Menu from 'material-ui/Menu';\nimport Popover from 'material-ui/Popover';\nimport MenuItem from 'material-ui/MenuItem';\n\nimport PersonOutline from 'material-ui/svg-icons/social/person-outline';\nimport Group from 'material-ui/svg-icons/social/group';\n\nclass AccountsPerGroupView extends Component {\n  static propTypes = {\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n  };\n\n  constructor() {\n    super()\n    this.state = {\n      openMenus: [],\n      anchorEl: [],\n    };\n  }\n\n  handleTouchTap = (event) => {\n    // This prevents ghost click.\n    event.preventDefault();\n    let openMenus = this.state.openMenus.slice()\n    let anchorEl = this.state.anchorEl.slice()\n    let index = Number( event.currentTarget.attributes.getNamedItem('name').value )\n\n    openMenus[index] = true\n    anchorEl[index] = event.currentTarget\n\n    this.setState({\n      openMenus,\n      anchorEl,\n    });\n  };\n\n  handleRequestClose = (index) => {\n    let openMenus = this.state.openMenus.slice()\n\n    openMenus[index] = false\n    this.setState({\n      openMenus,\n    });\n  };\n\n  render() {\n    let props = this.props\n    let context = this.context\n    let index = props.groupName\n\n    return (\n      <span\n        style={{\n          marginLeft: 40,\n        }}\n      >\n        <span\n          style={{\n            color: '#6c6c6c',\n            fontSize: 13,\n          }}\n        >\n          <Group style={{\n            color: '#6c6c6c',\n            position: 'relative',\n            top: 6,\n            marginRight: 7,\n            height: 21,\n          }} />\n          { props.groupName }\n          <span style={{ marginLeft: 7, }} >\n            Type { props.groupType }\n          </span>\n        </span>\n\n        <span\n          name={index}\n          style={{\n            color: '#6c6c6c',\n            marginLeft: 10,\n          }}\n          onTouchTap={this.handleTouchTap}\n        >\n          <PersonOutline style={{\n            color: '#6c6c6c',\n            position: 'relative',\n            top: 6,\n            height: 21,\n          }} />\n          x{ props.groupAccounts.length }\n        </span>\n        <Popover\n          name={index}\n          open={this.state.openMenus[index] || false}\n          anchorEl={this.state.anchorEl[index]}\n          anchorOrigin={{horizontal: 'left', vertical: 'bottom'}}\n          targetOrigin={{horizontal: 'left', vertical: 'top'}}\n          onRequestClose={ () => this.handleRequestClose(index) }\n        >\n          <Menu>\n            {\n              props.groupAccounts.map(\n                (account) => <MenuItem key={account} primaryText={account} />\n              )\n            }\n          </Menu>\n        </Popover>\n      </span>\n    );\n  }\n}\n\nexport default AccountsPerGroupView\n"]}