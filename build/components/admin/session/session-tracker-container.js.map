{"version":3,"sources":["components/admin/session/session-tracker-container.js"],"names":["SessionTrackerContainer","state","accounts","groups","selection","_input","props","storeSession","groupList","list","reduce","prev","groupID","accountList","length","display","flexDirection","paddingLeft","surveyPath","map","step","index","type","propTypes","contextTypes","muiTheme","object","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AAEA;;;;;;IAEMA,uB;;;AAYJ,qCAAc;AAAA;;AAAA;;AAEZ,UAAKC,KAAL,GAAa;AACXC,gBAAU,EADC;AAEXC,cAAQ,EAFG;AAGXC,iBAAW;AAHA,KAAb;;AAMA;AACA,UAAKC,MAAL,GAAc,EAAd;AATY;AAUb;;;;6BAEQ;AACP,UAAIC,QAAQ,KAAKA,KAAjB;AACA,UAAIC,eAAeD,MAAMC,YAAzB;AACA,UAAIC,YAAY,EAACC,MAAK,EAAN,EAAhB;AAAA,UACIP,WAAW,EADf;AAAA,UAEIC,SAAS,EAFb;;AAIA,UAAK,QAAOI,YAAP,uDAAOA,YAAP,MAAuB,QAAvB,IAAmC,YAAYA,YAApD,EAAmE;AACjEJ,iBAASI,aAAaJ,MAAtB;;AAEA,YAAI,QAAOA,MAAP,uDAAOA,MAAP,MAAiB,QAAjB,IAA6B,UAAUA,MAA3C,EAAmD;AACjDK,sBAAYD,aAAaJ,MAAzB;AACD;;AAEDD,mBAAWC,OAAOM,IAAP,CAAYC,MAAZ,CACT,UAACC,IAAD,EAAOC,OAAP,EAAmB;AACjB,iBAAOD,OAAOR,OAAOS,OAAP,EAAgBC,WAAhB,CAA4BC,MAA1C;AACD,SAHQ,EAIT,CAJS,CAAX;;AAOAX,iBAASA,OAAOM,IAAP,CAAYK,MAArB;AACD;;AAED,aACE;AAAA;AAAA;AACE,iBAAO;AACLC,qBAAS,MADJ;AAELC,2BAAe,QAFV;AAGLC,yBAAa;AAHR;AADT;AAQE,8BAAYC,UAAZ,CAAuBC,GAAvB,CACE,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACf,iBACE;AAAA;AAAA,cAAK,KAAKA,KAAV;AACE,oEADF;AACgBD,iBAAKE;AADrB,WADF;AAKD,SAPH;AARF,OADF;AAqBD;;;;AAxEH;;;AAGMtB,uB,CACGuB,S,GAAY;AACjB;AACA;AAFiB,C;AADfvB,uB,CAMGwB,Y,GAAe;AACpBC,YAAU,iBAAUC,MAAV,CAAiBC;AADP,C;kBAkET3B,uB","file":"components/admin/session/session-tracker-container.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\nimport sessionData from '../../../session-data'\n// import GeneralInfoView from './general-info-view'\nimport PlayArrow from 'material-ui/svg-icons/av/play-arrow';\n\nclass SessionTrackerContainer extends Component {\n  static propTypes = {\n    // groups: PropTypes.object,\n    // accounts: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n    // wsSession: PropTypes.object,\n    // websocket: PropTypes.object,\n  };\n\n  constructor() {\n    super()\n    this.state = {\n      accounts: { },\n      groups: { },\n      selection: [],\n    };\n\n    // Used to store references.\n    this._input = {};\n  }\n\n  render() {\n    let props = this.props\n    let storeSession = props.storeSession\n    let groupList = {list:[]},\n        accounts = '',\n        groups = ''\n\n    if ( typeof storeSession == 'object' && 'groups' in storeSession ) {\n      groups = storeSession.groups\n\n      if (typeof groups == 'object' && 'list' in groups) {\n        groupList = storeSession.groups\n      }\n\n      accounts = groups.list.reduce(\n        (prev, groupID) => {\n          return prev + groups[groupID].accountList.length\n        },\n        0\n      )\n\n      groups = groups.list.length\n    }\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          paddingLeft: 40,\n        }}\n      >\n      {\n        sessionData.surveyPath.map(\n          (step, index) => {\n            return (\n              <div key={index}>\n                <PlayArrow />{step.type}\n              </div>\n            )\n          }\n        )\n      }\n      </div>\n    )\n  }\n}\n\nexport default SessionTrackerContainer\n"],"sourceRoot":"/source/"}