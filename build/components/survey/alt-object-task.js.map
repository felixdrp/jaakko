{"version":3,"sources":["components/survey/alt-object-task.js"],"names":["AltObjectTask","props","addEntry","entries","state","slice","push","name","length","title","description","setState","text","addTodo","event","index","value","textColor","context","muiTheme","palette","display","padding","margin","maxWidth","minWidth","fontSize","color","paddingTop","split","map","item","i","marginBottom","entry","marginTop","marginLeft","width","contextTypes","PropTypes","object","isRequired","router","websocket","propTypes","mapStateToProps","firstName","account"],"mappings":"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","file":"components/survey/alt-object-task.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\n\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport Slider from 'material-ui/Slider';\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton';\n\nimport Timer from './timer'\n\n\nimport { connect } from 'react-redux'\n\nimport Wait from './wait'\n\nimport {\n ActionShop,\n ActionShoppingBasket,\n ActionSpeakerNotesOff,\n ActionSpeakerNotes,\n ActionSpellcheck,\n ActionStars,\n ActionStore,\n} from 'material-ui/svg-icons';\n\n\nclass AltObjectTask extends Component {\n\n  constructor(props) {\n    super(props);\n     this.state = {entries:[]};\n\n\n  }\n\n  static contextTypes = {\n    muiTheme: React.PropTypes.object.isRequired,\n    router: React.PropTypes.object.isRequired,\n    websocket: React.PropTypes.object,\n  };\n\n  componentWillMount() {\n    this.addEntry();\n  }\n\n  handleSave(text) {\n    if (text.length !== 0) {\n      this.props.addTodo(text)\n    }\n  }\n\n  handleChange(event, index, value, name) {\n    //debugger;\n    this.setState({[name] : value})\n  };\n\n  handleSliderChange(event, value, name) {\n//    debugger;\n    this.setState({[name] : value})\n  };\n\n  handleRadioChange(event, value, name) {\n\n    this.setState({[name] : value})\n  };\n\n  addEntry = () => {\n    var entries  = this.state.entries.slice()\n    entries.push({name : ('entry'+entries.length), title : '',description : ''});\n    this.setState({entries : entries });\n  }\n\n\n//'_marker'\n  render() {\n\n    const { textColor } = this.context.muiTheme.palette;\n\n    let title = 'Alternative Objects Task';\n    let text = 'Come up with as many alternative objects for a stapler as possible. \\n\tYou will have 5 minutes to complete the task. \\n \\n You can add a new entry by clicking on the new entry button';\n\n\n\n    return (\n      <div style={{display:'flex'}}>\n      {\n        // <h1>{message}</h1>\n        // <Wait melacome={<ActionShop />} /><ActionStore /> <ActionShop />\n        // <div> {this.props.firstName} {v} {this.mlk()}</div>\n      }\n\n\n          <Card\n            style={{\n              padding: 30,\n              margin: '2% 3% 0%',\n              maxWidth: 900,\n              minWidth: 750,\n            }}\n          >\n            <CardHeader\n              title={title}\n              titleStyle={{\n                fontSize: 24,\n                color: textColor,\n              }}\n            />\n            <CardText\n              style={{\n                paddingTop: 0,\n              }}\n              >\n              {\n                text.split('\\n').map( (item,i) => { return <div key={i} style={{marginBottom:20}}>{item}</div>})\n              }\n              <br />\n              <Timer></Timer>\n\n              {\n                this.state.entries.map( (entry,i) => {\n\n                  return <div key={i} style={{marginTop:20}}>\n                            <Card>\n                            <CardText>\n                                Title: <TextField id={entry.name+\"_title\"} style={{marginLeft:10,\n                                }} /><br/>\n                                Description: <TextField\n                                              multiLine={true}\n                                              rows={1}\n                                              rowsMax={10}\n                                              id={entry.name+\"_description\"} style={{ marginLeft:10, width: '80%',\n                                   }} />\n                            </CardText>\n                           </Card>\n                        </div>\n                })\n              }\n\n              <RaisedButton\n                id=\"newEntry\"\n                onClick={ this.addEntry }\n                type=\"button\"\n                backgroundColor='rgb(124, 210, 118)'\n                style={{marginTop:20, }}\n              >\n                New Entry\n              </RaisedButton>\n\n              <br />\n              <div\n              style={{ marginLeft:'90%',}}\n              >\n                    <RaisedButton\n                      id=\"submitAnswers\"\n                      style={{color: 'white',}}\n                      type=\"submit\"\n                      style={{marginTop:20}}\n                    >\n                      Submit\n                    </RaisedButton>\n              </div>\n            </CardText>\n\n          </Card>\n\n          <Card  style={{\n              padding: 30,\n              margin: '2% 0% 5%',\n              minWidth: 400,\n\n            }}\n          >\n            <CardHeader\n              title='Group entries'\n              titleStyle={{\n                fontSize: 24,\n                color: textColor,\n              }}\n            />\n            <CardText\n              style={{\n                paddingTop: 0,\n              }}\n              >\n              {\n                //aqui tenemos los group entries\n              }\n              <Card>\n                <CardHeader>\n                  Super paper clip\n                </CardHeader>\n                <CardText>\n                  Paper clip to rule them all.\n                </CardText>\n              </Card>\n\n\n\n\n\n\n              </CardText>\n\n          </Card>\n\n      </div>\n    )\n  }\n}\n\nAltObjectTask.propTypes = {\n  // addTodo: PropTypes.func.isRequired\n}\n\n//export default Question\n\nconst mapStateToProps = (state) => {\n  return {\n    firstName : state.account.firstName\n  }\n}\n\nexport default connect(mapStateToProps)(AltObjectTask)\n"],"sourceRoot":"/source/"}