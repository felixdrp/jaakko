{"version":3,"sources":["components/survey/alt-object-task.js"],"names":["AltObjectTask","props","addEntry","entries","state","slice","push","name","length","title","description","setState","addGroupEntry","entry","groupEntries","alerthing","alert","textColor","context","muiTheme","palette","text","display","padding","margin","maxWidth","minWidth","fontSize","color","paddingTop","split","map","item","i","marginBottom","marginTop","marginLeft","width","backgroundColor","contextTypes","PropTypes","object","isRequired","router","websocket","propTypes","mapStateToProps","firstName","account"],"mappings":"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","file":"components/survey/alt-object-task.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\n\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport Slider from 'material-ui/Slider';\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton';\n\nimport Timer from './timer'\n\n\nimport { connect } from 'react-redux'\n\nimport Wait from './wait'\n\nimport {\n ActionShop,\n ActionShoppingBasket,\n ActionSpeakerNotesOff,\n ActionSpeakerNotes,\n ActionSpellcheck,\n ActionStars,\n ActionStore,\n} from 'material-ui/svg-icons';\n\n\nclass AltObjectTask extends Component {\n\n  constructor(props) {\n    super(props);\n     this.state = {entries:[],groupEntries:[]};\n\n\n  }\n\n  static contextTypes = {\n    muiTheme: React.PropTypes.object.isRequired,\n    router: React.PropTypes.object.isRequired,\n    websocket: React.PropTypes.object,\n  };\n\n  componentWillMount() {\n    this.addEntry();\n    this.addGroupEntry({ title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all'});\n  }\n\n//   handleSave(text) {\n//     if (text.length !== 0) {\n//       this.props.addTodo(text)\n//     }\n//   }\n//\n//   handleChange(event, index, value, name) {\n//     //debugger;\n//     this.setState({[name] : value})\n//   };\n//\n//   handleSliderChange(event, value, name) {\n// //    debugger;\n//     this.setState({[name] : value})\n//   };\n//\n//   handleRadioChange(event, value, name) {\n//\n//     this.setState({[name] : value})\n//   };\n\n  addEntry = () => {\n    var entries  = this.state.entries.slice()\n    entries.push({name : ('entry'+entries.length), title : '',description : ''});\n    this.setState({entries : entries });\n  }\n\n  addGroupEntry = (entry) => {\n    var entries  = this.state.groupEntries.slice()\n    entries.push({name : ('groupEntry'+entries.length), title : entry.title ,description : entry.description});\n    this.setState({groupEntries : entries });\n  }\n\n  alerthing = () => {\n    alert('boom');\n  }\n\n//'_marker'\n  render() {\n\n    const { textColor } = this.context.muiTheme.palette;\n\n    let title = 'Alternative Objects Task';\n    let text = `Come up with as many alternative objects for a stapler as possible. \\n\tYou will have 7 minutes to complete the task. \\n \\n You can add a new entry by clicking on the new entry button`;\n\n    return (\n      <div style={{display:'flex'}}>\n\n          <Card\n            style={{\n              padding: 30,\n              margin: '2% 3% 0%',\n              maxWidth: 900,\n              minWidth: 750,\n            }}\n          >\n            <CardHeader\n              title={title}\n              titleStyle={{\n                fontSize: 24,\n                color: textColor,\n              }}\n            />\n            <CardText\n              style={{\n                paddingTop: 0,\n              }}\n              >\n              {\n                text.split('\\n').map( (item,i) => { return <div key={i} style={{marginBottom:20}}>{item}</div>})\n              }\n\n\n\n              <Timer timerCallback={ this.alerthing }></Timer>\n\n              {\n                this.state.entries.map( (entry,i) => {\n\n                  return <div key={i} style={{marginTop:20}}>\n                            <Card>\n                            <CardText>\n                                Title: <TextField id={entry.name+\"_title\"} style={{marginLeft:10,\n                                }} /><br/>\n                                Description: <TextField\n                                              multiLine={true}\n                                              rows={1}\n                                              rowsMax={10}\n                                              id={entry.name+\"_description\"} style={{ marginLeft:10, width: '80%',\n                                   }} />\n                            </CardText>\n                           </Card>\n                        </div>\n                })\n              }\n\n              <RaisedButton\n                id=\"newEntry\"\n                onClick={ this.addEntry }\n                type=\"button\"\n                backgroundColor='rgb(124, 210, 118)'\n                style={{marginTop:20, }}\n              >\n                New Entry\n              </RaisedButton>\n\n            </CardText>\n\n          </Card>\n\n          <Card  style={{\n\n              margin: '2% 0% 5%',\n              minWidth: 400,\n              backgroundColor: 'rgb(234, 233, 233)',\n            }}\n          >\n            <CardHeader\n              title='Group entries'\n              titleStyle={{\n                fontSize: 24,\n                color: textColor,\n              }}\n            />\n            <CardText\n              style={{\n                paddingTop: 0,\n              }}\n              >\n\n              {\n                this.state.groupEntries.map( (entry,i) => {\n\n                  return <div key={i} style={{padding:5}}>\n                                <Card>\n                                  <CardHeader style={{padding:8}}>\n                                    {entry.title}\n                                  </CardHeader>\n                                  <CardText style={{padding:8}}>\n                                    {entry.description}\n                                  </CardText>\n                                </Card>\n                        </div>\n                })\n              }\n\n              </CardText>\n\n          </Card>\n      </div>\n    )\n  }\n}\n\nAltObjectTask.propTypes = {\n  // addTodo: PropTypes.func.isRequired\n}\n\n//export default Question\n\nconst mapStateToProps = (state) => {\n  return {\n    firstName : state.account.firstName\n  }\n}\n\nexport default connect(mapStateToProps)(AltObjectTask)\n"],"sourceRoot":"/source/"}