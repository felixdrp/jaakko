{"version":3,"sources":["components/survey/math-challenge.js"],"names":["getNumbers","N","M","results","i","numbers","sum","j","number","Math","round","random","push","solution","undefined","formatNumbers","numberArray","result","n","slice","length","instructions","MathChallenge","props","tick","setState","elapsed","Date","state","startt","text","addTodo","timer","setInterval","clearInterval","event","index","value","id","split","title","message","seconds","toFixed","textColor","context","muiTheme","palette","padding","margin","minWidth","fontSize","color","paddingTop","map","item","marginBottom","alert","q","paddingLeft","marginRight","handleChange","backgroundColor","contextTypes","PropTypes","object","isRequired","router","websocket","propTypes","mapStateToProps","firstName","account"],"mappings":"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","file":"components/survey/math-challenge.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\n\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Timer from './timer'\n\n\nimport { connect } from 'react-redux'\n\nimport Wait from './wait'\n\n/**\n* N number of math questions with M numbers. (all additions, and solution included)\n*\n*/\nfunction getNumbers(N,M){\n  var results = [];\n  for (var i = 0; i < N; i++ ){\n    var numbers = [];\n    var sum = 0;\n    for (var j = 0; j < M; j++ ){\n      var number = Math.round((Math.random()*100)+1);\n      sum += number;\n      numbers.push(number);\n    }\n    results.push({numbers : numbers , sum : sum, solution: undefined });\n  }\n  return results;\n}\n\nfunction formatNumbers(numberArray){\n  var result = '';\n  for( var n in numberArray){\n    result += numberArray[n]+\" + \";\n  }\n  return result.slice(0,result.length-2)+'= ';\n}\n\nvar instructions = 'Solve as many math problems as you can in 7 minutes';\n\nclass MathChallenge extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {elapsed:0,\n                  startt: new Date(),\n                  numbers: getNumbers(30,5),\n     };\n\n  }\n\n  static contextTypes = {\n    muiTheme: React.PropTypes.object.isRequired,\n    router: React.PropTypes.object.isRequired,\n    websocket: React.PropTypes.object,\n  };\n\n\n\n  handleSave(text) {\n    if (text.length !== 0) {\n      this.props.addTodo(text)\n    }\n  }\n\n  componentDidMount(){\n\n      // componentDidMount is called by react when the component\n      // has been rendered on the page. We can set the interval here:\n      this.setState({timer : setInterval(this.tick, 50)});\n  }\n\n  componentWillUnmount(){\n\n      // This method is called immediately before the component is removed\n      // from the page and destroyed. We can clear the interval here:\n      // this.state.elapsed = new Date() - this.start);\n      clearInterval(this.state.timer);\n  }\n\n  handleChange(event, index, value, id) {\n    var numbers = this.state.numbers.slice();\n    var index = id.split(\"_\")[1];\n    numbers[index].solution = value;\n\n\n\n    this.setState({numbers})\n    debugger;\n  }\n\n  tick = () => {\n\n        // This function is called every 50 ms. It updates the\n        // elapsed counter. Calling setState causes the component to be re-rendered\n\n        this.setState({elapsed : new Date() - this.state.startt});\n  }\n\n  render() {\n    let props = this.props;\n\n    let title = this.props.message ? this.props.message : 'Math Challenge'\n    let elapsed = Math.round(this.state.elapsed / 100)\n    let seconds = (elapsed / 10).toFixed(1)\n\n    const { textColor } = this.context.muiTheme.palette;\n\n    return (\n      <div>\n      <Card\n        style={{\n          padding: 30,\n          margin: '2% 10% 10%',\n          minWidth: 700,\n        }}\n      >\n        <CardHeader\n          title={title}\n          titleStyle={{\n            fontSize: 24,\n            color: textColor,\n          }}\n        />\n        <CardText\n          style={{\n            paddingTop: 0,\n          }}\n          >\n          {\n            instructions.split('\\n').map( (item,i) => <div key={i} style={{marginBottom:20}}>{item}</div>)\n          }\n          <br />\n            <Timer timerCallback={() => {alert('boom')}}></Timer>\n            <div>\n            {\n                this.state.numbers.map( (q,i) => <div key={i}>{formatNumbers(q.numbers)}\n                                          <TextField id={'math_'+i} style={{\n                                              paddingLeft: 10,\n                                              marginRight: 20,\n                                              }}\n                                              onChange={ (event, index, value) => this.handleChange(event, value, index, 'math_'+i)}\n                                              />\n                                      </div> )\n            }\n            </div>\n          <br />\n\n          <RaisedButton\n            id=\"submitAnswers\"\n            style={{backgroundColor: 'grey',}}\n            type=\"submit\"\n\n          >\n            Submit\n          </RaisedButton>\n\n        </CardText>\n\n      </Card>\n\n      </div>\n    )\n  }\n}\n\nMathChallenge.propTypes = {\n\n  // addTodo: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    firstName : state.account.firstName\n  }\n}\n\nexport default connect(mapStateToProps)(MathChallenge)\n"],"sourceRoot":"/source/"}