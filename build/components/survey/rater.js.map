{"version":3,"sources":["components/survey/rater.js"],"names":["styles","block","display","radioButton","width","Rater","props","setRating","rating","raterCallback","entryIndex","componentWillReceiveProps","nextProps","setState","currentRating","getStar","number","checked","state","reset","text","length","addTodo","textColor","context","muiTheme","palette","numberOfStars","map","i","height","margin","padding","contextTypes","PropTypes","object","isRequired","router","websocket","propTypes","mapStateToProps","firstName","account"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAGA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;AAEA;;AAEA;;;;AAEA;;;;AAcA,IAAMA,SAAS;AACbC,SAAO;AACLC,aAAQ;AADH,GADM;AAIbC,eAAa;AACXD,aAAQ,QADG;AAEXE,WAAO;AAFI;AAJA,CAAf;;IAWMC,K;;;AAEJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oIACXA,KADW;;AAAA,UAkBnBC,SAlBmB,GAkBP,UAACC,MAAD,EAAY;AACtB;AACA,YAAKF,KAAL,CAAWG,aAAX,CAAyB,MAAKH,KAAL,CAAWI,UAApC,EAAgDF,MAAhD;AACD,KArBkB;;AAAA,UAuBnBG,yBAvBmB,GAuBS,UAACC,SAAD,EAAe;AACzC,YAAKC,QAAL,CAAc,EAACC,eAAeF,UAAUE,aAA1B,EAAd;AACD,KAzBkB;;AAAA,UA2BnBC,OA3BmB,GA2BT,UAACC,MAAD,EAAY;AACpB,UAAIC,UAAU,KAAd;AACA,UAAKD,UAAU,MAAKE,KAAL,CAAWJ,aAA1B,EAAwC;AACtCG,kBAAU,IAAV;AACD;AACD,aAAO;AACL,aAAKD,MADA;AAEL,qBAAa,sDAAc,wBAAd,GAFR;AAGL,uBAAe,4DAAoB,wBAApB,GAHV;AAIL,eAAM,EAJD;AAKL,iBAASC,OALJ;AAML,eAAOjB,OAAOG,WANT;AAOL,iBAAU,mBAAM;AAAC,gBAAKI,SAAL,CAAeS,MAAf;AAAuB;;AAPnC,QAAP;AAUD,KA1CkB;;AAAA,UA4CnBG,KA5CmB,GA4CX,YAAM;AACZ,YAAKN,QAAL,CAAc,EAACC,eAAe,CAAhB,EAAd;AACD,KA9CkB;;AAEjB,UAAKI,KAAL,GAAa,EAACJ,eAAgB,CAAjB,EAAb;AAFiB;AAGlB;;;;+BASUM,I,EAAM;AACf,UAAIA,KAAKC,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAKf,KAAL,CAAWgB,OAAX,CAAmBF,IAAnB;AACD;AACF;;;6BAgCQ;AAAA;;AAAA,UAECG,SAFD,GAEe,KAAKC,OAAL,CAAaC,QAAb,CAAsBC,OAFrC,CAECH,SAFD;;AAGP,UAAII,gBAAgB,CAApB;;AAEA,aACE;AAAA;AAAA,UAAK,OAAO,EAACzB,SAAQ,MAAT,EAAZ;AAEI,SAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAY0B,GAAZ,CACG,UAACZ,MAAD,EAAQa,CAAR,EAAc;AACZ,iBAAO,OAAKd,OAAL,CAAaC,MAAb,CAAP;AACD,SAHJ,CAFJ;AAOE;AAAA;AAAA,YAAY,SAAQ,iBAApB;AACY,qBAAU,mBAAM;AAAC,qBAAKT,SAAL,CAAe,CAAC,CAAhB;AAAmB,aADhD;AAEY,mBAAO,EAACH,OAAM,EAAP,EAAU0B,QAAO,EAAjB,EAAoBC,QAAO,CAA3B,EAA6BC,SAAQ,CAArC;AAFnB;AAIE;AAJF;AAPF,OADF;AAgBD;;;;;AAvEG3B,K,CAOG4B,Y,GAAe;AACpBR,YAAU,gBAAMS,SAAN,CAAgBC,MAAhB,CAAuBC,UADb;AAEpBC,UAAQ,gBAAMH,SAAN,CAAgBC,MAAhB,CAAuBC,UAFX;AAGpBE,aAAW,gBAAMJ,SAAN,CAAgBC;AAHP,C;;;AAmExB9B,MAAMkC,SAAN,GAAkB;AAChB;;;AAGF;;AAJA,CAMA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACtB,KAAD,EAAW;AACjC,SAAO;AACLuB,eAAYvB,MAAMwB,OAAN,CAAcD;AADrB,GAAP;AAGD,CAJD;;kBAMe,yBAAQD,eAAR,EAAyBnC,KAAzB,C","file":"components/survey/rater.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\n\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport Slider from 'material-ui/Slider';\nimport IconButton from 'material-ui/IconButton';\n\nimport Checkbox from 'material-ui/Checkbox';\nimport {red500, yellow500, blue500} from 'material-ui/styles/colors';\n\nimport { connect } from 'react-redux'\n\nimport Wait from './wait'\n\nimport {\n ActionShop,\n ActionShoppingBasket,\n ActionSpeakerNotesOff,\n ActionSpeakerNotes,\n ActionSpellcheck,\n ActionStars,\n ActionStore,\n ToggleStar,\n ToggleStarBorder,\n ContentClear,\n} from 'material-ui/svg-icons';\n\n\nconst styles = {\n  block: {\n    display:'flex',\n  },\n  radioButton: {\n    display:'inline',\n    width: 50\n  },\n};\n\n\nclass Rater extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {currentRating : 0};\n  }\n\n  static contextTypes = {\n    muiTheme: React.PropTypes.object.isRequired,\n    router: React.PropTypes.object.isRequired,\n    websocket: React.PropTypes.object,\n  };\n\n\n  handleSave(text) {\n    if (text.length !== 0) {\n      this.props.addTodo(text)\n    }\n  }\n\n  setRating = (rating) => {\n    //this.setState({currentRating: rating});\n    this.props.raterCallback(this.props.entryIndex, rating);\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    this.setState({currentRating: nextProps.currentRating});\n  }\n\n  getStar = (number) => {\n    var checked = false;\n    if ( number <= this.state.currentRating){\n      checked = true;\n    }\n    return <Checkbox\n      key={number}\n      checkedIcon={<ToggleStar   color={yellow500}/>}\n      uncheckedIcon={<ToggleStarBorder   color={yellow500}/>}\n      label=\"\"\n      checked={checked}\n      style={styles.radioButton}\n      onClick={ () => {this.setRating(number)}}\n\n      />\n  }\n\n  reset = () => {\n    this.setState({currentRating: 0});\n  }\n\n  render() {\n\n    const { textColor } = this.context.muiTheme.palette;\n    let numberOfStars = 5;\n\n    return (\n      <div style={{display:'flex'}}>\n        {\n          [1,2,3,4,5].map(\n             (number,i) => {\n               return this.getStar(number)\n             })\n        }\n        <IconButton tooltip=\"Clear all stars\"\n                    onClick={ () => {this.setRating(-1)}}\n                    style={{width:24,height:24,margin:0,padding:0}}\n                    >\n          <ContentClear />\n        </IconButton>\n      </div>\n    )\n  }\n}\n\nRater.propTypes = {\n  // addTodo: PropTypes.func.isRequired\n}\n\n//export default Question\n\nconst mapStateToProps = (state) => {\n  return {\n    firstName : state.account.firstName\n  }\n}\n\nexport default connect(mapStateToProps)(Rater)\n"],"sourceRoot":"/source/"}