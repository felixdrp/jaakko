{"version":3,"sources":["components/survey/wait.js"],"names":["Wait","location","callback","console","log","context","router","listenBefore","routerWillLeave","text","length","props","addTodo","message","textColor","muiTheme","palette","padding","fontSize","color","paddingTop","propTypes","contextTypes","PropTypes","object","isRequired","websocket"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AAEA;;;;IAEMA,I;;;;;;;;;;oCAWaC,Q,EAAUC,Q,EAAU;AACnCC,cAAQC,GAAR,CAAY,KAAZ;AACA;AACAF;AACD;;;wCAEmB;AAClB,WAAKG,OAAL,CAAaC,MAAb,CAAoBC,YAApB,CAAiC,KAAKC,eAAtC;AACD;;;2CAEsB;AACnB;AACH;;;+BAEUC,I,EAAM;AACf,UAAIA,KAAKC,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAKC,KAAL,CAAWC,OAAX,CAAmBH,IAAnB;AACD;AACF;;;6BAEQ;AACP,UAAII,UAAU,KAAKF,KAAL,CAAWE,OAAX,GAAoB,KAAKF,KAAL,CAAWE,OAA/B,GAAyC,0BAAvD;AADO,UAECC,SAFD,GAEe,KAAKT,OAAL,CAAaU,QAAb,CAAsBC,OAFrC,CAECF,SAFD;;;AAIP,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE,mBAAO;AACLG,uBAAS;AADJ;AADT;AAKE;AACE,mBAAOJ,OADT;AAEE,wBAAY;AACVK,wBAAU,EADA;AAEVC,qBAAOL;AAFG;AAFd,YALF;AAYE;AACE,mBAAO;AACLM,0BAAY;AADP;AADT;AAZF;AADF,OADF;AAwBD;;;;;AA3DGpB,I,CACGqB,S,GAAY;AACjB;AADiB,C;AADfrB,I,CAKGsB,Y,GAAe;AACpBP,YAAU,gBAAMQ,SAAN,CAAgBC,MAAhB,CAAuBC,UADb;AAEpBnB,UAAQ,gBAAMiB,SAAN,CAAgBC,MAAhB,CAAuBC,UAFX;AAGpBC,aAAW,gBAAMH,SAAN,CAAgBC;AAHP,C;kBAyDTxB,I","file":"components/survey/wait.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n\nclass Wait extends Component {\n  static propTypes = {\n    // loginStatus: React.PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: React.PropTypes.object.isRequired,\n    router: React.PropTypes.object.isRequired,\n    websocket: React.PropTypes.object,\n  };\n\n  routerWillLeave (location, callback) {\n    console.log('mlk')\n    // if callback then go fordward\n    callback()\n  }\n\n  componentDidMount() {\n    this.context.router.listenBefore(this.routerWillLeave);\n  }\n\n  componentWillUnmount() {\n      // this.context.router.unregisterTransitionHook(this.routerWillLeave);\n  }\n\n  handleSave(text) {\n    if (text.length !== 0) {\n      this.props.addTodo(text)\n    }\n  }\n\n  render() {\n    let message = this.props.message? this.props.message : 'Please, wait a moment...'\n    const { textColor } = this.context.muiTheme.palette;\n\n    return (\n      <div>\n        <Card\n          style={{\n            padding: 30,\n          }}\n        >\n          <CardHeader\n            title={message}\n            titleStyle={{\n              fontSize: 24,\n              color: textColor,\n            }}\n          />\n          <CardText\n            style={{\n              paddingTop: 0,\n            }}\n          >\n        </CardText>\n        \n      </Card>\n      </div>\n    )\n  }\n}\n\nexport default Wait\n"],"sourceRoot":"/source/"}