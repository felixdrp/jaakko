{"version":3,"sources":["components/survey/question.js"],"names":["TEXT_FIELD_TYPE","LIST_FIELD_TYPE","entryQuestionnarie","introTitle","introText","questions","name","text","type","typeVars","Question","length","props","addTodo","message","textColor","context","muiTheme","palette","title","padding","fontSize","color","paddingTop","contextTypes","PropTypes","object","isRequired","router","websocket","propTypes","mapStateToProps","state","firstName","account"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;AAGA;;AAEA;;;;AAEA;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,kBAAkB,WAAxB;AACA,IAAMC,kBAAkB,WAAxB;;AAEA,IAAIC,qBAAqB;AACvBC,cAAa,cADU;AAEvBC,aAAY,oeAFW;;AAIvBC,aAAY,CACV;AACEC,UAAO,KADT;AAEEC,UAAO,KAFT;AAGEC,UAAOR,eAHT;AAIES,cAAW;AAJb,GADU,EAOV;AACEH,UAAO,QADT;AAEEC,UAAO,QAFT;AAGEC,UAAOP,eAHT;AAIEQ,cAAW;AAJb,GAPU;AAJW,CAAzB;;IAoBMC,Q;;;;;;;;;;yCAQiB,CAEpB;;;+BACUH,I,EAAM;AACf,UAAIA,KAAKI,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAKC,KAAL,CAAWC,OAAX,CAAmBN,IAAnB;AACD;AACF;;;6BAEQ;AACP;AACA,UAAIO,UAAW,UAAf;;AAFO,UAICC,SAJD,GAIe,KAAKC,OAAL,CAAaC,QAAb,CAAsBC,OAJrC,CAICH,SAJD;AAKP;;AACA,UAAII,QAAQjB,mBAAmBC,UAA/B;AACA,UAAII,OAAOL,mBAAmBE,SAA9B;;AAEA,aACE;AAAA;AAAA;AAQI;AAAA;AAAA;AACE,mBAAO;AACLgB,uBAAS;AADJ;AADT;AAKE;AACE,mBAAOD,KADT;AAEE,wBAAY;AACVE,wBAAU,EADA;AAEVC,qBAAOP;AAFG;AAFd,YALF;AAYE;AAAA;AAAA;AACE,qBAAO;AACLQ,4BAAY;AADP;AADT;AAMGhB;AANH;AAZF;AARJ,OADF;AAoCD;;;;;AA9DGG,Q,CAEGc,Y,GAAe;AACpBP,YAAU,gBAAMQ,SAAN,CAAgBC,MAAhB,CAAuBC,UADb;AAEpBC,UAAQ,gBAAMH,SAAN,CAAgBC,MAAhB,CAAuBC,UAFX;AAGpBE,aAAW,gBAAMJ,SAAN,CAAgBC;AAHP,C;;;AA+DxBhB,SAASoB,SAAT,GAAqB;AACnB;;;AAGF;;AAJA,CAMA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLC,eAAYD,MAAME,OAAN,CAAcD;AADrB,GAAP;AAGD,CAJD;;kBAMe,yBAAQF,eAAR,EAAyBrB,QAAzB,C","file":"components/survey/question.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\nimport TextField from 'material-ui/TextField';\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n\n\nimport { connect } from 'react-redux'\n\nimport Wait from './wait'\n\nimport {\n ActionShop,\n ActionShoppingBasket,\n ActionSpeakerNotesOff,\n ActionSpeakerNotes,\n ActionSpellcheck,\n ActionStars,\n ActionStore,\n} from 'material-ui/svg-icons';\n\n\n//\n// var entryQuestionnarie = {\n//   introText : \"\",\n//\n//   questions : [\n//     {\n//       name : \"\",\n//       text : \"\",\n//       type : \"\",\n//       typeVars : {}\n//     },\n//   ],\n// };\nconst TEXT_FIELD_TYPE = 'textField'\nconst LIST_FIELD_TYPE = 'listField'\n\nvar entryQuestionnarie = {\n  introTitle : 'Entry Survey',\n  introText : 'The following questionnaire will take approximately 10 minutes, all questions are optional and can be skipped if they are seen to be intrusive, however it would be appreciated if all questions were answered as it will allow the results to be analysed with more accuracy. The participation in this experiment and questionnaire is optional and the subject can withdraw at any point, no questions asked. All information will be kept confidential and is strictly for research purposes. ',\n\n  questions : [\n    {\n      name : 'age',\n      text : 'Age',\n      type : TEXT_FIELD_TYPE,\n      typeVars : {}\n    },\n    {\n      name : 'gender',\n      text : 'Gender',\n      type : LIST_FIELD_TYPE,\n      typeVars : {}\n    },\n  ],\n};\n\nclass Question extends Component {\n\n  static contextTypes = {\n    muiTheme: React.PropTypes.object.isRequired,\n    router: React.PropTypes.object.isRequired,\n    websocket: React.PropTypes.object,\n  };\n\n  componentWillMount() {\n\n  }\n  handleSave(text) {\n    if (text.length !== 0) {\n      this.props.addTodo(text)\n    }\n  }\n\n  render() {\n    // let message = this.props.message? this.props.message : 'Question'\n    let message =  'Question'\n\n    const { textColor } = this.context.muiTheme.palette;\n    // let e = entryQuestionnarie.questions.map\n    let title = entryQuestionnarie.introTitle;\n    let text = entryQuestionnarie.introText;\n\n    return (\n      <div>\n      {\n        // <h1>{message}</h1>\n        // <Wait melacome={<ActionShop />} /><ActionStore /> <ActionShop />\n        // <div> {this.props.firstName} {v} {this.mlk()}</div>\n      }\n\n\n          <Card\n            style={{\n              padding: 30,\n            }}\n          >\n            <CardHeader\n              title={title}\n              titleStyle={{\n                fontSize: 24,\n                color: textColor,\n              }}\n            />\n            <CardText\n              style={{\n                paddingTop: 0,\n              }}\n              >\n\n              {text}\n\n\n            </CardText>\n\n          </Card>\n\n      </div>\n    )\n  }\n}\n\nQuestion.propTypes = {\n  // addTodo: PropTypes.func.isRequired\n}\n\n//export default Question\n\nconst mapStateToProps = (state) => {\n  return {\n    firstName : state.account.firstName\n  }\n}\n\nexport default connect(mapStateToProps)(Question)\n"],"sourceRoot":"/source/"}