{"version":3,"sources":["components/survey/similarities.js"],"names":["Similarities","props","handleChange","event","selectionIndex","field","originIndex","data","state","length","removeSimilars","setState","modifySimilars","similarTo","indexOf","push","dataIndex","similarsIndex","modifyIndex","clean_array","a","gatherData","console","log","payload","ideas","text","addTodo","textColor","context","muiTheme","palette","title","padding","margin","minWidth","fontSize","color","paddingTop","split","map","item","i","marginBottom","submit","entry","display","fontWeight","description","similars","sim_entry","j","index","value","width","maxHeight","entry_options","z","contextTypes","PropTypes","object","isRequired","router","websocket","propTypes","mapStateToProps","firstName","account"],"mappings":"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","file":"components/survey/similarities.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\n\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport Slider from 'material-ui/Slider';\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton';\n\nimport Timer from './timer'\n\nimport { connect } from 'react-redux'\n\nimport Wait from './wait'\n\nimport {\n ActionShop,\n ActionShoppingBasket,\n ActionSpeakerNotesOff,\n ActionSpeakerNotes,\n ActionSpellcheck,\n ActionStars,\n ActionStore,\n} from 'material-ui/svg-icons';\n\n\n\n\nclass Similarities extends Component {\n\n  constructor(props) {\n    super(props);\n     this.state = {data : this.props.payload.ideas };\n\n  }\n\n  static contextTypes = {\n    muiTheme: React.PropTypes.object.isRequired,\n    router: React.PropTypes.object.isRequired,\n    websocket: React.PropTypes.object,\n  };\n\n  componentWillMount() {\n    // this.setState({'data' : [{ title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n    //             { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n    //             { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n    //             { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n    //             { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n    //             { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n    //             { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n    //             { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n    //             { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n    //             { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n    //             { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n    //             { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]}] });\n  }\n\n\n  handleChange = (event, selectionIndex, field, originIndex) => {\n\n    var data = this.state.data;\n\n    if ( field > -1 && selectionIndex == data.length){ // this is the remove case.\n\n        data = this.removeSimilars ( data, originIndex, field );\n        data = this.removeSimilars ( data, field, originIndex );\n        this.setState({data : data});\n        return;\n    }\n\n    if( field > -1 ){\n      data = this.modifySimilars ( data, originIndex, selectionIndex, field );\n      data = this.modifySimilars ( data, field, originIndex, originIndex );\n    }\n\n\n    if ( data[originIndex].similarTo.indexOf(selectionIndex) < 0){\n      data[originIndex].similarTo.push(selectionIndex);\n    }\n\n    if ( data[selectionIndex].similarTo.indexOf(originIndex) < 0){\n      data[selectionIndex].similarTo.push(originIndex);\n    }\n\n    this.setState({data : data})\n  };\n\n  modifySimilars = ( data, dataIndex, similarsIndex, modifyIndex ) => {\n\n    var clean_array = []\n    for ( var a in data[dataIndex].similarTo ){\n       if(data[dataIndex].similarTo[a] == modifyIndex ){\n         if ( data[dataIndex].similarTo.indexOf(similarsIndex) < 0){\n           clean_array.push(similarsIndex);\n         }\n         continue;\n       }\n       clean_array.push(data[dataIndex].similarTo[a]);\n    }\n    data[dataIndex].similarTo = clean_array;\n\n    return data;\n  }\n\n  removeSimilars = ( data, dataIndex, similarsIndex ) => {\n\n    var clean_array = []\n    for ( var a in data[dataIndex].similarTo ){\n       if(data[dataIndex].similarTo[a] == similarsIndex ){\n         if ( data[dataIndex].similarTo.indexOf(similarsIndex) > -1){\n           continue;\n         }\n       }\n       clean_array.push(data[dataIndex].similarTo[a]);\n    }\n    data[dataIndex].similarTo = clean_array;\n\n    return data;\n  }\n\n  handleSave(text) {\n    if (text.length !== 0) {\n      this.props.addTodo(text)\n    }\n  }\n\n\n    gatherData = () => {\n\n      console.log(JSON.stringify(this.state));\n      return this.state\n\n    }\n\n\n//'_marker'\n  render() {\n\n    const { textColor } = this.context.muiTheme.palette;\n\n    let title = 'Similarities Task';\n    let text = 'The task is to come up with as many alternative objects for a given object. \\n\\n For example:';\n\n    let data = this.state.data;\n\n\n    return (\n      <div>\n      {\n        // <h1>{message}</h1>\n        // <Wait melacome={<ActionShop />} /><ActionStore /> <ActionShop />\n        // <div> {this.props.firstName} {v} {this.mlk()}</div>\n      }\n\n\n          <Card\n            style={{\n              padding: 30,\n              margin: '2% 15% 15%',\n              minWidth: 900,\n            }}\n          >\n            <CardHeader\n              title={title}\n              titleStyle={{\n                fontSize: 24,\n                color: textColor,\n              }}\n            />\n            <CardText\n              style={{\n                paddingTop: 0,\n              }}\n              >\n\n              {text.split('\\n').map( (item,i) => <div key={i} style={{marginBottom:10}}>{item}</div>)}\n\n              <br />\n              <Timer timerCallback={() => this.props.submit( this.gatherData() )}></Timer>\n\n              {\n                data.map( (entry,i) => {\n                  return <div key={i} style={{padding:5,display:'flex'}}>\n\n                                <Card style={{paddingTop: '0%',fontWeight: 800,}}>\n                                  <CardText style={{padding:8}}>\n                                    {i+'.'}\n                                  </CardText>\n                                </Card>\n\n                                <Card>\n                                  <CardHeader style={{padding:8}}>\n                                    {entry.title}\n                                  </CardHeader>\n                                  <CardText style={{padding:8}}>\n                                    {entry.description}\n                                  </CardText>\n                                </Card>\n\n                                <Card>\n\n                                  <CardText style={{padding:8, paddingTop:28,fontWeight: 800}}>\n                                    Similar to:\n                                  </CardText>\n                                </Card>\n\n                                {\n                                    entry.similars.map(  (sim_entry,j) => {\n\n                                                return <Card key = {j}>\n                                                  <CardText style={{padding:8}}>\n                                                  <SelectField  value={sim_entry} onChange={(event, index, value) => this.handleChange(event, index, sim_entry, i)} style={{width:30, maxHeight:85}} >\n\n                                                    {\n                                                      data.map( (entry_options,z) => {return (entry.title == entry_options.title ) ? <MenuItem key={z} value={z} primaryText={z} /> : '' })\n                                                    }\n                                                      <MenuItem value={'remove'} primaryText={'remove'} />\n                                                   </SelectField>\n                                                  </CardText>\n                                                </Card>\n                                              })\n                               }\n\n                               <Card>\n                                 <CardText style={{padding:8}}>\n                                 <SelectField value={-1} onChange={(event, index, value) => this.handleChange(event, index, -1, i)} style={{width:30}}>\n\n                                   {\n                                     data.map( (entry_options,z) => { return (entry.title == entry_options.title ) ? <MenuItem key={z} value={z} primaryText={z+'. '+entry_options.title} /> : '' })\n                                   }\n                                  </SelectField>\n                                 </CardText>\n                               </Card>\n\n                        </div>\n                } )\n              }\n\n            </CardText>\n\n          </Card>\n\n      </div>\n    )\n  }\n}\n\nSimilarities.propTypes = {\n  // addTodo: PropTypes.func.isRequired\n}\n\n//export default Question\n\nconst mapStateToProps = (state) => {\n  return {\n    firstName : state.account.firstName\n  }\n}\n\nexport default connect(mapStateToProps)(Similarities)\n"],"sourceRoot":"/source/"}