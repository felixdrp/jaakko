{"version":3,"sources":["components/survey/similarities.js"],"names":["Similarities","props","handleChange","event","selectionIndex","field","originIndex","data","state","clean_array","a","similars","indexOf","push","setState","gatherData","console","log","alerthing","alert","title","description","text","length","addTodo","textColor","context","muiTheme","palette","padding","margin","minWidth","fontSize","color","paddingTop","split","map","item","i","marginBottom","submit","entry","display","fontWeight","sim_entry","j","index","value","width","maxHeight","entry_options","z","contextTypes","PropTypes","object","isRequired","router","websocket","propTypes","mapStateToProps","firstName","account"],"mappings":"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","file":"components/survey/similarities.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\n\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport Slider from 'material-ui/Slider';\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton';\n\nimport Timer from './timer'\n\nimport { connect } from 'react-redux'\n\nimport Wait from './wait'\n\nimport {\n ActionShop,\n ActionShoppingBasket,\n ActionSpeakerNotesOff,\n ActionSpeakerNotes,\n ActionSpellcheck,\n ActionStars,\n ActionStore,\n} from 'material-ui/svg-icons';\n\n\n\n\nclass Similarities extends Component {\n\n  constructor(props) {\n    super(props);\n     this.state = {data : []};\n\n  }\n\n  static contextTypes = {\n    muiTheme: React.PropTypes.object.isRequired,\n    router: React.PropTypes.object.isRequired,\n    websocket: React.PropTypes.object,\n  };\n\n  componentWillMount() {\n    this.setState({'data' : [{ title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n                { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n                { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n                { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n                { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n                { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n                { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n                { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n                { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n                { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n                { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]},\n                { title : 'Super paper clip' ,description : 'the super super paperclip that will rule them all',similars:[]}] });\n  }\n\n\n  handleChange = (event, selectionIndex, field, originIndex) => {\n\n    var data = this.state.data;\n\n    if( field > -1 ){\n      var clean_array = []\n      for ( var a in data[originIndex].similars ){\n\n         if(data[originIndex].similars[a] == field ){\n           if ( data[originIndex].similars.indexOf(selectionIndex) < 0){\n             clean_array.push(selectionIndex);\n           }\n           continue;\n         }\n         clean_array.push(data[originIndex].similars[a]);\n      }\n      data[originIndex].similars = clean_array;\n\n    }\n\n    if( field > -1 ){\n      var clean_array = []\n      for ( var a in data[field].similars ){\n\n         if(data[field].similars[a] == originIndex ){\n           if ( data[field].similars.indexOf(originIndex) < 0){\n             clean_array.push(originIndex);\n           }\n           continue;\n         }\n         clean_array.push(data[field].similars[a]);\n      }\n      data[field].similars = clean_array;\n\n    }\n\n\n    if ( data[originIndex].similars.indexOf(selectionIndex) < 0){\n      data[originIndex].similars.push(selectionIndex);\n    }\n\n    if ( data[selectionIndex].similars.indexOf(originIndex) < 0){\n      data[selectionIndex].similars.push(originIndex);\n    }\n\n    this.setState({data : data})\n  };\n\n  handleSave(text) {\n    if (text.length !== 0) {\n      this.props.addTodo(text)\n    }\n  }\n\n\n    gatherData = () => {\n\n      console.log(JSON.stringify(this.state));\n      return this.state\n\n    }\n\n  alerthing = () => {\n    alert('boom');\n  }\n\n//'_marker'\n  render() {\n\n    const { textColor } = this.context.muiTheme.palette;\n\n    let title = 'Similarities Task';\n    let text = 'The task is to come up with as many alternative objects for a given object. \\n\\n For example:';\n\n    let data = this.state.data;\n\n\n    return (\n      <div>\n      {\n        // <h1>{message}</h1>\n        // <Wait melacome={<ActionShop />} /><ActionStore /> <ActionShop />\n        // <div> {this.props.firstName} {v} {this.mlk()}</div>\n      }\n\n\n          <Card\n            style={{\n              padding: 30,\n              margin: '2% 15% 15%',\n              minWidth: 900,\n            }}\n          >\n            <CardHeader\n              title={title}\n              titleStyle={{\n                fontSize: 24,\n                color: textColor,\n              }}\n            />\n            <CardText\n              style={{\n                paddingTop: 0,\n              }}\n              >\n\n              {text.split('\\n').map( (item,i) => <div key={i} style={{marginBottom:10}}>{item}</div>)}\n\n              <br />\n              <Timer timerCallback={() => this.props.submit( this.gatherData() )}></Timer>\n\n              {\n                data.map( (entry,i) => {\n                  return <div key={i} style={{padding:5,display:'flex'}}>\n\n                                <Card style={{paddingTop: '0%',fontWeight: 800,}}>\n                                  <CardText style={{padding:8}}>\n                                    {i+'.'}\n                                  </CardText>\n                                </Card>\n\n                                <Card>\n                                  <CardHeader style={{padding:8}}>\n                                    {entry.title}\n                                  </CardHeader>\n                                  <CardText style={{padding:8}}>\n                                    {entry.description}\n                                  </CardText>\n                                </Card>\n\n                                <Card>\n\n                                  <CardText style={{padding:8, paddingTop:28,fontWeight: 800}}>\n                                    Similar to:\n                                  </CardText>\n                                </Card>\n\n                                {\n                                    entry.similars.map(  (sim_entry,j) => {\n\n                                                return <Card key = {j}>\n                                                  <CardText style={{padding:8}}>\n                                                  <SelectField  value={sim_entry} onChange={(event, index, value) => this.handleChange(event, index, sim_entry, i)} style={{width:30, maxHeight:85}} >\n\n                                                    {\n                                                      data.map( (entry_options,z) => {return (entry.title == entry_options.title ) ? <MenuItem key={z} value={z} primaryText={z} /> : '' })\n                                                    }\n                                                   </SelectField>\n                                                  </CardText>\n                                                </Card>\n                                              })\n                               }\n\n                               <Card>\n                                 <CardText style={{padding:8}}>\n                                 <SelectField value={-1} onChange={(event, index, value) => this.handleChange(event, index, -1, i)} style={{width:30}}>\n\n                                   {\n                                     data.map( (entry_options,z) => { return (entry.title == entry_options.title ) ? <MenuItem key={z} value={z} primaryText={z+'. '+entry_options.title} /> : '' })\n                                   }\n                                  </SelectField>\n                                 </CardText>\n                               </Card>\n\n                        </div>\n                } )\n              }\n\n            </CardText>\n\n          </Card>\n\n      </div>\n    )\n  }\n}\n\nSimilarities.propTypes = {\n  // addTodo: PropTypes.func.isRequired\n}\n\n//export default Question\n\nconst mapStateToProps = (state) => {\n  return {\n    firstName : state.account.firstName\n  }\n}\n\nexport default connect(mapStateToProps)(Similarities)\n"],"sourceRoot":"/source/"}