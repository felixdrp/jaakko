{"version":3,"sources":["components/survey/instructions.js"],"names":["instructionsData","experimentStructure","title","text","alternativeObjectFigural","alternativeObject","similarities","favourites","math","Instructions","props","getTaskExample","tasktype","marginTop","marginLeft","width","padding","display","paddingTop","fontWeight","alert","paddingLeft","marginRight","formatIntructionItem","item","example","indexOf","splits","replace","split","gatherData","state","isSubmitted","submit","setState","groupType","console","log","payload","nextProps","length","addTodo","type","textColor","context","muiTheme","palette","includes","possibleTasks","margin","minWidth","maxWidth","fontSize","color","map","i","marginBottom","contextTypes","PropTypes","object","isRequired","router","websocket","propTypes","mapStateToProps","task","undefined","taskType"],"mappings":"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","file":"instructions.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\n\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport Slider from 'material-ui/Slider';\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton';\n\nimport Rater from './rater'\n\nimport { connect } from 'react-redux'\n\nimport Wait from './wait'\n\nimport {\n ActionShop,\n ActionShoppingBasket,\n ActionSpeakerNotesOff,\n ActionSpeakerNotes,\n ActionSpellcheck,\n ActionStars,\n ActionStore,\n} from 'material-ui/svg-icons';\n\n\nvar instructionsData = {\n   experimentStructure : {\n    0 : {\n      title : 'Experiment Structure',\n      text : 'Welcome to the experiment. The following lays out the structure of the experiment and the basis on which you are to be paid for taking part in it.'\n            +'\\nThe experiment will consist of 3 tasks. The first two tasks are ‘idea generation’ tasks undertaken in groups of 5 people: each task consists of 3 stages – In the order shown below. The final task will be completed individually.'\n            +'\\n[b]1.Task Completion Stage:[/b] You are asked to generate ideas based on the instructions provided.'\n            +'\\n[b]2.Similarities Stage:[/b] At this stage you will evaluate whether the entries from another group are similar. Likewise yours will be evaluated by another group.'\n            +'\\n[b]3.Favourites Stage:[/b] You are asked to rate the ideas produced by another group. The pay each participant receives depends on the number of stars received. Most stars → highest rank → highest pay.'\n            +'\\n[b]Final Task:[/b] You are asked to answer a series of questions. Your pay will depend on the number of correct answers relative to others in your group.'\n            +'\\n[b]Attribution:[/b] Your ideas will remain anonymous to everyone'\n            +'\\n[b]Pay:[/b] You will be paid £8.49 from completing all tasks.'\n\n    },\n    1 : {\n      title : 'Experiment Structure',\n      text : 'Welcome to the experiment. The following lays out the structure of the experiment and the basis on which you are to be paid for taking part in it.'\n            +'\\nThe experiment will consist of 3 tasks. The first two tasks are ‘idea generation’ tasks undertaken in groups of 5 people: each task consists of 3 stages – In the order shown below. The final task will be completed individually.'\n            +'\\n[b]1.Task Completion Stage:[/b] You are asked to generate ideas based on the instructions provided.'\n            +'\\n[b]2.Similarities Stage:[/b] At this stage you will evaluate whether the entries from another group are similar. Likewise yours will be evaluated by another group.'\n            +'\\n[b]3.Favourites Stage:[/b] You are asked to rate the ideas produced by another group. The pay each participant receives depends on the number of stars received. Most stars → highest rank → highest pay.'\n            +'\\n[b]Final Task:[/b] You are asked to answer a series of questions. Your pay will depend on the number of correct answers relative to others in your group.'\n            +'\\n[b]Attribution:[/b] Your name will appear next to your ideas'\n            +'\\n[b]Pay:[/b] You will be paid £8.49 from completing all tasks.'\n\n    },\n    2 : {\n      title : 'Experiment Structure',\n      text : 'Welcome to the experiment. The following lays out the structure of the experiment and the basis on which you are to be paid for taking part in it.'\n            +'\\nThe experiment will consist of 3 tasks. The first two tasks are ‘idea generation’ tasks undertaken in groups of 5 people: each task consists of 3 stages – In the order shown below. The final task will be completed individually.'\n            +'\\n[b]1.Task Completion Stage:[/b] You are asked to generate ideas based on the instructions provided.'\n            +'\\n[b]2.Similarities Stage:[/b] At this stage you will evaluate whether the entries from another group are similar. Likewise yours will be evaluated by another group.'\n            +'\\n[b]3.Favourites Stage:[/b] You are asked to rate the ideas produced by another group. The pay each participant receives depends on the number of stars received. Most stars → highest rank → highest pay.'\n            +'\\n[b]Final Task:[/b] You are asked to answer a series of questions. Your pay will depend on the number of correct answers relative to others in your group.'\n            +'\\n[b]Attribution:[/b] Your ideas will remain anonymous to everyone'\n            +'\\n[b]Pay:[/b] Your pay is based on your relative performance within your group for all tasks:'\n            +'\\n1. £5.55 – Highest ranking participant'\n            +'\\n2. £2.1'\n            +'\\n3. £1'\n            +'\\n4. £0.5'\n            +'\\n5. £0 – Lowest ranking participant'\n\n    },\n    3 : {\n      title : 'Experiment Structure',\n      text : 'Welcome to the experiment. The following lays out the structure of the experiment and the basis on which you are to be paid for taking part in it.'\n            +'\\nThe experiment will consist of 3 tasks. The first two tasks are ‘idea generation’ tasks undertaken in groups of 5 people: each task consists of 3 stages – In the order shown below. The final task will be completed individually.'\n            +'\\n[b]1.Task Completion Stage:[/b] You are asked to generate ideas based on the instructions provided.'\n            +'\\n[b]2.Similarities Stage:[/b] At this stage you will evaluate whether the entries from another group are similar. Likewise yours will be evaluated by another group.'\n            +'\\n[b]3.Favourites Stage:[/b] You are asked to rate the ideas produced by another group. The pay each participant receives depends on the number of stars received. Most stars → highest rank → highest pay.'\n            +'\\n[b]Final Task:[/b] You are asked to answer a series of questions. Your pay will depend on the number of correct answers relative to others in your group.'\n            +'\\n[b]Attribution:[/b] Your name will appear next to your ideas'\n            +'\\n[b]Pay:[/b] Your pay is based on your relative performance within your group for all tasks:'\n            +'\\n1. £5.55 – Highest ranking participant'\n            +'\\n2. £2.1'\n            +'\\n3. £1'\n            +'\\n4. £0.5'\n            +'\\n5. £0 – Lowest ranking participant'\n\n    },\n  },\n  alternativeObjectFigural : {\n    0: {\n      title : 'Line Meanings',\n      text : 'There will be a line shown at the start. Come up with as many things the line reminds you of or could be a part of. Remember you have to use the whole line. You will be given 5 minutes to complete the task.'\n              +'\\n\\n[b]Important note:[/b]'\n              +'\\nThere are no restrictions on what the line can remind you of or can and can’t be a part of but your idea must be justified or explained using the description. I also ask to kindly refrain from figures which are explicit or inappropriate in nature.'\n              +'\\n\\n[b]Pay:[/b] You will be paid £8.49 from completing all tasks.'\n      },\n    1: {\n      title : 'Line Meanings',\n      text : 'There will be a line shown at the start. Come up with as many things the line reminds you of or could be a part of. Remember you have to use the whole line. You will be given 5 minutes to complete the task.'\n              +'\\n\\n[b]Important note:[/b]'\n              +'\\nThere are no restrictions on what the line can remind you of or can and can’t be a part of but your idea must be justified or explained using the description. I also ask to kindly refrain from figures which are explicit or inappropriate in nature.'\n              +'\\n\\n[b]Attribution:[/b] Your ideas will be seen by your group together with your name'\n              +'\\n\\n[b]Pay:[/b] You will be paid £8.49 from completing all tasks.'\n      },\n    2: {\n        title : 'Line Meanings',\n        text : 'There will be a line shown at the start. Come up with as many things the line reminds you of or could be a part of. Remember you have to use the whole line. You will be given 5 minutes to complete the task.'\n                +'\\n\\n[b]Important note:[/b]'\n                +'\\nThere are no restrictions on what the line can remind you of or can and can’t be a part of but your idea must be justified or explained using the description. I also ask to kindly refrain from figures which are explicit or inappropriate in nature.'\n                +'\\n\\n[b]Pay:[/b] Your pay is based on your relative performance within your group for all tasks:'\n                +'\\n1. £5.55 – Highest ranking participant'\n                +'\\n2. £2.1'\n                +'\\n3. £1'\n                +'\\n4. £0.5'\n                +'\\n5. £0 – Lowest ranking participant'\n        },\n    3: {\n        title : 'Line Meanings',\n        text : 'There will be a line shown at the start. Come up with as many things the line reminds you of or could be a part of. Remember you have to use the whole line. You will be given 5 minutes to complete the task.'\n                +'\\n\\n[b]Important note:[/b]'\n                +'\\nThere are no restrictions on what the line can remind you of or can and can’t be a part of but your idea must be justified or explained using the description. I also ask to kindly refrain from figures which are explicit or inappropriate in nature.'\n                +'\\n\\n[b]Attribution:[/b] Your ideas will be seen by your group together with your name'\n                +'\\n\\n[b]Pay:[/b] Your pay is based on your relative performance within your group for all tasks:'\n                +'\\n1. £5.55 – Highest ranking participant'\n                +'\\n2. £2.1'\n                +'\\n3. £1'\n                +'\\n4. £0.5'\n                +'\\n5. £0 – Lowest ranking participant'\n          },\n\n  },\n\n  alternativeObject : {\n    0: {\n      title : 'Objects Task',\n      text : 'The task is to come up with as many ideas for what a given object could be in the 5 minutes given.'\n             +'\\n[b]Completion[/b]'\n             +'\\nConsider the object given is a Coat Hanger:'\n             +'\\n • First enter the title for the object in the “title” field. For example, the alternative object could be a “back scratcher”. '\n             +'\\n • Then fill the description field with additional information. A description is always required. A possible description could be “a tool that can be used to scratch your back”.'\n             +'\\n • Press the submit button to submit your idea'\n             +'\\nThere is no limit to how many ideas you can submit.'\n             +'\\nAll submitted entries can be seen by your group.'\n             +'\\n\\nThe previous example would look like this…'\n             +'\\n[EXAMPLE]'\n             +'\\n\\n[b]Pay:[/b] You will be paid £8.49 from completing all tasks.'\n      },\n      1: {\n        title : 'Objects Task',\n        text : 'The task is to come up with as many ideas for what a given object could be in the 5 minutes given.'\n               +'\\n[b]Completion[/b]'\n               +'\\nConsider the object given is a Coat Hanger:'\n               +'\\n • First enter the title for the object in the “title” field. For example, the alternative object could be a “back scratcher”. '\n               +'\\n • Then fill the description field with additional information. A description is always required. A possible description could be “a tool that can be used to scratch your back”.'\n               +'\\n • Press the submit button to submit your idea'\n               +'\\nThere is no limit to how many ideas you can submit.'\n               +' All submitted entries can be seen by your group together with your name.'\n               +'\\n\\nThe previous example would look like this…'\n               +'\\n[EXAMPLE]'\n               +'\\n\\n[b]Pay:[/b] You will be paid £8.49 from completing all tasks.'\n        },\n      2: {\n        title : 'Objects Task',\n        text : 'The task is to come up with as many ideas for what a given object could be in the 5 minutes given.'\n               +'\\n[b]Completion[/b]'\n               +'\\nConsider the object given is a Coat Hanger:'\n               +'\\n • First enter the title for the object in the “title” field. For example, the alternative object could be a “back scratcher”. '\n               +'\\n • Then fill the description field with additional information. A description is always required. A possible description could be “a tool that can be used to scratch your back”.'\n               +'\\n • Press the submit button to submit your idea'\n               +'\\nThere is no limit to how many ideas you can submit.'\n               +'\\nAll submitted entries can be seen by your group.'\n               +'\\n\\nThe previous example would look like this…'\n               +'\\n[EXAMPLE]'\n               +'\\n\\n[b]Pay:[/b] Your pay is based on your relative performance within your group for all tasks:'\n               +'\\n1. £5.55 – Highest ranking participant'\n               +'\\n2. £2.1'\n               +'\\n3. £1'\n               +'\\n4. £0.5'\n               +'\\n5. £0 – Lowest ranking participant'\n\n        },\n        3: {\n          title : 'Objects Task',\n          text : 'The task is to come up with as many ideas for what a given object could be in the 5 minutes given.'\n                 +'\\n[b]Completion[/b]'\n                 +'\\nConsider the object given is a Coat Hanger:'\n                 +'\\n • First enter the title for the object in the “title” field. For example, the alternative object could be a “back scratcher”. '\n                 +'\\n • Then fill the description field with additional information. A description is always required. A possible description could be “a tool that can be used to scratch your back”.'\n                 +'\\n • Press the submit button to submit your idea'\n                 +'\\nThere is no limit to how many ideas you can submit.'\n                 +' All submitted entries can be seen by your group together with your name.'\n                 +'\\n\\nThe previous example would look like this…'\n                 +'\\n[EXAMPLE]'\n                //  +'\\nObject name: Back Scratcher'\n                //  +'\\nDescription: A tool that can be used to scratch your back'\n                //  +'\\n\t\t\t(might be able to show using screen shot)'\n                 +'\\n\\n[b]Pay:[/b] Your pay is based on your relative performance within your group for all tasks:'\n                 +'\\n1. £5.55 – Highest ranking participant'\n                 +'\\n2. £2.1'\n                 +'\\n3. £1'\n                 +'\\n4. £0.5'\n                 +'\\n5. £0 – Lowest ranking participant'\n\n          },\n  },\n\n  similarities : {\n    0: {\n      title : 'Instructions for Similarity rounds',\n      text : 'This round is completely anonymous and will not affect your pay.'\n              +'\\nA list of ideas will be shown and you are to judge whether any two are similar. If a similarity identified more than once, the later entry will be disregarded in following stages.'\n              +'\\n[b]Similarity guidelines:[/b]'\n              +'\\n1. Ideas are exact copies of each other.'\n              +'\\n2. Idea is largely expressed in an existing entry.'\n              +'\\nIdeas should be originally expressed and not be simply rewordings of each other'\n              +'\\n[b]Example:[/b]'\n              +'\\nThe following is a similarity judging example, but the final decision is up to you.  Consider the task: “come up with alternative object for a coat hanger”:'\n              +'\\n[EXAMPLE]'\n              // +'\\n1. Object: Back Scratcher, Description: Bent to scratch the back'\n              // +'\\n2. Object: Leg Scratcher, Description: Bent to scratch the leg'\n              // +'\\n3. Object: Reaching tool, Description: Moulded in order to reach high places.'\n              +'\\n • 1 and 2 express the same idea similarly and are seen as similar.'\n              +'\\n • 3 expresses a similar idea differently and so is not similar to the first two. '\n              //+'\\n[Screen showing the choice of 1&2) explanation it means that they are seen to be too similar to each other.]'\n        },\n    1: {\n      title : 'Instructions for Similarity rounds',\n      text : 'This round is completely anonymous and will not affect your pay.'\n              +'\\nA list of ideas will be shown and you are to judge whether any two are similar. If a similarity identified more than once, the later entry will be disregarded in following stages.'\n              +'\\n[b]Similarity guidelines:[/b]'\n              +'\\n1. Ideas are exact copies of each other.'\n              +'\\n2. Idea is largely expressed in an existing entry.'\n              +'\\nIdeas should be originally expressed and not be simply rewordings of each other'\n              +'\\n[b]Example:[/b]'\n              +'\\nThe following is a similarity judging example, but the final decision is up to you.  Consider the task: “come up with alternative object for a coat hanger”:'\n              +'\\n[EXAMPLE]'\n              // +'\\n1. Object: Back Scratcher, Description: Bent to scratch the back'\n              // +'\\n2. Object: Leg Scratcher, Description: Bent to scratch the leg'\n              // +'\\n3. Object: Reaching tool, Description: Moulded in order to reach high places.'\n              +'\\n • 1 and 2 express the same idea similarly and are seen as similar.'\n              +'\\n • 3 expresses a similar idea differently and so is not similar to the first two. '\n              //+'\\n[Screen showing the choice of 1&2) explanation it means that they are seen to be too similar to each other.]'\n       },\n    2: {\n      title : 'Instructions for Similarity rounds',\n      text : 'This round is completely anonymous and will not affect your pay.'\n              +'\\nA list of ideas will be shown and you are to judge whether any two are similar. If a similarity identified more than once, the later entry will be disregarded in following stages.'\n              +'\\n[b]Similarity guidelines:[/b]'\n              +'\\n1. Ideas are exact copies of each other.'\n              +'\\n2. Idea is largely expressed in an existing entry.'\n              +'\\nIdeas should be originally expressed and not be simply rewordings of each other'\n              +'\\n[b]Example:[/b]'\n              +'\\nThe following is a similarity judging example, but the final decision is up to you.  Consider the task: “come up with alternative object for a coat hanger”:'\n              +'\\n[EXAMPLE]'\n              // +'\\n1. Object: Back Scratcher, Description: Bent to scratch the back'\n              // +'\\n2. Object: Leg Scratcher, Description: Bent to scratch the leg'\n              // +'\\n3. Object: Reaching tool, Description: Moulded in order to reach high places.'\n              +'\\n • 1 and 2 express the same idea similarly and are seen as similar.'\n              +'\\n • 3 expresses a similar idea differently and so is not similar to the first two. '\n            //  +'\\n[Screen showing the choice of 1&2) explanation it means that they are seen to be too similar to each other.]'\n    },\n    3: {\n      title : 'Instructions for Similarity rounds',\n      text : 'This round is completely anonymous and will not affect your pay.'\n              +'\\nA list of ideas will be shown and you are to judge whether any two are similar. If a similarity identified more than once, the later entry will be disregarded in following stages.'\n              +'\\n[b]Similarity guidelines:[/b]'\n              +'\\n1. Ideas are exact copies of each other.'\n              +'\\n2. Idea is largely expressed in an existing entry.'\n              +'\\nIdeas should be originally expressed and not be simply rewordings of each other'\n              +'\\n[b]Example:[/b]'\n              +'\\nThe following is a similarity judging example, but the final decision is up to you.  Consider the task: “come up with alternative object for a coat hanger”:'\n              +'\\n[EXAMPLE]'\n              // +'\\n1. Object: Back Scratcher, Description: Bent to scratch the back'\n              // +'\\n2. Object: Leg Scratcher, Description: Bent to scratch the leg'\n              // +'\\n3. Object: Reaching tool, Description: Moulded in order to reach high places.'\n              +'\\n • 1 and 2 express the same idea similarly and are seen as similar.'\n              +'\\n • 3 expresses a similar idea differently and so is not similar to the first two. '\n              //+'\\n[Screen showing the choice of 1&2) explanation it means that they are seen to be too similar to each other.]'\n    },\n  },\n  favourites : {\n    0: {\n      title : 'Favourites rounds',\n      text : 'You will be asked to name your 5 favourites ideas by giving them stars.\\n'\n             +'\\nYou will be completely anonymous when giving stars.\\n'\n             +'\\nThe amount of stars an individual receives for his/her ideas will determine his/her rank within their group.'\n             +'\\n[EXAMPLE]'\n          },\n    1: {\n      title : 'Favourites rounds',\n      text : 'You will be asked to name your 5 favourites ideas by giving them stars.\\n'\n             +'\\nYou will be completely anonymous when giving stars.\\n'\n             +'\\nThe amount of stars an individual receives for his/her ideas will determine his/her rank within their group.'\n             +'\\n[EXAMPLE]'\n          },\n    2: {\n      title : 'Favourites rounds',\n      text : 'You will be asked to name your 5 favourites ideas by giving them stars.\\n'\n             +'\\nYou will be completely anonymous when giving stars.\\n'\n             +'\\nThe amount of stars an individual receives for his/her ideas will determine his/her rank within their group.'\n             +'\\n[EXAMPLE]'\n          },\n    3: {\n      title : 'Favourites rounds',\n      text : 'You will be asked to name your 5 favourites ideas by giving them stars.\\n'\n             +'\\nYou will be completely anonymous when giving stars.\\n'\n             +'\\nThe amount of stars an individual receives for his/her ideas will determine his/her rank within their group.'\n             +'\\n[EXAMPLE]'\n          },\n  },\n  math : {\n    0 : {\n      title : 'Math Game Instructions',\n      text : 'Solve as many addition problems as possible during the 5 minutes given. The number of correct answers will be shown when the game is over. Example seen below.'\n        +'\\n[EXAMPLE]'\n        // +'\\n[Math result screen example]'\n    },\n    1 : {\n      title : 'Math Game Instructions',\n      text : 'Solve as many addition problems as possible during the 5 minutes given. The number of correct answers will be shown when the game is over. Example seen below.'\n        +'\\n[EXAMPLE]'\n        // +'\\n[Math result screen example]'\n    },\n    2 : {\n      title : 'Math Game Instructions',\n      text : 'Solve as many addition problems as possible during the 5 minutes given. The number of correct answers will be shown when the game is over. Example seen below.'\n        +'\\n[EXAMPLE]'\n        +'\\n[b]Pay:[/b] Your pay will depend on your performance relative to others in your group.'\n        // +'\\n[Math result screen example]'\n    },\n    3 : {\n      title : 'Math Game Instructions',\n      text : 'Solve as many addition problems as possible during the 5 minutes given. The number of correct answers will be shown when the game is over. Example seen below.'\n        +'\\n[EXAMPLE]'\n        +'\\n[b]Pay:[/b] Your pay will depend on your performance relative to others in your group.'\n        // +'\\n[Math result screen example]'\n    },\n  },\n}\n\n\nclass Instructions extends Component {\n\n  constructor(props) {\n    super(props);\n     this.state = {groupType: 0,isSubmitted: false};\n\n     console.log(\"INSTRUCTIONS: \"+props.payload)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"nextProps vienen pa ca\")\n    console.log(nextProps)\n    this.setState({\n      groupType: nextProps.groupType,\n    });\n\n  }\n\n  componentWillUnmount(){\n    this.setState({isSubmitted: false});\n  }\n\n  static contextTypes = {\n    muiTheme: React.PropTypes.object.isRequired,\n    router: React.PropTypes.object.isRequired,\n    websocket: React.PropTypes.object,\n  };\n\n  handleSave(text) {\n    if (text.length !== 0) {\n      this.props.addTodo(text)\n    }\n  }\n\n  getTaskExample = (tasktype) => {\n        switch(tasktype){\n          case 'alternativeObject':\n           return <div style={{marginTop:20}}>\n               <Card>\n               <CardText>\n                   Title: <TextField id={'dummy'} value='Back Scratcher' style={{marginLeft:10,\n                   }} /><br/>\n                   Description: <TextField\n                                 id={'dummy2'}\n                                 multiLine={true}\n                                 rows={1}\n                                 rowsMax={10}\n                                 value='A tool that can be used to scratch your back'\n                                 style={{ marginLeft:20, width: '80%',\n                      }} />\n               </CardText>\n              </Card>\n           </div>\n          case 'alternativeObjectFigural':\n            return <div style={{marginTop:20}}>\n                <Card>\n                <CardText>\n                    Title: <TextField id={'dummy'} value='Flag' style={{marginLeft:10,\n                    }} /><br/>\n                    Description: <TextField\n                                  id={'dummy2'}\n                                  multiLine={true}\n                                  rows={1}\n                                  rowsMax={10}\n                                  value='The line could be a side of a flag.'\n                                  style={{ marginLeft:20, width: '80%',\n                       }} />\n                </CardText>\n               </Card>\n            </div>\n          case 'similarities':\n            return <div> <div style={{padding:5,display:'flex'}}>\n\n                          <Card style={{paddingTop: '0%',fontWeight: 800,}}>\n                            <CardText style={{padding:8}}>\n                              1.\n                            </CardText>\n                          </Card>\n\n                          <Card>\n                            <CardHeader style={{padding:8}}>\n                              Back Scratcher\n                            </CardHeader>\n                            <CardText style={{padding:8}}>\n                              Bent to scratch the back\n                            </CardText>\n                          </Card>\n\n                          <Card>\n                            <CardText style={{padding:8, paddingTop:28,fontWeight: 800}}>\n                              Similar to:\n                            </CardText>\n                          </Card>\n\n                          <Card>\n                            <CardText style={{padding:8}}>\n                            <SelectField value={2} onChange={ () => {alert('This will set the selected entries as similar')}} style={{width:30}}>\n                                  <MenuItem value={1} primaryText={1} />\n                                  <MenuItem  value={2} primaryText={2} />\n                                  <MenuItem  value={3} primaryText={3} />\n                             </SelectField>\n                            </CardText>\n                          </Card>\n\n                          <Card>\n                            <CardText style={{padding:8}}>\n                            <SelectField value={-1} onChange={ () => {alert('This will set the selected entries as similar')}} style={{width:30}}>\n                                  <MenuItem value={0} primaryText={0} />\n                                  <MenuItem  value={1} primaryText={1} />\n                                  <MenuItem  value={2} primaryText={2} />\n                             </SelectField>\n                            </CardText>\n                          </Card>\n                    </div>\n\n                    <div style={{padding:5,display:'flex'}}>\n                    <Card style={{paddingTop: '0%',fontWeight: 800,}}>\n                      <CardText style={{padding:8}}>\n                        2.\n                      </CardText>\n                    </Card>\n\n                    <Card>\n                      <CardHeader style={{padding:8}}>\n                      Leg Scratcher\n                      </CardHeader>\n                      <CardText style={{padding:8}}>\n                      Bent to scratch the leg\n                      </CardText>\n                    </Card>\n\n                    <Card>\n                      <CardText style={{padding:8, paddingTop:28,fontWeight: 800}}>\n                        Similar to:\n                      </CardText>\n                    </Card>\n\n                    <Card>\n                      <CardText style={{padding:8}}>\n                      <SelectField value={1} onChange={ () => {alert('This will set the selected entries as similar')}} style={{width:30}}>\n                            <MenuItem value={1} primaryText={1} />\n                            <MenuItem  value={2} primaryText={2} />\n                            <MenuItem  value={3} primaryText={3} />\n                       </SelectField>\n                      </CardText>\n                    </Card>\n\n                    <Card>\n                      <CardText style={{padding:8}}>\n                      <SelectField value={-1} onChange={ () => {alert('This will set the selected entries as similar')}} style={{width:30}}>\n                            <MenuItem value={1} primaryText={1} />\n                            <MenuItem  value={2} primaryText={2} />\n                            <MenuItem  value={3} primaryText={3} />\n                       </SelectField>\n                      </CardText>\n                    </Card>\n              </div>\n\n              <div style={{padding:5,display:'flex'}}>\n\n                            <Card style={{paddingTop: '0%',fontWeight: 800,}}>\n                              <CardText style={{padding:8}}>\n                                3.\n                              </CardText>\n                            </Card>\n\n                            <Card>\n                              <CardHeader style={{padding:8}}>\n                                Reaching tool\n                              </CardHeader>\n                              <CardText style={{padding:8}}>\n                                Moulded in order to reach high places\n                              </CardText>\n                            </Card>\n\n                            <Card>\n                              <CardText style={{padding:8, paddingTop:28,fontWeight: 800}}>\n                                Similar to:\n                              </CardText>\n                            </Card>\n\n\n                            <Card>\n                              <CardText style={{padding:8}}>\n                              <SelectField value={-1} onChange={ () => {alert('This will set the selected entries as similar')}} style={{width:30}}>\n                                    <MenuItem value={1} primaryText={1} />\n                                    <MenuItem  value={2} primaryText={2} />\n                                    <MenuItem  value={3} primaryText={3} />\n                               </SelectField>\n                              </CardText>\n                            </Card>\n                      </div>\n            </div>\n          case 'favourites':\n            return <div style={{marginTop:20,display:'flex'}}>\n                      <Card style={{paddingTop: '0%',fontWeight: 800,}}>\n                        <CardText style={{padding:8}}>\n                          {1+'.'}\n                        </CardText>\n                      </Card>\n\n                      <Card style={{width:460}}>\n                        <CardHeader style={{padding:8}}>\n                            Reset button pressing tool\n                        </CardHeader>\n                        <CardText style={{padding:8}}>\n                          A tool that can be used to press reset buttons which cannot be pressed with your fingers\n                        </CardText>\n                      </Card>\n\n                      <Card>\n                          <CardText style={{padding:20}}>\n                            <Rater entryIndex={0} currentRating={3} raterCallback={ () => {alert('This is how you assign a rating')}} />\n                          </CardText>\n                      </Card>\n                  </div>\n          case 'math':\n              return <div style={{marginTop:20}}>\n                  <Card>\n                  <CardText>\n                    <div>56+73+5+10+11 =\n                      <TextField\n                        id={'dummy'}\n                        style={{\n                          paddingLeft: 10,\n                          marginRight: 20,\n                          }}\n                          value={155}\n                      />\n                    </div>\n                  </CardText>\n                 </Card>\n              </div>\n          default:\n            return <div></div>\n\n    }\n  }\n\n  formatIntructionItem = (item,example) =>{\n      if ( item.indexOf(\"[EXAMPLE]\") > -1 ){\n        return example\n      } else if(item.indexOf('[b]') > -1){\n        var splits = item.replace('[b]','').split(\"[/b]\")\n        return <span><span style={{fontWeight:'bold', marginRight:5}}>{splits[0]}</span>{splits[1]}</span>\n      } else {\n        return item\n      }\n  }\n\n\n  gatherData = () => {\n      if ( !this.state.isSubmitted ){\n        this.props.submit( this.state )\n        this.setState({isSubmitted: true});\n      }\n    }\n\n\n//'_marker'\n  render() {\n    if ( JSON.stringify(this.props.type) == \"{}\" ) {\n      return <span></span>\n    }\n\n    const { textColor } = this.context.muiTheme.palette;\n\n    if (\n      [0,1,2,3].includes(this.props.groupType) == false ||\n      typeof this.props.type != 'string'\n    ) {\n      return <span></span>\n    }\n\n    let groupType =  this.props.groupType\n    let tasktype = this.props.type\n\n    let possibleTasks = ['favourites','math','similarities','alternativeObject','alternativeObjectFigural','experimentStructure']\n    console.log(\"TASK TYPE: \"+tasktype)\n    if ( possibleTasks.indexOf(tasktype) < 0 ){\n      return <div></div>\n    }\n\n    let title = instructionsData[tasktype][groupType].title;\n    let text = instructionsData[tasktype][groupType].text;\n    let example = this.getTaskExample(tasktype);\n\n\n\n    return (\n      <div>\n      {\n        // <h1>{message}</h1>\n        // <Wait melacome={<ActionShop />} /><ActionStore /> <ActionShop />\n        // <div> {this.props.firstName} {v} {this.mlk()}</div>\n      }\n\n\n          <Card\n            style={{\n              padding: 30,\n              margin: '2% 15% 15%',\n              minWidth: 900,\n              maxWidth: 1200,\n            }}\n          >\n            <CardHeader\n              title={title}\n              titleStyle={{\n                fontSize: 24,\n                color: textColor,\n              }}\n            />\n            <CardText\n              style={{\n                paddingTop: 0,\n              }}\n              >\n\n              {\n                text.split('\\n').map(\n                    (item,i) => <div key={i} style={{marginBottom:10}}>{this.formatIntructionItem(item,example)}</div>\n                  )\n              }\n\n              {\n                //example\n              }\n              <br />\n\n              <FlatButton\n                id=\"ready\"\n                backgroundColor='green'\n                style={{color: 'white',}}\n                  onClick= { this.gatherData }\n              >\n                I'm ready\n              </FlatButton>\n\n            </CardText>\n\n          </Card>\n\n      </div>\n    )\n  }\n}\n\nInstructions.propTypes = {\n  // addTodo: PropTypes.func.isRequired\n}\n\n//export default Question\n\nconst mapStateToProps = (state) => {\n  return {\n    type : state.task.payload != undefined? state.task.payload.taskType: null,\n    groupType : state.task.payload != undefined? state.task.payload.groupType: null,\n  }\n}\n\nexport default connect(mapStateToProps)(Instructions)\n"]}