{"version":3,"sources":["components/survey/instructions.js"],"names":["Question","props","state","text","length","addTodo","textColor","context","muiTheme","palette","title","padding","margin","minWidth","fontSize","color","paddingTop","split","map","item","i","marginBottom","marginTop","marginLeft","width","contextTypes","PropTypes","object","isRequired","router","websocket","propTypes","mapStateToProps","firstName","account"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAGA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAGA;;AAEA;;;;AAEA;;;;IAWMA,Q;;;AAEJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,0IACXA,KADW;;AAEhB,UAAKC,KAAL,GAAa,EAAb;AAFgB;AAGlB;;;;yCAQoB,CAEpB;;;+BACUC,I,EAAM;AACf,UAAIA,KAAKC,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAKH,KAAL,CAAWI,OAAX,CAAmBF,IAAnB;AACD;AACF;;AAGH;;;;6BACW;AAAA,UAECG,SAFD,GAEe,KAAKC,OAAL,CAAaC,QAAb,CAAsBC,OAFrC,CAECH,SAFD;;;AAIP,UAAII,QAAQ,qCAAZ;AACA,UAAIP,OAAO,kGACD,qFADC,GAEA,6JAFA,GAGA,qRAHA,GAIA,oFAJA,GAKA,2FALA,GAMA,gDANX;;AAQA,aACE;AAAA;AAAA;AAQI;AAAA;AAAA;AACE,mBAAO;AACLQ,uBAAS,EADJ;AAELC,sBAAQ,YAFH;AAGLC,wBAAU;AAHL;AADT;AAOE;AACE,mBAAOH,KADT;AAEE,wBAAY;AACVI,wBAAU,EADA;AAEVC,qBAAOT;AAFG;AAFd,YAPF;AAcE;AAAA;AAAA;AACE,qBAAO;AACLU,4BAAY;AADP;AADT;AAMGb,iBAAKc,KAAL,CAAW,IAAX,EAAiBC,GAAjB,CAAsB,UAACC,IAAD,EAAMC,CAAN;AAAA,qBAAY;AAAA;AAAA,kBAAK,KAAKA,CAAV,EAAa,OAAO,EAACC,cAAa,EAAd,EAApB;AAAwCF;AAAxC,eAAZ;AAAA,aAAtB,CANH;AAQE;AAAA;AAAA,gBAAK,OAAO,EAACG,WAAU,EAAX,EAAZ;AACI;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACW,uEAAW,IAAG,OAAd,EAAsB,OAAM,4BAA5B,EAAyD,OAAO,EAACC,YAAW;AAAZ,qBAAhE,GADX;AAES,2DAFT;AAAA;AAGiB;AACC,wBAAG,QADJ;AAEC,+BAAW,IAFZ;AAGC,0BAAM,CAHP;AAIC,6BAAS,EAJV;AAKC,2BAAM,2FALP;AAMC,2BAAO,EAAEA,YAAW,EAAb,EAAiBC,OAAO;AAAxB,qBANR;AAHjB;AADA;AADJ,aARF;AAyBE,qDAzBF;AA2BE;AAAA;AAAA;AACE,oBAAG,OADL;AAEE,iCAAgB,OAFlB;AAGE,uBAAO,EAACT,OAAO,OAAR;AAHT;AAAA;AAAA;AA3BF;AAdF;AARJ,OADF;AAgED;;;;;AArGGf,Q,CAOGyB,Y,GAAe;AACpBjB,YAAU,gBAAMkB,SAAN,CAAgBC,MAAhB,CAAuBC,UADb;AAEpBC,UAAQ,gBAAMH,SAAN,CAAgBC,MAAhB,CAAuBC,UAFX;AAGpBE,aAAW,gBAAMJ,SAAN,CAAgBC;AAHP,C;;;AAiGxB3B,SAAS+B,SAAT,GAAqB;AACnB;;;AAGF;;AAJA,CAMA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAAC9B,KAAD,EAAW;AACjC,SAAO;AACL+B,eAAY/B,MAAMgC,OAAN,CAAcD;AADrB,GAAP;AAGD,CAJD;;kBAMe,yBAAQD,eAAR,EAAyBhC,QAAzB,C","file":"components/survey/instructions.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\n\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport Slider from 'material-ui/Slider';\nimport {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton';\n\n\nimport { connect } from 'react-redux'\n\nimport Wait from './wait'\n\nimport {\n ActionShop,\n ActionShoppingBasket,\n ActionSpeakerNotesOff,\n ActionSpeakerNotes,\n ActionSpellcheck,\n ActionStars,\n ActionStore,\n} from 'material-ui/svg-icons';\n\n\nclass Question extends Component {\n\n  constructor(props) {\n    super(props);\n     this.state = {};\n  }\n\n  static contextTypes = {\n    muiTheme: React.PropTypes.object.isRequired,\n    router: React.PropTypes.object.isRequired,\n    websocket: React.PropTypes.object,\n  };\n\n  componentWillMount() {\n\n  }\n  handleSave(text) {\n    if (text.length !== 0) {\n      this.props.addTodo(text)\n    }\n  }\n\n\n//'_marker'\n  render() {\n\n    const { textColor } = this.context.muiTheme.palette;\n\n    let title = 'Example of Alternative Objects Task';\n    let text = 'The task is to come up with as many alternative objects for a given object. \\n\\n For example:'\n            \t+'\\nIf the object given is a paper clip then here is how you would complete the task.'\n              +'\\n1. First you would enter the name of the object in the “object name” field, for example, the alternative object could be a “reset button pressing tool”. '\n              +'\\n2. Then a description must be filled in to give more information, this is especially important if the object is uncommon. Using the example above the “description” could be, for example, A tool that can be used to press reset buttons which can be pressed with your fingers.'\n              +'\\n3. When you are finished you can press the “submit button” to submit the entry. '\n              +'\\n4. Your name will be shown next to your entries and so each entry will have an author. '\n              +'\\n\\nThe previous example would look like this…';\n\n    return (\n      <div>\n      {\n        // <h1>{message}</h1>\n        // <Wait melacome={<ActionShop />} /><ActionStore /> <ActionShop />\n        // <div> {this.props.firstName} {v} {this.mlk()}</div>\n      }\n\n\n          <Card\n            style={{\n              padding: 30,\n              margin: '2% 15% 15%',\n              minWidth: 900,\n            }}\n          >\n            <CardHeader\n              title={title}\n              titleStyle={{\n                fontSize: 24,\n                color: textColor,\n              }}\n            />\n            <CardText\n              style={{\n                paddingTop: 0,\n              }}\n              >\n\n              {text.split('\\n').map( (item,i) => <div key={i} style={{marginBottom:10}}>{item}</div>)}\n\n              <div style={{marginTop:20}}>\n                  <Card>\n                  <CardText>\n                      Title: <TextField id='dummy' value='Reset button pressing tool' style={{marginLeft:10,\n                      }} /><br/>\n                      Description: <TextField\n                                    id='dummy2'\n                                    multiLine={true}\n                                    rows={1}\n                                    rowsMax={10}\n                                    value='A tool that can be used to press reset buttons which cannot be pressed with your fingers.'\n                                    style={{ marginLeft:20, width: '80%',\n                         }} />\n                  </CardText>\n                 </Card>\n              </div>\n\n              <br />\n\n              <FlatButton\n                id=\"ready\"\n                backgroundColor='green'\n                style={{color: 'white',}}\n              >\n                I'm ready\n              </FlatButton>\n\n            </CardText>\n\n          </Card>\n\n      </div>\n    )\n  }\n}\n\nQuestion.propTypes = {\n  // addTodo: PropTypes.func.isRequired\n}\n\n//export default Question\n\nconst mapStateToProps = (state) => {\n  return {\n    firstName : state.account.firstName\n  }\n}\n\nexport default connect(mapStateToProps)(Question)\n"],"sourceRoot":"/source/"}