{"version":3,"sources":["components/survey/survey-container.js"],"names":["SurveyContainer","state","accounts","groups","selection","payload","_input","setState","start","Date","now","infoObject","props","context","websocket","send","accountId","account","email","startTimestamp","endTimestamp","display","flexWrap","children","cloneElement","submit","infoToSubmit","submitInfo","propTypes","contextTypes","muiTheme","object","isRequired","mapStateToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AAEA;;AAIA;;;;IAMMA,e;;;AAWJ,6BAAc;AAAA;;AAAA;;AAEZ,UAAKC,KAAL,GAAa;AACXC,gBAAU,EADC;AAEXC,cAAQ,EAFG;AAGXC,iBAAW,EAHA;AAIXC,eAAS;AAJE,KAAb;;AAOA;AACA,UAAKC,MAAL,GAAc,EAAd;AAVY;AAWb;;;;wCAEmB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,WAAKC,QAAL,CAAc,EAACC,OAAOC,KAAKC,GAAL,EAAR,EAAd;AACD;;;+BAEWC,U,EAAa;AACvB,UAAIC,QAAQ,KAAKA,KAAjB;AACA,WAAKC,OAAL,CAAaC,SAAb,CAAuBC,IAAvB,CACE;AAEIC,mBAAW,aAAaJ,KAAb,GAAoBA,MAAMK,OAAN,CAAcC,KAAd,IAAuB,YAA3C,GAAyD,EAFxE;AAGIC,wBAAgB,KAAKlB,KAAL,CAAWO,KAH/B;AAIIY,sBAAcX,KAAKC,GAAL;AAJlB,SAKOC,UALP,EADF;AAUD;;;6BAEQ;AAAA;;AACP,UAAIC,QAAQ,KAAKA,KAAjB;;AAEA,aACE;AAAA;AAAA;AACE,iBAAO;AACLS,qBAAS,MADJ;AAELC,sBAAU;AAFL;AADT;AAOE,aAAKV,KAAL,CAAWW,QAAX,IACA,gBAAMC,YAAN,CACE,KAAKZ,KAAL,CAAWW,QADb,EAEE;AACElB,mBAAS,KAAKJ,KAAL,CAAWI,OADtB;AAEEoB,kBAAQ,gBAAEC,YAAF;AAAA,mBAAoB,OAAKC,UAAL,CAAiBD,YAAjB,CAApB;AAAA;AAFV,SAFF;AARF,OADF;AAmBD;;;;;AAtEG1B,e,CACG4B,S,GAAY;AACjB;AACA;AAFiB,C;AADf5B,e,CAMG6B,Y,GAAe;AACpBC,YAAU,iBAAUC,MAAV,CAAiBC,UADP;AAEpBlB,aAAW,iBAAUiB;AAFD,C;;;AAmExB,IAAME,kBAAkB,SAAlBA,eAAkB,CAAChC,KAAD,EAAW;AACjC,SAAO;AACLgB,aAAShB,MAAMgB;AADV,GAAP;AAGD,CAJD;;kBAMe,yBAAQgB,eAAR,EAAyBjC,eAAzB,C","file":"components/survey/survey-container.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\nimport { connect } from 'react-redux'\nimport sessionData from '../../session-data'\n\nimport {\n  wsSurveyStateGet,\n} from '../../websocket-message/query-actions'\n\nimport {\n  wsSubmitSurveyInfo,\n} from '../../websocket-message/server-actions'\n\n\n\nclass SurveyContainer extends Component {\n  static propTypes = {\n    // groups: PropTypes.object,\n    // accounts: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n    websocket: PropTypes.object,\n  };\n\n  constructor() {\n    super()\n    this.state = {\n      accounts: { },\n      groups: { },\n      selection: [],\n      payload: 'some info',\n    };\n\n    // Used to store references.\n    this._input = {};\n  }\n\n  componentDidMount() {\n    // Load the study information\n    // Ask for the information to the server\n    // this.context.websocket.send( wsSurveyStateGet(this.props.account.email) )\n    // Take the payload directly from the session-data file.\n    // setTimeout(() => {console.log('didMount> ' + this.state.payload);this.setState({payload: 'some more info!!'});}, 4000)\n    // setTimeout(() => {console.log('didMount> ' + this.state.payload);this.submitInfo({payload: 'some more info!!'});}, 4000)\n    this.setState({start: Date.now()});\n  }\n\n  submitInfo( infoObject ) {\n    let props = this.props\n    this.context.websocket.send(\n      wsSubmitSurveyInfo(\n        {\n          accountId: 'account' in props? props.account.email || 'unassigned': '',\n          startTimestamp: this.state.start,\n          endTimestamp: Date.now(),\n          ...infoObject,\n        }\n      )\n    )\n  }\n\n  render() {\n    let props = this.props\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n        }}\n      >\n      {\n        this.props.children &&\n        React.cloneElement(\n          this.props.children,\n          {\n            payload: this.state.payload,\n            submit: ( infoToSubmit ) => this.submitInfo( infoToSubmit ),\n          }\n        )\n      }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    account: state.account\n  }\n}\n\nexport default connect(mapStateToProps)(SurveyContainer)\n"],"sourceRoot":"/source/"}