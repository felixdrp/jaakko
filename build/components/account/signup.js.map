{"version":3,"sources":["components/account/signup.js"],"names":[],"mappings":"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","file":"components/account/signup.js","sourcesContent":["import React from 'react';\n// import ReactMixin from 'react-mixin';\n// import Auth from '../services/AuthService'\nimport { Link } from 'react-router'\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField';\n\nexport default class AccountSignUp extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      firstNameError: '',\n      surenameError: '',\n\n      userError: '',\n      emailError: '',\n      passwordError: '',\n      reEnterPasswordError: '',\n    };\n\n    // Used to store references.\n    this._input = {};\n  }\n\n  async registerUser(e) {\n    e.preventDefault();\n    const input = this._input;\n    const username = input.email.getValue();\n    const password = input.password.getValue();\n\n    // Auth.login(this.state.user, this.state.password)\n    //   .catch(function(err) {\n    //     alert(\"There's an error logging in\");\n    //     console.log(\"Error logging in\", err);\n    //   });\n    const options = {\n      // host: location.hostname,\n      // port: location.port,\n      method: 'POST',\n      path: '/api/auth/local/register',\n      headers: { Authorization: \"Basic \" + btoa(username + \":\" + password)}\n    }\n    var body = JSON.stringify({\n      foo: \"bar\"\n    })\n\n    await httpClient.getData(options, body);\n\n  }\n\n  ifNotEmptyCleanAskInfo(input, stateError, e) {\n    if (this._input[input].getValue().length > 0 && this.state[stateError].length > 0) {\n      this.setState({ [stateError] : ''});\n    }\n  }\n\n  ifEmptyAskInfo(input, stateError, errorMsg, e) {\n    if (this._input[input].getValue().length === 0) {\n      this.setState({ [stateError] : errorMsg});\n    }\n  }\n\n  render() {\n    const state = this.state;\n    const spaceInterElements = 25;\n    const style = {\n      input1: {\n        hintStyle: {\n          color: '#3F51B5',\n        },\n        floatingLabelFocus: {\n          color: '#3F51B5',\n        },\n        underline: {\n          borderColor: 'red',\n        },\n      },\n      button1: {\n        color: 'white',\n        backgroundColor: '#3F51B5',\n        width: 180,\n      },\n      button2: {\n        color: 'white',\n        backgroundColor: '#4CAF50',\n        width: 180,\n      },\n    };\n    const input = this._input;\n\n    return (\n      <Card\n        style={{\n          padding: 30,\n        }}\n      >\n        <CardHeader\n          title=\"Register a new account:\"\n          // title=\"Login to Your Account\"\n          titleStyle={{\n            fontSize: 24\n          }}\n        />\n        <CardText\n          style={{\n            paddingTop: 0,\n          }}\n        >\n          <form\n            role=\"form\"\n            style={{\n              marginLeft: 30,\n            }}\n            // action=\"http://mirtest.dcs.gla.ac.uk/api/auth/local/register\"\n            action=\"http://marakei.dcs.gla.ac.uk//api/auth/local/register\"\n            method=\"POST\"\n          >\n            <TextField\n              hintText=\"First name\"\n              floatingLabelText=\"First name\"\n              floatingLabelFocusStyle={style.input1.floatingLabelFocus}\n              errorText={this.state.firstNameError}\n              ref={(c) => input.firstName = c}\n              onChange={ this.ifNotEmptyCleanAskInfo.bind(this, 'firstName', 'firstNameError') }\n              onBlur={ this.ifEmptyAskInfo.bind(this, 'firstName', 'firstNameError', 'First name empty') }\n            />\n            <br />\n            <TextField\n              hintText=\"Surename\"\n              floatingLabelText=\"Surename\"\n              floatingLabelFocusStyle={style.input1.floatingLabelFocus}\n              errorText={this.state.surenameError}\n              ref={(c) => input.surename = c}\n              onChange={ this.ifNotEmptyCleanAskInfo.bind(this, 'surename', 'surenameError') }\n              onBlur={ this.ifEmptyAskInfo.bind(this, 'surename', 'surenameError', 'Surename empty') }\n            />\n            <br />\n            <br />\n            <br />\n            <TextField\n              hintText=\"Email address\"\n              floatingLabelText=\"Email address\"\n              floatingLabelFocusStyle={style.input1.floatingLabelFocus}\n              errorText={this.state.emailError}\n              ref={(c) => input.email = c}\n              onChange={ this.ifNotEmptyCleanAskInfo.bind(this, 'email', 'emailError') }\n              onBlur={ this.ifEmptyAskInfo.bind(this, 'email', 'emailError', 'Email empty') }\n            />\n            <br />\n            <TextField\n              hintText=\"Password\"\n              floatingLabelText=\"Password\"\n              type=\"password\"\n              errorText={this.state.passwordError}\n              ref={(c) => input.password = c}\n              onChange={ this.ifNotEmptyCleanAskInfo.bind(this, 'password', 'passwordError') }\n              onBlur={ this.ifEmptyAskInfo.bind(this, 'password', 'passwordError', 'Password empty') }\n            />\n            <br />\n            <TextField\n              hintText=\"Re-enter Password\"\n              floatingLabelText=\"Re-enter Password\"\n              type=\"password\"\n              errorText={this.state.reEnterPasswordError}\n              ref={(c) => input.reEnterPassword = c}\n              onChange={ this.ifNotEmptyCleanAskInfo.bind(this, 'reEnterPassword', 'reEnterPasswordError') }\n              onBlur={ this.ifEmptyAskInfo.bind(this, 'reEnterPassword', 'reEnterPasswordError', 'Password empty') }\n            />\n            <br />\n            <br />\n            <br />\n            <FlatButton\n              style={style.button1}\n              type=\"submit\"\n              onClick={this.registerUser.bind(this)}\n            >\n              Submit\n            </FlatButton>\n\n          </form>\n        </CardText>\n      </Card>\n    );\n  }\n}\n"],"sourceRoot":"/source/"}