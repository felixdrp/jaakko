{"version":3,"sources":["components/account/signup.js"],"names":["LoginSignUp","state","firstName","error","name","surename","email","password","reEnterPassword","passwordStrength","style","input1","hintStyle","color","floatingLabelFocus","underline","borderColor","invalid","bad","weak","good","strong","button1","backgroundColor","width","button2","_input","nextProps","registerStatus","field","setState","e","preventDefault","input","getValue","fields","result","foundEmpty","console","log","context","websocket","send","target","id","length","score","passwordStrengthCheck","ifNotEmptyCleanAskInfo","options","onBlur","ifEmptyAskInfo","bind","checkReEnterPassword","type","element","errorText","underlineStyle","ps","errorStrengthText","underlineColor","undefined","c","onChangeHandle","spaceInterElements","padding","fontSize","paddingTop","marginLeft","textField","registerUser","Component","propTypes","PropTypes","object","defaultProps","contextTypes","mapStateToProps","account"],"mappings":"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","file":"components/account/signup.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\n\n// import ReactMixin from 'react-mixin';\n// import Auth from '../services/AuthService'\nimport { Link } from 'react-router'\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField';\n\n// import { registerAccountClient } from '../../../data-handler-http/register-account-client'\nimport field from '../../modules/check-field'\nimport { fieldsOptions } from '../../config'\n// Check password strength\nimport zxcvbn from 'zxcvbn';\n\nimport crypto from 'crypto'\n\nimport {\n  registerAccount,\n} from '../../websocket-message/server-actions'\n\nclass LoginSignUp extends React.Component {\n  static propTypes = {\n    registerStatus: React.PropTypes.object,\n\n    // Code of example...\n    // price: React.PropTypes.number.isRequired,\n    // initialQty: React.PropTypes.number\n    // todos: PropTypes.arrayOf(PropTypes.shape({\n    //   id: PropTypes.number.isRequired,\n    //   completed: PropTypes.bool.isRequired,\n    //   text: PropTypes.string.isRequired\n    // }).isRequired).isRequired,\n    // onTodoClick: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n  };\n\n  // To Speak with the server\n  static contextTypes = {\n    websocket: React.PropTypes.object,\n  };\n\n  constructor() {\n    super()\n    this.state = {\n      // Input fields\n      firstName: { error: '', name: 'First name' },\n      surename: { error: '', name: 'Surename' },\n\n      // userError: { error: '', name: 'First name' },\n      email: { error: '', name: 'Email' },\n      password: { error: '', name: 'Password' },\n      reEnterPassword: { error: '', name: 'Re-enter Password' },\n\n      passwordStrength: '',\n    };\n\n    this.style = {\n      input1: {\n        hintStyle: {\n          color: '#3F51B5',\n        },\n        floatingLabelFocus: {\n          color: '#3F51B5',\n        },\n        underline: {\n          borderColor: 'red',\n        },\n        password: {\n          invalid: {\n            color: 'grey',\n          },\n          bad: {\n            color: 'red',\n          },\n          weak: {\n            color: 'orange',\n          },\n          good: {\n            color: 'blue',\n          },\n          strong: {\n            color: 'green',\n          }\n        }\n      },\n      button1: {\n        color: 'white',\n        backgroundColor: '#3F51B5',\n        width: 180,\n      },\n      button2: {\n        color: 'white',\n        backgroundColor: '#4CAF50',\n        width: 180,\n      },\n    };\n\n    // Used to store inputs references.\n    this._input = {};\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Check if it was an error.\n    // Then pass the error from props to state.\n    if (nextProps.registerStatus) {\n      for (let field in nextProps.registerStatus) {\n        this.setState({\n          [field]: {\n            ...this.state[field],\n            error: nextProps.registerStatus[field]\n          }\n        })\n      }\n    }\n  }\n\n  registerUser(e) {\n    e.preventDefault();\n    const input = this._input;\n    // const username = input.email.getValue(),\n    //       username = input.username.getValue(),\n    //       password = input.password.getValue();\n    const firstName = input.firstName.getValue() || '',\n          surename = input.surename.getValue() || '',\n          email = input.email.getValue() || '',\n          password = input.password.getValue() || '',\n          reEnterPassword = input.reEnterPassword.getValue() || '';\n\n    const fields = {\n      firstName,\n      surename,\n      email,\n      password,\n      reEnterPassword,\n    }\n\n    let result = '',\n        foundEmpty = false,\n        field;\n\n    // Check all fields are not empty\n    for (field in fields) {\n      if ( fields[field] === '') {\n        this.setState({ [field] : { ...this.state[field], error: 'Please fill field' } })\n        foundEmpty = true\n      }\n    }\n\n    if (foundEmpty) {\n      return 'Found some empty value'\n    }\n\n    // Check Password and reEnterPassword are equal\n    if ( fields['password'] !== fields['reEnterPassword']) {\n      return this.setState({ ['reEnterPassword'] : { ...this.state[reEnterPassword], error: 'Password is not equal to Re-enter Password' } })\n    }\n\n    try {\n      // debugger\n      console.log(this.context.websocket)\n      result = this.context.websocket.send(\n        registerAccount({\n          firstName,\n          surename,\n          email,\n          password,\n          reEnterPassword,\n        })\n      )\n      // The response will come from websocket\n      // with a redux action.\n      // Even if it is an error.\n      // actions:\n      // Ok: setToken + setAccount info\n      // ERROR: setError\n    } catch(error) {\n      console.error(error);\n    }\n  }\n\n  ifNotEmptyCleanAskInfo(e) {\n    let input = e.target.id\n    if (this._input[input].getValue().length > 0 && this.state[input].error.length > 0) {\n      this.setState({ [input] : { ...this.state[input], error: '' } });\n    }\n  }\n\n  ifEmptyAskInfo(e) {\n    let input = e.target.id\n    // console.log(e.target.id)\n    // console.log(JSON.stringify(this.state))\n    //\n    if (this._input[input].getValue().length === 0) {\n      this.setState({ [input] : { ...this.state[input], error: `${this.state[input].name} is empty` } });\n    }\n  }\n\n  passwordStrengthCheck(e) {\n    this.setState({ passwordStrength : zxcvbn(this._input.password.getValue() || '').score });\n  }\n\n  checkReEnterPassword(e) {\n    let input = e.target.id\n    if (this._input[input].getValue().length === 0) {\n      return this.setState({ [input] : { ...this.state[input], error: `${this.state[input].name} is empty` } });\n    }\n    if ( this._input[input].getValue() !== this._input.password.getValue() ) {\n      return this.setState({ [input] : { ...this.state[input], error: 'Password is not equal to Re-enter Password' } });\n    }\n  }\n\n  onChangeHandle(e) {\n    if (e.target.id == 'password') {\n      this.passwordStrengthCheck(e)\n    }\n    this.ifNotEmptyCleanAskInfo(e)\n  }\n\n  textField(field, options) {\n    let onBlur = field !== 'reEnterPassword'? this.ifEmptyAskInfo.bind(this) : this.checkReEnterPassword.bind(this),\n        type = options && 'type' in options? options.type : '',\n        element = this.state[field],\n        name = element.name,\n        errorText = element.error;\n\n    let [errorStrengthText, underlineColor] = (() => {\n      let underlineStyle = this.style.input1.password,\n          ps = 'Password security ';\n\n      switch (this.state.passwordStrength) {\n        case 0:\n          return [ 'minimum 4 characters', underlineStyle.invalid ]\n        case 1:\n          return [ ps + 'poor', underlineStyle.bad ]\n        case 2:\n          return [ ps + 'weak', underlineStyle.weak ]\n        case 3:\n          return [ ps + 'good', underlineStyle.good ]\n        case 4:\n          return [ ps + 'strong', underlineStyle.strong ]\n      }\n      return []\n    })()\n\n    return (\n      <div>\n        <TextField\n          id={field}\n          type={type}\n          hintText={name}\n          floatingLabelText={name}\n          floatingLabelFocusStyle={this.style.input1.floatingLabelFocus}\n          errorText={field == 'password'? errorText || errorStrengthText : errorText}\n          errorStyle={field == 'password' && errorText.length == 0 ? underlineColor : undefined}\n          ref={(c) => this._input[field] = c}\n          onFocus={ field == 'password'? this.passwordStrengthCheck.bind(this) : undefined }\n          onChange={ this.onChangeHandle.bind(this) }\n          onBlur={ onBlur }\n        />\n        <br />\n      </div>\n    )\n  }\n\n  render() {\n    const state = this.state;\n    const spaceInterElements = 25;\n    const style = this.style;\n    const input = this._input;\n\n    return (\n      <Card\n        style={{\n          padding: 30,\n        }}\n      >\n        <CardHeader\n          title=\"Register a new account:\"\n          // title=\"Login to Your Account\"\n          titleStyle={{\n            fontSize: 24\n          }}\n        />\n        <CardText\n          style={{\n            paddingTop: 0,\n          }}\n        >\n          <form\n            role=\"form\"\n            style={{\n              marginLeft: 30,\n            }}\n            // action=\"http://mirtest.dcs.gla.ac.uk/api/auth/local/register\"\n            action=\"https://marakei.dcs.gla.ac.uk//api/auth/local/register\"\n            method=\"POST\"\n          >\n            {this.textField( 'firstName' )}\n            {this.textField( 'surename' )}\n            <br />\n            <br />\n            {this.textField( 'email' )}\n            {this.textField( 'password', {type: 'password'} )}\n            {this.textField( 'reEnterPassword', {type: 'password'} )}\n\n            <br />\n            <br />\n            <br />\n            <FlatButton\n              id=\"submitRegisterAccount\"\n              style={style.button1}\n              type=\"submit\"\n              onClick={this.registerUser.bind(this)}\n            >\n              Submit\n            </FlatButton>\n\n          </form>\n        </CardText>\n      </Card>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    registerStatus: state.account.registerStatus\n  }\n}\n\nexport default connect(mapStateToProps)(LoginSignUp)\n"],"sourceRoot":"/source/"}