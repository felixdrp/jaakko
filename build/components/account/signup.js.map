{"version":3,"sources":["components/account/signup.js"],"names":[],"mappings":"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","file":"components/account/signup.js","sourcesContent":["import React from 'react';\n// import ReactMixin from 'react-mixin';\n// import Auth from '../services/AuthService'\nimport { Link } from 'react-router'\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField';\n\n// import { registerAccountClient } from '../../../data-handler-http/register-account-client'\nimport field from '../../modules/check-field'\nimport { fieldsOptions } from '../../config'\n// Check password strength\nimport zxcvbn from 'zxcvbn';\n\nimport crypto from 'crypto'\n\nimport {\n  registerAccount,\n} from '../../websock-message/server-actions'\n\nexport default class LoginSignUp extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      // Input fields\n      firstName: { error: '', name: 'First name' },\n      surename: { error: '', name: 'Surename' },\n\n      // userError: { error: '', name: 'First name' },\n      email: { error: '', name: 'Email' },\n      password: { error: '', name: 'Password' },\n      reEnterPassword: { error: '', name: 'Re-enter Password' },\n\n      passwordStrength: '',\n    };\n\n    this.style = {\n      input1: {\n        hintStyle: {\n          color: '#3F51B5',\n        },\n        floatingLabelFocus: {\n          color: '#3F51B5',\n        },\n        underline: {\n          borderColor: 'red',\n        },\n        password: {\n          invalid: {\n            color: 'grey',\n          },\n          bad: {\n            color: 'red',\n          },\n          weak: {\n            color: 'orange',\n          },\n          good: {\n            color: 'blue',\n          },\n          strong: {\n            color: 'green',\n          }\n        }\n      },\n      button1: {\n        color: 'white',\n        backgroundColor: '#3F51B5',\n        width: 180,\n      },\n      button2: {\n        color: 'white',\n        backgroundColor: '#4CAF50',\n        width: 180,\n      },\n    };\n\n    // Used to store references.\n    this._input = {};\n  }\n\n  static contextTypes = {\n    websocket: React.PropTypes.object,\n  };\n\n  async registerUser(e) {\n    e.preventDefault();\n    const input = this._input;\n    // const username = input.email.getValue(),\n    //       username = input.username.getValue(),\n    //       password = input.password.getValue();\n    const firstName = input.firstName.getValue() || '',\n          surename = input.surename.getValue() || '',\n          email = input.email.getValue() || '',\n          password = input.password.getValue() || '',\n          reEnterPassword = input.reEnterPassword.getValue() || '';\n\n    const fields = {\n      firstName,\n      surename,\n      email,\n      password,\n      reEnterPassword,\n    }\n\n    let result = '',\n        foundEmpty = false,\n        field;\n\n    // Check all fields are not empty\n    for (field in fields) {\n      if ( fields[field] === '') {\n        this.setState({ [field] : { ...this.state[field], error: 'Please fill field' } })\n        foundEmpty = true\n      }\n    }\n\n    if (foundEmpty) {\n      return 'Found some empty value'\n    }\n\n    // Check Password and reEnterPassword are equal\n    if ( fields['password'] !== fields['reEnterPassword']) {\n      return this.setState({ ['reEnterPassword'] : { ...this.state[reEnterPassword], error: 'Password is not equal to Re-enter Password' } })\n    }\n\n    try {\n      // debugger\n      result = await this.context.websocket.send(\n        registerAccount({\n          firstName,\n          surename,\n          email,\n          password,\n          reEnterPassword,\n        })\n      )\n      // result = JSON.parse( await registerAccountClient({\n      //   firstName,\n      //   surename,\n      //   email,\n      //   password,\n      //   reEnterPassword,\n      // }))\n\n      if (result && 'errors' in result) {\n        // Show failed field\n        for (field in fields) {\n          if (result.errors[0].message.includes(field)) {\n            this.setState({ [field] : { ...this.state[field], error: 'Check field' } })\n          }\n        }\n      } else {\n        //add cookie\n        //redirect to main url\n        document.cookie = result.data.registerAccount.token\n        document.location = '/'\n\n        console.log('>>>' + token.data.loginAccount.token)\n      }\n    }\n    catch(error) {\n      console.error(error);\n    }\n    // Account already taken ERROR\n    // {\"errors\":[\"Username already taken.\"],\"status\":200}\n  }\n\n  ifNotEmptyCleanAskInfo(e) {\n    let input = e.target.id\n    if (this._input[input].getValue().length > 0 && this.state[input].error.length > 0) {\n      this.setState({ [input] : { ...this.state[input], error: '' } });\n    }\n  }\n\n  ifEmptyAskInfo(e) {\n    let input = e.target.id\n    // console.log(e.target.id)\n    // console.log(JSON.stringify(this.state))\n    //\n    if (this._input[input].getValue().length === 0) {\n      this.setState({ [input] : { ...this.state[input], error: `${this.state[input].name} is empty` } });\n    }\n  }\n\n  passwordStrengthCheck(e) {\n    this.setState({ passwordStrength : zxcvbn(this._input.password.getValue() || '').score });\n  }\n\n  checkReEnterPassword(e) {\n    let input = e.target.id\n    if (this._input[input].getValue().length === 0) {\n      return this.setState({ [input] : { ...this.state[input], error: `${this.state[input].name} is empty` } });\n    }\n    if ( this._input[input].getValue() !== this._input.password.getValue() ) {\n      return this.setState({ [input] : { ...this.state[input], error: 'Password is not equal to Re-enter Password' } });\n    }\n  }\n\n  onChangeHandle(e) {\n    if (e.target.id == 'password') {\n      this.passwordStrengthCheck(e)\n    }\n    this.ifNotEmptyCleanAskInfo(e)\n  }\n\n  textField(field, options) {\n    let onBlur = field !== 'reEnterPassword'? this.ifEmptyAskInfo.bind(this) : this.checkReEnterPassword.bind(this),\n        type  = options && 'type' in options? options.type : '';\n\n    let [errorText, underlineColor] = (() => {\n      let underlineStyle = this.style.input1.password,\n          ps = 'Password security ';\n\n      switch (this.state.passwordStrength) {\n        case 0:\n          return [ 'minimum 4 characters', underlineStyle.invalid ]\n        case 1:\n          return [ ps + 'poor', underlineStyle.bad ]\n        case 2:\n          return [ ps + 'weak', underlineStyle.weak ]\n        case 3:\n          return [ ps + 'good', underlineStyle.good ]\n        case 4:\n          return [ ps + 'strong', underlineStyle.strong ]\n      }\n      return []\n    })()\n\n    return (\n      <div>\n        <TextField\n          id={field}\n          type={type}\n          hintText={this.state[field].name}\n          floatingLabelText={this.state[field].name}\n          floatingLabelFocusStyle={this.style.input1.floatingLabelFocus}\n          errorText={field == 'password'? this.state[field].error || errorText : this.state[field].error}\n          errorStyle={field == 'password' && this.state[field].error.length  == 0 ? underlineColor : undefined}\n          ref={(c) => this._input[field] = c}\n          onFocus={ field == 'password'? this.passwordStrengthCheck.bind(this) : undefined }\n          onChange={ this.onChangeHandle.bind(this) }\n          onBlur={ onBlur }\n        />\n        <br />\n      </div>\n    )\n  }\n\n  render() {\n    const state = this.state;\n    const spaceInterElements = 25;\n    const style = this.style;\n    const input = this._input;\n\n    return (\n      <Card\n        style={{\n          padding: 30,\n        }}\n      >\n        <CardHeader\n          title=\"Register a new account:\"\n          // title=\"Login to Your Account\"\n          titleStyle={{\n            fontSize: 24\n          }}\n        />\n        <CardText\n          style={{\n            paddingTop: 0,\n          }}\n        >\n          <form\n            role=\"form\"\n            style={{\n              marginLeft: 30,\n            }}\n            // action=\"http://mirtest.dcs.gla.ac.uk/api/auth/local/register\"\n            action=\"https://marakei.dcs.gla.ac.uk//api/auth/local/register\"\n            method=\"POST\"\n          >\n            {this.textField( 'firstName' )}\n            {this.textField( 'surename' )}\n            <br />\n            <br />\n            {this.textField( 'email' )}\n            {this.textField( 'password', {type: 'password'} )}\n            {this.textField( 'reEnterPassword', {type: 'password'} )}\n\n            <br />\n            <br />\n            <br />\n            <FlatButton\n              id=\"submitRegisterAccount\"\n              style={style.button1}\n              type=\"submit\"\n              onClick={this.registerUser.bind(this)}\n            >\n              Submit\n            </FlatButton>\n\n          </form>\n        </CardText>\n      </Card>\n    );\n  }\n}\n"],"sourceRoot":"/source/"}