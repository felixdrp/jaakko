{"version":3,"sources":["components/account/signin.js"],"names":[],"mappings":"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","file":"components/account/signin.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\n\nimport { Link } from 'react-router'\n// import ReactMixin from 'react-mixin';\n// import Auth from '../services/AuthService'\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField';\nimport ButtonLoginWithTwitter from './buttonLoginWithTwitter';\nimport ButtonLoginWithFacebook from './buttonLoginWithFacebook';\nimport ButtonLoginWithLinkedin from './buttonLoginWithLinkedin';\n\nimport {\n  loginAccount,\n} from '../../websocket-message/server-actions'\n\nclass AccountSignIn extends React.Component {\n  static propTypes = {\n    loginStatus: React.PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: React.PropTypes.object.isRequired,\n    websocket: React.PropTypes.object,\n  };\n\n  constructor() {\n    super()\n    this.state = {\n      email: { error: '', name: 'Email' },\n      password: { error: '', name: 'Password' },\n      // userError: '',\n      // emailError: '',\n      // passwordError: '',\n    };\n\n    // Used to store references.\n    this._input = {};\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Check if it was an error.\n    // Then pass the error from props to state.\n    if (nextProps.loginStatus) {\n      for (let field in nextProps.loginStatus) {\n        this.setState({\n          [field]: {\n            ...this.state[field],\n            error: nextProps.loginStatus[field]\n          }\n        })\n      }\n    }\n  }\n\n  async login(e) {\n    e.preventDefault();\n    const input = this._input;\n    const email = input.email.getValue();\n    const password = input.password.getValue();\n    // debugger\n    this.context.websocket.send(\n      loginAccount({\n        email,\n        password,\n      })\n    )\n  }\n\n  render() {\n    const { textColor } = this.context.muiTheme.palette;\n    const spaceInterElements = 25;\n    const style = {\n      input1: {\n        hintStyle: {\n          color: '#3F51B5',\n        },\n        floatingLabelFocus: {\n          color: '#3F51B5',\n        },\n        underline: {\n          borderColor: 'red',\n        },\n      },\n      button1: {\n        color: 'white',\n        backgroundColor: '#3F51B5',\n        width: 180,\n      },\n      button2: {\n        color: 'white',\n        backgroundColor: '#4CAF50',\n        width: 180,\n      },\n    };\n    const buttonLoginBranded = {\n      width: 180,\n    }\n    const input = this._input;\n\n    return (\n      <Card\n        style={{\n          padding: 30,\n        }}\n      >\n        <CardHeader\n          title=\"Login:\"\n          // title=\"Login to Your Account\"\n          titleStyle={{\n            fontSize: 24,\n            color: textColor,\n          }}\n        />\n        <CardText\n          style={{\n            paddingTop: 0,\n          }}\n        >\n          <form\n            role=\"form\"\n            style={{\n              marginLeft: 30,\n            }}\n            // action=\"https://localhost\"\n            method=\"POST\"\n          >\n            <TextField\n              {...{spellCheck:\"false\"}}\n              id=\"email\"\n              hintText=\"Email\"\n              floatingLabelText=\"Email\"\n              floatingLabelFocusStyle={style.input1.floatingLabelFocus}\n              errorText={this.state.email.error}\n              ref={(c) => input.email = c}\n              onBlur={ () => this.setState({ email: { error: !input.email.getValue()? 'Email empty': ''} }) }\n            />\n            <br />\n            <TextField\n              id=\"password\"\n              hintText=\"Password\"\n              floatingLabelText=\"Password\"\n              type=\"password\"\n              errorText={this.state.password.error}\n              ref={(c) => input.password = c}\n              onBlur={ () => this.setState({ password: { error: !input.password.getValue()? 'Password empty': ''} }) }\n            />\n            <br />\n            <br />\n            <FlatButton\n              id=\"submitLoginAccount\"\n              style={style.button1}\n              type=\"submit\"\n              onClick={this.login.bind(this)}\n            >\n              Submit\n            </FlatButton>\n            <br />\n            <br />\n            <FlatButton\n              style={style.button1}\n              onClick={this.login.bind(this)}\n            >\n              Forgot your password?\n            </FlatButton>\n            <br />\n            <br />\n            <Link\n              to=\"/account/signup\"\n              tabIndex=\"0\"\n            >\n              <FlatButton\n                style={style.button2}\n                rippleColor='#C8E6C9'\n              >\n                Create an account\n              </FlatButton>\n            </Link>\n          </form>\n        </CardText>\n      </Card>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    loginStatus: state.account.loginStatus\n  }\n}\n\nexport default connect(mapStateToProps)(AccountSignIn)\n"],"sourceRoot":"/source/"}