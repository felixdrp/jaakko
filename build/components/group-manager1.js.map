{"version":3,"sources":["components/group-manager1.js"],"names":["GroupManager","selectAccount","accountId","maintainPrevSelection","prevSelected","state","selectedAccounts","selected","ctrlKey","includes","splice","indexOf","concat","setState","unassignAccount","props","wsSession","send","unassignSelectedAccounts","assignSelectedAccountsToGroup","event","groupId","nativeEvent","defaultPrevented","addGroup","name","removeGroup","automateGroupCreation","numberOfGroups","accounts","groups","_input","console","log","context","style","gray","color","paddingBottom","marginRight","minWidth","margin","marginTop","height","marginBottom","paddingLeft","paddingRight","position","top","propTypes","object","unassignedAccounts","contextTypes","muiTheme","isRequired"],"mappings":"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","file":"components/group-manager1.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\n\n// groups\nimport {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n// import FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Avatar from 'material-ui/Avatar';\n\nimport Group from 'material-ui/svg-icons/social/group';\nimport GroupAdd from 'material-ui/svg-icons/social/group-add';\nimport PersonOutline from 'material-ui/svg-icons/social/person-outline';\nimport DeveloperBoard from 'material-ui/svg-icons/hardware/developer-board';\n\n// Icons\n\nimport Memory from 'material-ui/svg-icons/hardware/memory';\nimport ModeEdit from 'material-ui/svg-icons/editor/mode-edit';\nimport MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport NavigationClose from 'material-ui/svg-icons/navigation/close';\n\nimport { GroupContainer, UnassignedContainer, GroupAutomatic } from './';\n\nimport {\n  wsGroupAdd,\n  wsGroupRemove,\n  wsAssignSelectedAccountsToGroup,\n  wsUnassignSelectedAccounts,\n  wsUnassignAccount,\n  wsAutomateGroupsCreation,\n} from '../../../websocket-message/server-actions'\n\nclass GroupManager extends Component {\n  static propTypes = {\n    groups: PropTypes.object,\n    unassignedAccounts: PropTypes.object,\n  };\n\n  static contextTypes = {\n    muiTheme: PropTypes.object.isRequired,\n    // wsSession: PropTypes.object,\n    // websocket: PropTypes.object,\n  };\n\n  constructor() {\n    super()\n    this.state = {\n      accounts: { },\n      groups: { },\n      selectedAccounts: [],\n    };\n\n    // Used to store references.\n    this._input = {};\n  }\n\n  // Add or remove a selection\n  // if maintainPrevSelection == true it will maintain the previus selection\n  selectAccount = ( accountId, maintainPrevSelection ) => {\n    let prevSelected = this.state.selectedAccounts\n    let selected = []\n    if (maintainPrevSelection.ctrlKey) {\n      // Alredy in the list? then remove\n      if (prevSelected.includes(accountId)) {\n        selected = prevSelected\n        selected.splice( selected.indexOf(accountId), 1 )\n      } else {\n        selected = this.state.selectedAccounts.concat(accountId)\n      }\n    } else {\n      // If not selected select\n      if (!prevSelected.includes(accountId)) {\n        selected = [ accountId ]\n      }\n    }\n\n    this.setState({ selectedAccounts: selected })\n    // debugger\n    // console.log('select an account!!! > ' + accountId)\n\n  }\n\n  // Free an account from group\n  unassignAccount = (accountId) => {\n    // console.log('unassign an account!!! > ' + accountId)\n    // console.log(this.props)\n    this.props.wsSession.send(\n      wsUnassignAccount( accountId )\n    )\n  }\n\n  // Free the selected accounts from groups\n  unassignSelectedAccounts = () => {\n    // console.log('unassign!!!')\n    this.props.wsSession.send(\n      wsUnassignSelectedAccounts( this.state.selectedAccounts )\n    )\n    this.setState({ selectedAccounts: [] })\n  }\n\n  // Free the selected accounts from groups\n  assignSelectedAccountsToGroup = (event, groupId) => {\n    if (event.nativeEvent.defaultPrevented) {\n      return\n    }\n\n    let selected = this.state.selectedAccounts\n\n    // send selection and groupid to server\n    this.props.wsSession.send(\n      wsAssignSelectedAccountsToGroup( groupId, selected )\n    )\n\n    this.setState({ selectedAccounts: [] })\n    // console.log('assign to group !!! > ' + groupId)\n  }\n\n  addGroup = (name) => {\n    // send WsAddGroup\n    this.props.wsSession.send(\n      wsGroupAdd()\n    )\n    // console.log('addgroup!!!')\n    // console.log(this.props)\n\n  }\n\n  removeGroup = (groupId) => {\n    // send WsAddGroup\n    this.props.wsSession.send(\n      wsGroupRemove(groupId)\n    )\n  }\n\n  automateGroupCreation = (numberOfGroups) => {\n    // send WsAddGroup\n    this.props.wsSession.send(\n      wsAutomateGroupsCreation(numberOfGroups)\n    )\n  }\n\n  render() {\n    console.log(this.context)\n    const style = {\n      gray: {\n        color: '#565555'\n      }\n    }\n    return (\n      <Card\n        style={{\n          paddingBottom: 20,\n        }}\n      >\n        <CardHeader\n          title={ <span><Group /> Groups manager </span> }\n          subtitle=\"Groups manager\"\n          // avatar=\"images/jsa-128.jpg\"\n        />\n        <CardTitle\n          title={\n            <span>\n              <Group style={style.gray} />\n              <DeveloperBoard style={{...style.gray, marginRight: 10}} />\n              Groups automated\n            </span>\n          }\n          subtitle=\"Groups creation with AI help\"\n        />\n        <div>\n          <GroupAutomatic\n            accounts={this.props.accounts}\n            automateGroupCreation={this.automateGroupCreation}\n          />\n        </div>\n\n        <CardTitle\n          title={\n            <span>\n              <Group style={style.gray} />\n              <ModeEdit style={{...style.gray, marginRight: 10}} />\n              Groups customization\n            </span>\n          }\n          subtitle=\"Groups manual fine customization\"\n        />\n\n        <UnassignedContainer\n          accounts={this.props.accounts}\n          selectedAccounts={this.state.selectedAccounts}\n          unassignSelectedAccounts={ this.unassignSelectedAccounts }\n          selectionHandler={ this.selectAccount }\n        />\n\n        <div\n          // Assign Groups\n          // Groups Chips\n          style={{\n            minWidth: '95%',\n            margin: '2.5%',\n            marginTop: 65,\n          }}\n        >\n          <RaisedButton\n            // Add group button\n            onClick={ this.addGroup }\n            backgroundColor={'#ddffb1'}\n            style={{\n              height: 36,\n              // minWidth: '95%',\n              marginBottom: 20,\n            }}\n          >\n            <span\n              style={{\n                paddingLeft: 10,\n                paddingRight: 10,\n              }}\n            >\n              <GroupAdd style={{\n                position: 'relative',\n                top: 6,\n                marginRight: 7,\n              }}/>\n              Add group\n            </span>\n          </RaisedButton>\n\n          <GroupContainer\n            accounts={this.props.accounts}\n            groups={this.props.groups}\n            selectedAccounts={this.state.selectedAccounts}\n            removeGroup={this.removeGroup}\n            unassignAccount={this.unassignAccount}\n            assignSelectedAccountsToGroup={this.assignSelectedAccountsToGroup}\n            selectionHandler={this.selectAccount}\n          />\n        </div>\n      </Card>\n    )\n  }\n}\n\nexport default GroupManager\n"],"sourceRoot":"/source/"}