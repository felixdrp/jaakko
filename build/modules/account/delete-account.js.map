{"version":3,"sources":["modules/account/delete-account.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;wEAIO,iBAA6B,MAA7B;AAAA,QACD,EADC,EAED,GAFC,EAGD,MAHC,EAID,MAJC;AAAA;AAAA;AAAA;AAAA;AACD,cADC,GACI,IADJ,EAED,GAFC,GAEK,IAFL,EAGD,MAHC,GAGQ,IAHR,EAID,MAJC,GAIQ,IAJR;AAAA;AAAA;AAAA,mBAOQ,qBAAY,OAAZ,CAAoB,oBAAY,GAAhC,CAPR;;AAAA;AAOH,cAPG;AAAA;AAAA,mBASS,GAAG,UAAH,CAAc,MAAd,EAAsB,OAAtB,CAA8B,EAAE,OAAO,OAAO,KAAhB,EAA9B,CATT;;AAAA;AASH,eATG;;AAAA,kBAWC,QAAQ,IAXT;AAAA;AAAA;AAAA;;AAYD,qBAAS,wBACP,mBADO,EAEP,mCAFO,EAGP,wBAHO,EAIP,sCAJO,CAAT;AAZC,6CAkBM,MAlBN;;AAAA;AAAA;AAAA,mBAqBS,GAAG,UAAH,CAAc,UAAd,EAA0B,SAA1B,CAAoC,EAAC,MAAM,IAAI,GAAX,EAApC,CArBT;;AAAA;AAqBH,eArBG;AAAA;AAAA,mBAsBY,GAAG,UAAH,CAAc,MAAd,EAAsB,SAAtB,CAAgC,EAAC,OAAO,OAAO,KAAf,EAAhC,CAtBZ;;AAAA;AAsBH,kBAtBG;;;AAwBH,eAAG,KAAH;;AAxBG,kBAyBC,IAAI,MAAJ,CAAW,EAAX,GAAgB,OAAO,MAAP,CAAc,EAzB/B;AAAA;AAAA;AAAA;;AAAA,6CA0BM,IA1BN;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AA8BH,gBAAI,EAAJ,EAAQ;AACN,iBAAG,KAAH;AACD;AACD;AACA,gBAAI,OAAO,IAAP,IAAe,YAAM,SAAN,CAAgB,sBAAhB,CAAnB,EAA6D;AAC3D,uBAAS,wBACP,4BADO,EAEP,sDAFO,EAGP,4BAHO,EAIP,sCAJO,CAAT;AAMD;;AAzCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAe,a;;;;;AAJtB;;AACA;;AACA","file":"modules/account/delete-account.js","sourcesContent":["import { reportError } from '../log/error'\nimport { MongoClient } from 'mongodb'\nimport { mongodbConf } from '../../config'\n\nexport async function deleteAccount(fields) {\n  let db = null,\n      res = null,\n      UserID = null,\n      result = null;\n\n  try {\n    db = await MongoClient.connect(mongodbConf.url)\n    // Check the user/email is not taken\n    res = await db.collection('User').findOne({ email: fields.email })\n\n    if (res === null) {\n      result = reportError(\n        'User not created.',\n        'It was an error registering user.',\n        'ACCOUNT_REGISTER_ERROR',\n        '719b4603-4796-4f2d-b452-20aaafdcfb46',\n      )\n      return result\n    }\n\n    res = await db.collection('Passport').deleteOne({user: res._id})\n    result = await db.collection('User').deleteOne({email: fields.email})\n\n    db.close()\n    if (res.result.ok & result.result.ok) {\n      return true\n    }\n\n  } catch (error) {\n    if (db) {\n      db.close()\n    }\n    // console.log('>>xxx>>' + Object.keys(error))\n    if (db === null || error.constains('connect ECONNREFUSED') ) {\n      result = reportError(\n        'Database connection error.',\n        'It was an error in the connection with the database.',\n        'DATA_BASE_CONNECTION_ERROR',\n        'a7c5bbb7-ee5c-45fe-af13-29e3c2cda683',\n      )\n    }\n  }\n}\n"],"sourceRoot":"/source/"}