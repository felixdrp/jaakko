{"version":3,"sources":["modules/account/delete-account.js"],"names":["fields","db","res","UserID","result","connect","url","collection","findOne","email","deleteOne","user","_id","close","ok","constains","deleteAccount"],"mappings":";;;;;;;;;;;;;;;;wEAIO,iBAA6BA,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,cADC,GACI,IADJ,EAEDC,GAFC,GAEK,IAFL,EAGDC,MAHC,GAGQ,IAHR,EAIDC,MAJC,GAIQ,IAJR;AAAA;AAAA;AAAA,mBAOQ,qBAAYC,OAAZ,CAAoB,oBAAYC,GAAhC,CAPR;;AAAA;AAOHL,cAPG;AAAA;AAAA,mBASSA,GAAGM,UAAH,CAAc,MAAd,EAAsBC,OAAtB,CAA8B,EAAEC,OAAOT,OAAOS,KAAhB,EAA9B,CATT;;AAAA;AASHP,eATG;;AAAA,kBAWCA,QAAQ,IAXT;AAAA;AAAA;AAAA;;AAYDE,qBAAS,wBACP,mBADO,EAEP,mCAFO,EAGP,wBAHO,EAIP,sCAJO,CAAT;AAZC,6CAkBMA,MAlBN;;AAAA;AAAA;AAAA,mBAqBSH,GAAGM,UAAH,CAAc,UAAd,EAA0BG,SAA1B,CAAoC,EAACC,MAAMT,IAAIU,GAAX,EAApC,CArBT;;AAAA;AAqBHV,eArBG;AAAA;AAAA,mBAsBYD,GAAGM,UAAH,CAAc,MAAd,EAAsBG,SAAtB,CAAgC,EAACD,OAAOT,OAAOS,KAAf,EAAhC,CAtBZ;;AAAA;AAsBHL,kBAtBG;;;AAwBHH,eAAGY,KAAH;;AAxBG,kBAyBCX,IAAIE,MAAJ,CAAWU,EAAX,GAAgBV,OAAOA,MAAP,CAAcU,EAzB/B;AAAA;AAAA;AAAA;;AAAA,6CA0BM,IA1BN;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AA8BH,gBAAIb,EAAJ,EAAQ;AACNA,iBAAGY,KAAH;AACD;AACD;AACA,gBAAIZ,OAAO,IAAP,IAAe,YAAMc,SAAN,CAAgB,sBAAhB,CAAnB,EAA6D;AAC3DX,uBAAS,wBACP,4BADO,EAEP,sDAFO,EAGP,4BAHO,EAIP,sCAJO,CAAT;AAMD;;AAzCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeY,a;;;;;AAJtB;;AACA;;AACA","file":"modules/account/delete-account.js","sourcesContent":["import { reportError } from '../log/error'\nimport { MongoClient } from 'mongodb'\nimport { mongodbConf } from '../../config'\n\nexport async function deleteAccount(fields) {\n  let db = null,\n      res = null,\n      UserID = null,\n      result = null;\n\n  try {\n    db = await MongoClient.connect(mongodbConf.url)\n    // Check the user/email is not taken\n    res = await db.collection('User').findOne({ email: fields.email })\n\n    if (res === null) {\n      result = reportError(\n        'User not created.',\n        'It was an error registering user.',\n        'ACCOUNT_REGISTER_ERROR',\n        '719b4603-4796-4f2d-b452-20aaafdcfb46',\n      )\n      return result\n    }\n\n    res = await db.collection('Passport').deleteOne({user: res._id})\n    result = await db.collection('User').deleteOne({email: fields.email})\n\n    db.close()\n    if (res.result.ok & result.result.ok) {\n      return true\n    }\n\n  } catch (error) {\n    if (db) {\n      db.close()\n    }\n    // console.log('>>xxx>>' + Object.keys(error))\n    if (db === null || error.constains('connect ECONNREFUSED') ) {\n      result = reportError(\n        'Database connection error.',\n        'It was an error in the connection with the database.',\n        'DATA_BASE_CONNECTION_ERROR',\n        'a7c5bbb7-ee5c-45fe-af13-29e3c2cda683',\n      )\n    }\n  }\n}\n"],"sourceRoot":"/source/"}