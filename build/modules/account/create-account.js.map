{"version":3,"sources":["modules/account/create-account.js"],"names":[],"mappings":"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","file":"modules/account/create-account.js","sourcesContent":["import deepmerge from 'deepmerge'\nimport field from '../check-field'\nimport {reportError} from '../log/error'\nimport { MongoClient, ObjectID } from 'mongodb'\nimport { mongodbConf, fieldsOptions } from '../../config'\nimport { createToken } from '../token-generator'\nimport bcrypt from 'bcryptjs'\nimport crypto from 'crypto'\n\n\nexport async function createAccount(input, options) {\n  // input fields\n  if (!input || typeof input !== 'object' ) {\n    return reportError(\n      'Register input type not valid',\n      'Input fields is not an object type.',\n      'RINV',\n      '30db4b60-fe9e-4c97-87fd-3149c26fe560',\n    )\n  }\n  console.log(Object.keys(input))\n  console.log(JSON.stringify(input))\n\n  let error = {};\n\n  let fields = {\n    firstName: '',\n    surename: '',\n    email: '',\n    password: '',\n    reEnterPassword: '',\n    ...input,\n  }\n\n  let newfieldsOptions\n\n  if (options && typeof options === 'object' ) {\n    newfieldsOptions = deepmerge( fieldsOptions, options )\n  } else {\n    newfieldsOptions = {...fieldsOptions}\n  }\n\n  // Check fields\n  error = field.checkAll(fields, newfieldsOptions)\n\n  if (error !== null) {\n    return error\n  }\n\n  // Check password and reEnterPassword are equal\n  if (fields.password !== fields.reEnterPassword) {\n    return reportError(\n      'Register input fields password and re enter password are not equal.',\n      'Fields password and re enter password are not equal',\n      'RIFPREPNEQUAL',\n      '9bcde4cf-9d1f-4b68-8f6f-00e7a3ac965f',\n    )\n  }\n\n  let db = null,\n      colUser = null,\n      res  = null,\n      token = null,\n      newUserID = null;\n\n  try {\n    db = await MongoClient.connect(mongodbConf.url)\n    // Check the user/email is not taken\n    colUser = db.collection('User')\n    res = await colUser.findOne({ email: fields.email })\n\n    if (res !== null) {\n      db.close()\n      return reportError(\n        'Email already used.',\n        'The email is already used.',\n        'REGISTER_EMAIL_ALREADY_TAKEN_ERROR',\n        '4428b93b-3934-4137-aee1-5575c3e98360',\n      )\n    }\n    // Create an mondoDB ObjectID for the new user\n    newUserID = new ObjectID()\n    // Pass the token provided or create a new token\n    // debugger\n\n    token = fields.token || await createToken()\n\n    // Add user to collection db.User\n    res = await db.collection('User').insertOne({\n      _id: newUserID,\n      firstName: fields.firstName,\n      surename: fields.surename,\n      email: fields.email,\n      // uploadAsPrivate: true,\n      token,\n      // tokenupdate: new Date(),\n      // question: ''\n    })\n\n    // Add user to collection db.Passport\n    res = await db.collection('Passport').insertOne({\n      user: newUserID,\n      password: bcrypt.hashSync(fields.password),\n      hash:\n        fields.hash ||\n        crypto\n          .createHash('sha512')\n          .update(fields.email + fields.password)\n          .digest('base64'),\n      provider: 'local',\n      identifier: '',\n      // Hardcoding for oauth2\n      accessToken: '',\n      refreshToken: '',\n      answer: ''\n    })\n\n    // res = await colUser.findOne({ email: fields.email })\n    // console.log('Response >>>>>>> ' + res )\n\n  } catch (error) {\n    if (db) {\n      db.close()\n    }\n\n    if (db === null || error.constains('connect ECONNREFUSED') ) {\n      return reportError(\n        'Database connection error.',\n        'It was an error in the connection with the database.',\n        'DATA_BASE_CONNECTION_ERROR',\n        'a7c5bbb7-ee5c-45fe-af13-29e3c2cda683',\n      )\n    }\n    // throw error\n  }\n\n  // // console.log('>>>>>>> ' + JSON.stringify(fieldsOptions,null,2) )\n  // // console.log('>>>>>>> ' + JSON.stringify(options,null,2) )\n  // console.log('Fields >>>>>>> ' + JSON.stringify(fields) )\n  // console.log('OPTIONS >>>>>>> ' + JSON.stringify(fieldsOptions) )\n  db.close();\n  return token\n}\n"],"sourceRoot":"/source/"}