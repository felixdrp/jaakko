{"version":3,"sources":["modules/similarity.js"],"names":["processSimilarities","data","sort","a","b","timeSubmitted","simStore","e","entry","s","similarTo","similar","registerSimilarity","id","filterSimilars","keyMappings","entryid","ids","o","option","count","push","slice","repeat","k","j","anyCommonId","first","second","splice","joined","indexOf","filteredData","m","selectedEntry","i","getEntry","similarityHide","ids1","ids2","similaritiesStore","entry1","entry2","found"],"mappings":"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","file":"modules/similarity.js","sourcesContent":["export default function processSimilarities(data) {\n\n\n    data.sort(function(a, b){\n        return a.timeSubmitted-b.timeSubmitted\n    });\n\n    var simStore = {};\n\n    for ( var e in data ){\n      var entry = data[e]\n      for ( var s in entry.similarTo){\n        var similar = entry.similarTo[s];\n        simStore = registerSimilarity(simStore,entry.id,similar)\n      }\n    }\n\n    return filterSimilars(data, simStore);\n  }\n\nvar filterSimilars = (data, simStore) => {\n    var keyMappings = [];\n\n    for ( var entryid in simStore ){\n      var ids = [entryid]\n\n      for (var o in simStore[entryid] ){\n        var option = simStore[entryid][o]\n        if ( (option.count/2) > 1 ){  // add those that have been flagged as similar twice or more. Divided by two because a = b as b = a\n          ids.push(option.id)\n        } else {\n          keyMappings.push([option.id])\n        }\n      }\n\n\n      keyMappings.push(ids.slice());\n      ids = [];\n    }\n\n    var repeat = false;\n    while (true){\n      for ( var k in keyMappings){\n        for ( var j in keyMappings){\n\n          if ( k == j){\n            continue;\n          }\n          if( anyCommonId (keyMappings[k], keyMappings[j] ) ){\n\n            var first;\n            var second;\n            if (j > k){\n              second = keyMappings.splice(j,1)[0]\n              first  = keyMappings.splice(k,1)[0]\n            } else {\n              first  = keyMappings.splice(k,1)[0]\n              second = keyMappings.splice(j,1)[0]\n            }\n\n            var joined = [];\n\n            for ( var e in first ) {\n                if ( joined.indexOf(first[e]) < 0){\n                  joined.push(first[e]);\n                }\n            }\n\n            for ( var e in second ) {\n                if ( joined.indexOf(second[e]) < 0){\n                  joined.push(second[e]);\n                }\n            }\n\n            keyMappings.push(joined)\n            repeat = true;\n          }\n        }\n      }\n      if ( repeat ){\n        repeat = false;\n\n      } else {\n        break;\n      }\n    }\n\n    var filteredData = [];\n\n    for ( var m in keyMappings){\n      var selectedEntry;\n      for ( var i in keyMappings[m]){\n\n        if( !selectedEntry ){\n          selectedEntry = getEntry(data,keyMappings[m][i]);\n        } else {\n          if (selectedEntry.timeSubmitted > getEntry(data,keyMappings[m][i]).timeSubmitted ){\n            selectedEntry.similarityHide = true;\n            filteredData.push(selectedEntry);\n            selectedEntry = getEntry(data,keyMappings[m][i]);\n          }else {\n\n            getEntry(data,keyMappings[m][i]).similarityHide = true;\n            filteredData.push(getEntry(data,keyMappings[m][i]));\n          }\n\n        }\n      }\n\n      filteredData.push(selectedEntry);\n      selectedEntry = null;\n    }\n\n\n    //console.log(JSON.stringify(keyMappings));\n    return filteredData;\n  }\n\nvar anyCommonId = (ids1, ids2 ) =>{\n    for ( var i in ids1 ){\n      for ( var j in ids2 ){\n        if( ids1[i] == ids2[j] ){\n          return true;\n        }\n\n      }\n    }\n    return false;\n  }\n\n  /**\n  * Gets the first entry record that matches entryid. Since multiple definitions for the same entry will be present as it will come replicated from the different users.\n  */\nvar  getEntry = (data,entryid) => {\n    for( var e in data){\n      var entry  = data[e]\n\n      if ( entry.id == entryid){\n        return entry;\n      }\n    }\n\n    return null; // this should never happen!\n  }\n\nvar registerSimilarity = (similaritiesStore, entry1, entry2) => {\n\n    var first = entry1 < entry2 ? entry1 : entry2\n    var second = entry1 < entry2 ? entry2 : entry1\n\n    if ( !similaritiesStore[first] ){\n      similaritiesStore[first] = [{id : second, count : 1}]\n    } else {\n      var found = false;\n      for ( var o in similaritiesStore[first] ){\n          var option = similaritiesStore[first][o]\n          if( option.id == second ){\n              option.count++;\n              found = true;\n              break;\n          }\n      }\n      if ( !found ){\n        similaritiesStore[first].push({id : second, count : 1});\n      }\n\n    }\n\n    return similaritiesStore;\n  }\n"],"sourceRoot":"/source/"}