{"version":3,"sources":["server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["// Usando servidor seguro:\n// https://localhost:8000/\n// Open a websocket on the browser:\n// var exweb = new WebSocket(\"wss://localhost:8008\")\n// Imprimir mensajes del servidor:\n// exweb.onmessage = (a) => console.log(a)\nvar fs = require('fs');\nvar privateKey  = fs.readFileSync(__dirname + '/../sslcert/key.pem', 'utf8');\nvar certificate = fs.readFileSync(__dirname + '/../sslcert/cert.pem', 'utf8');\n\nvar https = require('https');\nvar credentials = {key: privateKey, cert: certificate};\n\nvar WebSocketServer = require('ws').Server;\nimport WebSocketSimple from './websocket-message/websocket-simple'\n\nvar express = require('express')\nvar compression = require('compression')\nvar app = express()\n// compress all requests\napp.use(compression())\n\n// function that process the messages of type mutate.\nimport mutate from './websocket-message/server-mutate'\nimport query from './websocket-message/server-query'\n\n// Redux\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport {\n  accounts,\n  groups,\n} from './reducers/server';\n\nimport {\n  // Remove the WS from a store state\n  storeStateWithoutWebSocket,\n} from './actions/actions'\n\nimport {\n  swUpdateControlRoom,\n} from './websocket-message/server-actions'\n\nimport { port } from './config'\n\nvar webTemplate = require('../web-template');\n\nvar portWeb = parseInt(process.env.PORT_WEB) || port;\nvar portSocket = parseInt(process.env.PORT_SOCKET) || '3000';\n\n// Create the web server linked with the express app\nvar webServer = https.createServer(credentials, app);\n\n// Web server for websocket Admin connections\nvar appWSAdmin = https.createServer(\n  {\n    // providing server with  SSL key/cert\n    key: privateKey,\n    cert: certificate\n  },\n  ( req, res ) => {\n    res.writeHead(200);\n    res.end(\"All glory to WebSockets!\\n\");\n  }\n).listen( portWeb + 1 );\n\n// Link the web server port to the socket server port\nvar wss = new WebSocketServer({ server: webServer });\nvar wssAdmin = new WebSocketServer({ server: appWSAdmin });\n// debugger\napp.use(express.static('public'));\n\napp.use('/', function (req, res) {\n  res.send(webTemplate());\n});\n\nwebServer.listen( portWeb, () => console.log('server running at https://localhost:' + portWeb) );\n\n\n// middleware to send store updates to the admins\nconst updateControlRooms = store => next => action => {\n  console.log('dispatching', action)\n  let result = next(action)\n  let payload = storeStateWithoutWebSocket( store.getState() )\n  // console.log('UPDATE ControlRoom state' + payload )\n  console.log('MEMORY USAGE state' + JSON.stringify(process.memoryUsage()) )\n  // console.log('wssAdmin.clients.length> ' + wssAdmin.clients.length )\n\n  // transfer asynchronously\n  new Promise((resolve, reject) => {\n    wssAdmin.clients.forEach( (wsControlRoom) => {\n      // console.log('UPDATE ControlRoom state (promise) >' + payload)\n      // console.log('Stado del socket>> >' + wsControlRoom.readyState + ' < ID < ' + wsControlRoom.accountCode)\n      if (wsControlRoom.readyState != 1) {\n        return\n      }\n      try {\n        wsControlRoom.send(\n          JSON.stringify( swUpdateControlRoom( payload ) )\n        );\n        // console.log('Stado del socket>> >' + wsControlRoom.readyState + ' < ID < ' + wsControlRoom.accountCode)\n\n        resolve('transfer OK')\n      } catch(err) {\n        reject(err)\n      }\n    });\n  })\n\n  return result\n}\n\n// Note: this API requires redux@>=3.1.0\n// Create Redux store\nconst store = createStore(\n  combineReducers({\n    accounts,\n    groups,\n  }),\n  applyMiddleware(\n    thunk,\n    updateControlRooms\n  )\n);\n\nwss.broadcast = function broadcast(data) {\n  // debugger\n  wss.clients.forEach(function each(client) {\n    if (client.readyState != 1) {\n      console.log('socket on state: ' + client.readyState + ' prevented send')\n      return\n    }\n    console.log('wss.clients length: ' + wss.clients.length)\n    console.log('message sent to: ' + client.nombre)\n    client.send(data);\n  });\n};\n//\n// setInterval( () => wss.broadcast('mensaje importante de '), 2000 )\n// setTimeout( () => {\n// setInterval( () => {\n// console.log('broadcast')\n// wss.broadcast(\n//   JSON.stringify(\n//     { type: 'ACTION', action: 'ACCOUNT_REGISTER_ERROR', payload: 'cagada' }\n//   )\n// )\n// }, 3000)\n\nfunction* nameMe() {\n  yield* [\n    'maria',\n    'jose',\n    'jesus',\n    'burro',\n    'angel'\n  ];\n}\nvar nameMeIterator = nameMe()\n\nvar websocketManager = function (ws, parent) {\n    let name = nameMeIterator.next().value\n    console.log('started websocket client' + name);\n    // When user login will be the email\n    ws.name = name\n    ws.accountCode = Date.now()\n\n    // Add the Websocket to the list\n    // queryWebSocketList.push(ws);\n\n    // console.log('wsocket list length: ' + queryWebSocketList.length);\n\n    ws.send('Welcome!');\n\n    ws.on('close', () => {\n     console.log('stopping websocket client ' + ws.accountCode);\n     console.log('yo soy tu padre!!!!>>>  ' + parent.clients);\n\n       // Remove from\n\t// console.log(queryWebSocketList.indexOf(ws));\n\t// // Remove Websocket from queryWebSocketList\n\t// queryWebSocketList.splice(queryWebSocketList.indexOf(ws), 1);\n\t// console.log(ws.readyState);\n\t// console.log('wsocket list length: ' + queryWebSocketList.length);\n    } );\n\n    let ii = 0\n    ws.onmessage = async function(event) {\n    \t// Check the query.\n    \t// Process action.\n      // debugger\n      let message\n      // Check it is a JSON response\n      if ( /^\\{.*\\}$/.test(event.data) ) {\n        message = JSON.parse(event.data)\n      } else {\n        console.log( 'No protocol>>String>>>' + event.data )\n        return\n      }\n      console.log( '>>>' + JSON.stringify(event.data) )\n      // console.log( '>>>' + Object.keys(event) )\n      if (typeof message == 'string') return\n\n  \t  switch ( message.type ) {\n        // Process message of type MUTATE\n        case 'MUTATE':\n          await mutate({\n            action: message.action || '',\n            payload: message.payload || '',\n            ws: new WebSocketSimple(ws),\n            store\n          })\n          break;\n        // Process message of type QUERY\n        case 'QUERY':\n          await query({\n            action: message.action || '',\n            payload: message.payload || '',\n            ws: new WebSocketSimple(ws),\n            store\n          })\n          console.log('Query to the server')\n          console.log(message.type + ' ' + message.payload.email)\n          break;\n        // Process message of type ACTIONS\n        default:\n          // dispatch 'ACTIONS'\n          store.dispatch(message.payload)\n      }\n      console.log( 'ws.readyState>>>' + ws.readyState + ' < ID < ' + ws.accountCode )\n\n    }\n}\n\n// wss.on('connection', (ws) => websocketManager(ws));\nwss.on('connection', (ws) => websocketManager(ws, wss) );\nwssAdmin.on('connection', (ws) => websocketManager(ws, wssAdmin));\n"],"sourceRoot":"/source/"}