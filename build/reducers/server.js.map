{"version":3,"sources":["reducers/server.js"],"names":[],"mappings":";;;;;;;;;;QAgBgB,Q,GAAA,Q;QAkCA,M,GAAA,M;;AAjDhB;;;;AAWA;;;;AAIO,SAAS,QAAT,GAAgD;AAAA,MAA9B,KAA8B,yDAAtB,EAAE,MAAM,EAAR,EAAsB;AAAA,MAAR,MAAQ;;AACrD,MAAI,UAAU,OAAO,OAAP,IAAkB,EAAhC;AACA,UAAQ,OAAO,IAAf;AACE;AACE;AACA,UAAI,MAAM,QAAQ,KAAd,CAAJ,EAA0B;AACxB,eAAO,KAAP;AACD;AACD;AACA,YAAM,IAAN,CAAW,IAAX,CAAgB,QAAQ,KAAxB;AACA,YAAM,QAAQ,KAAd,IAAuB,KAAK,KAAL,CAAW,yBAAgB,OAAhB,CAAX,CAAvB;AACA,aAAO,KAAP;AACF;AACE;AACA,UAAI,MAAM,QAAQ,KAAd,CAAJ,EAA0B;AACxB,cAAM,QAAQ,KAAd,IAAuB,KAAK,KAAL,CAAW,yBAAgB,OAAhB,CAAX,CAAvB;AACA,eAAO,KAAP;AACD;AACD,aAAO,KAAP;AACF;AACE;AACA,UAAI,MAAM,QAAQ,KAAd,CAAJ,EAA0B;AACxB;AACA,cAAM,IAAN,CAAW,MAAX,CAAmB,MAAM,IAAN,CAAW,OAAX,CAAmB,QAAQ,KAA3B,CAAnB,EAAsD,CAAtD;AACA;AACA,eAAO,MAAM,QAAQ,KAAd,CAAP;AACA,eAAO,KAAP;AACD;AACD,aAAO,KAAP;AACF;AACE,aAAO,KAAP;AA5BJ;AA8BD;;AAEM,SAAS,MAAT,GAA8C;AAAA,MAA9B,KAA8B,yDAAtB,EAAE,MAAM,EAAR,EAAsB;AAAA,MAAR,MAAQ;;AACnD;AACA,MAAI,UAAU,OAAO,OAAP,IAAkB,EAAhC;;AAEA,UAAQ,OAAO,IAAf;AACE;AACE;AACA,UAAI,MAAM,QAAQ,OAAd,CAAJ,EAA4B;AAC1B,eAAO,KAAP;AACD;AACD;AACA,YAAM,IAAN,CAAW,IAAX,CAAgB,QAAQ,OAAxB;AACA,YAAM,QAAQ,OAAd,IAAyB,QAAQ,IAAR,IAAgB,EAAzC;AACA,aAAO,KAAP;AACF;AACE;AACA,UAAI,MAAM,QAAQ,OAAd,CAAJ,EAA4B;AAC1B;AACA,cAAM,IAAN,CAAW,MAAX,CAAmB,MAAM,IAAN,CAAW,OAAX,CAAmB,QAAQ,OAA3B,CAAnB,EAAwD,CAAxD;AACA;AACA,eAAO,MAAM,QAAQ,OAAd,CAAP;AACA,eAAO,KAAP;AACD;AACD,aAAO,KAAP;AACF;AACE;AACA,cAAQ,GAAR,CAAY,OAAZ;AACA,cAAQ,GAAR,CAAY,MAAM,QAAQ,OAAd,EAAuB,OAAvB,CAA+B,QAAQ,OAAvC,CAAZ;AACA,UAAK,MAAM,QAAQ,OAAd,EAAuB,OAAvB,CAA+B,QAAQ,OAAvC,MAAoD,CAAC,CAA1D,EAA8D;AAC5D,eAAO,KAAP;AACD;AACD,YAAM,QAAQ,OAAd,EAAuB,IAAvB,CAA4B,QAAQ,OAApC;AACA,aAAO,KAAP;AACF;AACE;AACA,UAAI,MAAM,QAAQ,OAAd,EAAuB,OAAvB,CAA+B,QAAQ,OAAvC,CAAJ,EAAqD;AACnD;AACA,cAAM,QAAQ,OAAd,EAAuB,MAAvB,CAA+B,MAAM,QAAQ,OAAd,EAAuB,OAAvB,CAA+B,QAAQ,OAAvC,CAA/B,EAAgF,CAAhF;AACD;AACD,aAAO,KAAP;AACF;AACE,aAAO,KAAP;AArCJ;AAuCD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"reducers/server.js","sourcesContent":["\nimport {\n  ACCOUNTS_ADD,\n  ACCOUNTS_UPDATE,\n  ACCOUNTS_REMOVE,\n\n  GROUPS_ADD,\n  GROUPS_REMOVE,\n  GROUPS_ADD_ACCOUNT,\n  GROUPS_REMOVE_ACCOUNT,\n} from '../actions/actions'\n\n/*\n * reducers\n */\n\nexport function accounts(state = { list: [] }, action) {\n  let payload = action.payload || ''\n  switch (action.type) {\n    case ACCOUNTS_ADD:\n      // Check if account is already in list\n      if (state[payload.email]) {\n        return state\n      }\n      // Add to the list\n      state.list.push(payload.email)\n      state[payload.email] = JSON.parse(JSON.stringify( payload ))\n      return state\n    case ACCOUNTS_UPDATE:\n      // Check if account is already in list\n      if (state[payload.email]) {\n        state[payload.email] = JSON.parse(JSON.stringify( payload ))\n        return state\n      }\n      return state\n    case ACCOUNTS_REMOVE:\n      // Check if account is already in list\n      if (state[payload.email]) {\n        // Remove from list\n        state.list.splice( state.list.indexOf(payload.email), 1 )\n        // Remove object\n        delete state[payload.email]\n        return state\n      }\n      return state\n    default:\n      return state\n  }\n}\n\nexport function groups(state = { list: [] }, action) {\n  // let payload = !!action && action.payload || ''\n  let payload = action.payload || ''\n\n  switch (action.type) {\n    case GROUPS_ADD:\n      // Check if account is already in list\n      if (state[payload.groupId]) {\n        return state\n      }\n      // Add to the list\n      state.list.push(payload.groupId)\n      state[payload.groupId] = payload.list || []\n      return state\n    case GROUPS_REMOVE:\n      // Check if account is already in list\n      if (state[payload.groupId]) {\n        // Remove from list\n        state.list.splice( state.list.indexOf(payload.groupId), 1 )\n        // Remove object\n        delete state[payload.groupId]\n        return state\n      }\n      return state\n    case GROUPS_ADD_ACCOUNT:\n      // Check if account is already in list\n      console.log(payload)\n      console.log(state[payload.groupId].indexOf(payload.account))\n      if ( state[payload.groupId].indexOf(payload.account) !== -1 ) {\n        return state\n      }\n      state[payload.groupId].push(payload.account)\n      return state\n    case GROUPS_REMOVE_ACCOUNT:\n      // Check if account is already in list\n      if (state[payload.groupId].indexOf(payload.account)) {\n        // Remove from list\n        state[payload.groupId].splice( state[payload.groupId].indexOf(payload.account), 1 )\n      }\n      return state\n    default:\n      return state\n  }\n}\n\n//\n// const initialState = [\n//   {\n//     text: 'Use Redux',\n//     completed: false,\n//     id: 0\n//   }\n// ]\n\n// export default function todos(state = initialState, action) {\n//   switch (action.type) {\n//     case REGISTER_ACCOUNT:\n//       return [\n//         {\n//           id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n//           completed: false,\n//           text: action.text\n//         },\n//         ...state\n//       ]\n//\n//     default:\n//       return state\n//   }\n// }\n"],"sourceRoot":"/source/"}