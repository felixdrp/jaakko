{"version":3,"sources":["reducers/server.js"],"names":["accounts","groups","state","list","action","payload","type","email","push","splice","indexOf","groupId","account","includes"],"mappings":";;;;;QAgBgBA,Q,GAAAA,Q;QAmCAC,M,GAAAA,M;;AAlDhB;;AAWA;;;;AAIO,SAASD,QAAT,GAAgD;AAAA,MAA9BE,KAA8B,yDAAtB,EAAEC,MAAM,EAAR,EAAsB;AAAA,MAARC,MAAQ;;AACrD,MAAIC,UAAUD,OAAOC,OAAP,IAAkB,EAAhC;AACA,UAAQD,OAAOE,IAAf;AACE;AACE;AACA,UAAIJ,MAAMG,QAAQE,KAAd,CAAJ,EAA0B;AACxB,eAAOL,KAAP;AACD;AACD;AACAA,YAAMC,IAAN,CAAWK,IAAX,CAAgBH,QAAQE,KAAxB;AACA;AACAL,YAAMG,QAAQE,KAAd,IAAuBF,OAAvB;AACA,aAAOH,KAAP;AACF;AACE;AACA,UAAIA,MAAMG,QAAQE,KAAd,CAAJ,EAA0B;AACxBL,cAAMG,QAAQE,KAAd,IAAuBF,OAAvB;AACA,eAAOH,KAAP;AACD;AACD,aAAOA,KAAP;AACF;AACE;AACA,UAAIA,MAAMG,QAAQE,KAAd,CAAJ,EAA0B;AACxB;AACAL,cAAMC,IAAN,CAAWM,MAAX,CAAmBP,MAAMC,IAAN,CAAWO,OAAX,CAAmBL,QAAQE,KAA3B,CAAnB,EAAsD,CAAtD;AACA;AACA,eAAOL,MAAMG,QAAQE,KAAd,CAAP;AACA,eAAOL,KAAP;AACD;AACD,aAAOA,KAAP;AACF;AACE,aAAOA,KAAP;AA7BJ;AA+BD;;AAEM,SAASD,MAAT,GAA8C;AAAA,MAA9BC,KAA8B,yDAAtB,EAAEC,MAAM,EAAR,EAAsB;AAAA,MAARC,MAAQ;;AACnD;AACA,MAAIC,UAAUD,OAAOC,OAAP,IAAkB,EAAhC;;AAEA,UAAQD,OAAOE,IAAf;AACE;AACE;AACA,UAAIJ,MAAMG,QAAQM,OAAd,CAAJ,EAA4B;AAC1B,eAAOT,KAAP;AACD;AACD;AACAA,YAAMC,IAAN,CAAWK,IAAX,CAAgBH,QAAQM,OAAxB;AACAT,YAAMG,QAAQM,OAAd,IAAyBN,QAAQF,IAAR,IAAgB,EAAzC;AACA,aAAOD,KAAP;AACF;AACE;AACA,UAAIA,MAAMG,QAAQM,OAAd,CAAJ,EAA4B;AAC1B;AACAT,cAAMC,IAAN,CAAWM,MAAX,CAAmBP,MAAMC,IAAN,CAAWO,OAAX,CAAmBL,QAAQM,OAA3B,CAAnB,EAAwD,CAAxD;AACA;AACA,eAAOT,MAAMG,QAAQM,OAAd,CAAP;AACA,eAAOT,KAAP;AACD;AACD,aAAOA,KAAP;AACF;AACE;AACA;AACA;AACA,UAAKA,MAAMG,QAAQM,OAAd,EAAuBD,OAAvB,CAA+BL,QAAQO,OAAvC,MAAoD,CAAC,CAA1D,EAA8D;AAC5D,eAAOV,KAAP;AACD;AACDA,YAAMG,QAAQM,OAAd,EAAuBH,IAAvB,CAA4BH,QAAQO,OAApC;AACA,aAAOV,KAAP;AACF;AACE;AACA,UAAKA,MAAMG,QAAQM,OAAd,EAAuBE,QAAvB,CAAgCR,QAAQO,OAAxC,CAAL,EAAwD;AACtD;AACAV,cAAMG,QAAQM,OAAd,EAAuBF,MAAvB,CAA+BP,MAAMG,QAAQM,OAAd,EAAuBD,OAAvB,CAA+BL,QAAQO,OAAvC,CAA/B,EAAgF,CAAhF;AACD;AACD,aAAOV,KAAP;AACF;AACE,aAAOA,KAAP;AArCJ;AAuCD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"reducers/server.js","sourcesContent":["\nimport {\n  ACCOUNTS_ADD,\n  ACCOUNTS_UPDATE,\n  ACCOUNTS_REMOVE,\n\n  GROUPS_ADD,\n  GROUPS_REMOVE,\n  GROUPS_ADD_ACCOUNT,\n  GROUPS_REMOVE_ACCOUNT,\n} from '../actions/actions'\n\n/*\n * reducers\n */\n\nexport function accounts(state = { list: [] }, action) {\n  let payload = action.payload || ''\n  switch (action.type) {\n    case ACCOUNTS_ADD:\n      // Check if account is already in list\n      if (state[payload.email]) {\n        return state\n      }\n      // Add to the list\n      state.list.push(payload.email)\n      // state[payload.email] = JSON.parse(JSON.stringify( payload ))\n      state[payload.email] = payload\n      return state\n    case ACCOUNTS_UPDATE:\n      // Check if account is already in list\n      if (state[payload.email]) {\n        state[payload.email] = payload\n        return state\n      }\n      return state\n    case ACCOUNTS_REMOVE:\n      // Check if account is already in list\n      if (state[payload.email]) {\n        // Remove from list\n        state.list.splice( state.list.indexOf(payload.email), 1 )\n        // Remove object\n        delete state[payload.email]\n        return state\n      }\n      return state\n    default:\n      return state\n  }\n}\n\nexport function groups(state = { list: [] }, action) {\n  // let payload = !!action && action.payload || ''\n  let payload = action.payload || ''\n\n  switch (action.type) {\n    case GROUPS_ADD:\n      // Check if account is already in list\n      if (state[payload.groupId]) {\n        return state\n      }\n      // Add to the list\n      state.list.push(payload.groupId)\n      state[payload.groupId] = payload.list || []\n      return state\n    case GROUPS_REMOVE:\n      // Check if account is already in list\n      if (state[payload.groupId]) {\n        // Remove from list\n        state.list.splice( state.list.indexOf(payload.groupId), 1 )\n        // Remove object\n        delete state[payload.groupId]\n        return state\n      }\n      return state\n    case GROUPS_ADD_ACCOUNT:\n      // Check if account is already in list\n      // console.log(payload)\n      // console.log(state[payload.groupId].indexOf(payload.account))\n      if ( state[payload.groupId].indexOf(payload.account) !== -1 ) {\n        return state\n      }\n      state[payload.groupId].push(payload.account)\n      return state\n    case GROUPS_REMOVE_ACCOUNT:\n      // Check if account is already in list\n      if ( state[payload.groupId].includes(payload.account) ) {\n        // Remove from list\n        state[payload.groupId].splice( state[payload.groupId].indexOf(payload.account), 1 )\n      }\n      return state\n    default:\n      return state\n  }\n}\n\n//\n// const initialState = [\n//   {\n//     text: 'Use Redux',\n//     completed: false,\n//     id: 0\n//   }\n// ]\n\n// export default function todos(state = initialState, action) {\n//   switch (action.type) {\n//     case REGISTER_ACCOUNT:\n//       return [\n//         {\n//           id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n//           completed: false,\n//           text: action.text\n//         },\n//         ...state\n//       ]\n//\n//     default:\n//       return state\n//   }\n// }\n"],"sourceRoot":"/source/"}