{"version":3,"sources":["reducers/server.js"],"names":["accounts","groups","session","results","task","state","list","action","payload","type","email","group","surveyPointer","push","splice","indexOf","groupId","accountList","account","includes","surveyInfo","taskPointer","taskList","similarList","favouritList","temp"],"mappings":"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","file":"reducers/server.js","sourcesContent":["\nimport {\n  ACCOUNTS_ADD,\n  ACCOUNTS_UPDATE,\n  ACCOUNTS_REMOVE,\n\n  GROUPS_ADD,\n  GROUPS_REMOVE,\n  GROUPS_ADD_ACCOUNT,\n  GROUPS_REMOVE_ACCOUNT,\n\n  SESSION_DATA_ADD,\n  STORE_SURVEY_INFO,\n\n  TASK_ADD_IDEA,\n  TASK_ADD_ALL_SIMILARITIES,\n  TASK_ADD_ALL_FAVOURITES,\n  TASK_INCREASE_POINTER,\n} from '../actions/actions'\n\n/*\n * reducers\n */\n\nexport function accounts(state = { list: [] }, action) {\n  let payload = action.payload || ''\n  switch (action.type) {\n    case ACCOUNTS_ADD:\n      // Check if account is already in list\n      if (state[payload.email]) {\n        // Then update the account\n        // Maintain the older surveyPointer and group\n        state[payload.email] = {\n          ...payload,\n          group: state[payload.email].group,\n          // Remove 1, function nextStep will add 1 to stay same place.\n          surveyPointer: state[payload.email].surveyPointer - 1,\n        }\n        return state\n      }\n      // Add to the list\n      state.list.push(payload.email)\n      // state[payload.email] = JSON.parse(JSON.stringify( payload ))\n      state[payload.email] = payload\n      return state\n    case ACCOUNTS_UPDATE:\n      // Check if account is already in list\n      if (state[payload.email]) {\n        state[payload.email] = payload\n        return state\n      }\n      return state\n    case ACCOUNTS_REMOVE:\n      // Check if account is already in list\n      if (state[payload.email]) {\n        // Remove from list\n        state.list.splice( state.list.indexOf(payload.email), 1 )\n        // Remove object\n        delete state[payload.email]\n        return state\n      }\n      return state\n    default:\n      return state\n  }\n}\n\nexport function groups(state = { list: [] }, action) {\n  // let payload = !!action && action.payload || ''\n  let payload = action.payload || ''\n\n  switch (action.type) {\n    case GROUPS_ADD:\n      // Check if account is already in list\n      if (state[payload.groupId]) {\n        return state\n      }\n      // Add to the list\n      state.list.push(payload.groupId)\n      state[payload.groupId] = {\n        accountList: payload.list || [],\n        type: payload.type || 0,\n      }\n      return state\n    case GROUPS_REMOVE:\n      // Check if account is already in list\n      if (state[payload.groupId]) {\n        // Remove from list\n        state.list.splice( state.list.indexOf(payload.groupId), 1 )\n        // Remove object\n        delete state[payload.groupId]\n        return state\n      }\n      return state\n    case GROUPS_ADD_ACCOUNT:\n      // Check if account is already in list\n      // console.log(payload)\n      // console.log(state[payload.groupId].indexOf(payload.account))\n      if ( state[payload.groupId].accountList.indexOf(payload.account) !== -1 ) {\n        return state\n      }\n      state[payload.groupId].accountList.push(payload.account)\n      return state\n    case GROUPS_REMOVE_ACCOUNT:\n      // Check if account is already in list\n      if ( state[payload.groupId].accountList.includes(payload.account) ) {\n        // Remove from list\n        state[payload.groupId].accountList.splice(\n          state[payload.groupId].accountList.indexOf(payload.account),\n          1\n        )\n      }\n      return state\n    default:\n      return state\n  }\n}\n\nexport function session(state = { }, action) {\n  let payload = action.payload || ''\n  switch (action.type) {\n    case SESSION_DATA_ADD:\n      state = payload\n      return state\n\n    default:\n      return state\n  }\n}\n\nexport function results(state = { surveyInfo: [] }, action) {\n  let payload = action.payload || ''\n  switch (action.type) {\n    case STORE_SURVEY_INFO:\n      state.surveyInfo.push(payload)\n      return state\n\n    default:\n      return state\n  }\n}\n\nexport function task(\n  state = {\n    taskPointer: 0,\n    taskList: [ [] ],\n    similarList: [ [] ],\n    favouritList: [ [] ],\n  },\n  action\n) {\n  let payload = action.payload || ''\n  let temp\n  switch (action.type) {\n    case TASK_ADD_IDEA:\n      state.taskList[ state.taskPointer ].push( payload )\n      return state\n\n    case TASK_ADD_ALL_SIMILARITIES:\n      temp = { ...state }\n      temp.similarList[ state.taskPointer ] = payload\n      return temp\n\n    case TASK_ADD_ALL_FAVOURITES:\n      temp = { ...state }\n      temp.favouritList[ state.taskPointer ] = payload\n      return temp\n\n    case TASK_INCREASE_POINTER:\n      temp = { ...state, taskPointer: state.taskPointer + 1 }\n      temp.taskList.push( [] )\n      temp.similarList.push( [] )\n      temp.favouritList.push( [] )\n      return temp\n    default:\n      return state\n  }\n}\n"],"sourceRoot":"/source/"}