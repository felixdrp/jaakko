{"version":3,"sources":["jaakko-client.js"],"names":[],"mappings":";;AACA;;;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AAEA;AACA;AACA;;AAEA;AACA;AAhBA;AAiBA,IAAM,eAAe,OAAO,iBAAP,IAA4B,EAAjD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAM,QAAQ,wBACZ,4BAAgB;AACd;AACA;AAFc,CAAhB,CADY,EAKZ,YALY,CAAd;AAOA;AACA,IAAM,UAAU,yEAAqC,KAArC,CAAhB;;AAEA,QAAQ,GAAR,CAAY,MAAM,QAAN,EAAZ;;AAEA,sBACE;AAAA;AAAA,IAAU,OAAO,KAAjB;AACG,wBAAQ,OAAR;AADH,CADF,EAIE,SAAS,cAAT,CAAwB,KAAxB,CAJF","file":"jaakko-client.js","sourcesContent":["// *** Load react and react-dom ***\nimport React from 'react'\nimport { render } from 'react-dom'\n\nimport { applyMiddleware, compose, createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport { browserHistory } from 'react-router'\nimport { syncHistoryWithStore, routerReducer, routeActions  } from 'react-router-redux'\nimport Routes from './routes';\nimport { createHistory } from 'history';\n\n// console.log(Object.keys(reactRR))\n// *** Load store reducers ***\n// import topicListPage from './reducers/topic-list-reducer'\n\n// The initial state from server-generated HTML\n// have a look to server code.\nconst initialState = window.__INITIAL_STATE__ || {}\n\n// // https://github.com/rackt/history/blob/master/docs/GettingStarted.md\n// const history = createHistory()\n\n// https://github.com/rackt/react-router-redux/blob/master/examples/basic/app.js\n// const middleware = syncHistory(history)\n// const reducer = combineReducers({\n//   // topicListPage,\n//   routing: routeReducer\n// })\n\n// // Create Redux store with initial state\n// // const store = createStore(counterApp, initialState)\n\n// const finalCreateStore = compose(\n//   applyMiddleware(middleware)\n//   // DevTools.instrument()\n//   //\n// )(createStore)\n// const store = finalCreateStore(reducer, window.__INITIAL_STATE__)\nconst store = createStore(\n  combineReducers({\n    // topicListPage,\n    routing: routerReducer\n  }),\n  initialState\n)\n// Create an enhanced history that syncs navigation events with the store\nconst history = syncHistoryWithStore(browserHistory, store)\n\nconsole.log(store.getState())\n\nrender(\n  <Provider store={store}>\n    {Routes( history )}\n  </Provider>,\n  document.getElementById('app')\n)\n"],"sourceRoot":"/source/"}