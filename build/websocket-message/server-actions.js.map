{"version":3,"sources":["websocket-message/server-actions.js"],"names":[],"mappings":";;;;;;QAgCgB,e,GAAA,e;QAuBA,Y,GAAA,Y;QAYA,Y,GAAA,Y;QAcA,U,GAAA,U;QAWA,U,GAAA,U;QAYA,a,GAAA,a;QAWA,mB,GAAA,mB;;AAlHhB;;AAGA;;AAMA;;AAOA;;AAIA;AACA;;AAtBA;AAwBO,IAAM,0BAAS,QAAf;;AArBP;;AAsBO,IAAM,wBAAQ,OAAd;AACA,IAAM,0BAAS,QAAf;;AAGP;AACO,IAAM,8CAAmB,kBAAzB;AACP;AACO,SAAS,eAAT,OAMJ;AAAA,MALD,SAKC,QALD,SAKC;AAAA,MAJD,QAIC,QAJD,QAIC;AAAA,MAHD,KAGC,QAHD,KAGC;AAAA,MAFD,QAEC,QAFD,QAEC;AAAA,MADD,eACC,QADD,eACC;;AACD,SAAO;AACL,UAAM,MADD;AAEL,YAAQ,gBAFH;AAGL,aAAS;AACP,0BADO;AAEP,wBAFO;AAGP,kBAHO;AAIP,wBAJO;AAKP;AALO;AAHJ,GAAP;AAWD;;AAED;AACO,IAAM,wCAAgB,eAAtB;AACP;AACO,SAAS,YAAT,QAAyC;AAAA,MAAlB,KAAkB,SAAlB,KAAkB;AAAA,MAAX,QAAW,SAAX,QAAW;;AAC9C,SAAO;AACL,UAAM,MADD;AAEL,YAAQ,aAFH;AAGL,aAAS;AACP,kBADO;AAEP;AAFO;AAHJ,GAAP;AAQD;;AAED;AACO,SAAS,YAAT,QAA2D;AAAA,MAApC,KAAoC,SAApC,KAAoC;AAAA,MAA7B,SAA6B,SAA7B,SAA6B;AAAA,MAAlB,QAAkB,SAAlB,QAAkB;AAAA,MAAR,KAAQ,SAAR,KAAQ;;AAChE,SAAO;AACL,UAAM,MADD;AAEL,2CAFK;AAGL,aAAS;AACP,kBADO;AAEP,0BAFO;AAGP,wBAHO;AAIP;AAJO;AAHJ,GAAP;AAUD;;AAED;AACO,SAAS,UAAT,QAA2C;AAAA,MAArB,GAAqB,SAArB,GAAqB;AAAA,4BAAhB,OAAgB;AAAA,MAAhB,OAAgB,iCAAN,EAAM;;AAChD,MAAI,eAAe,4BAAK,GAAL,CAAnB;AACA,SAAO;AACL,UAAM,MADD;AAEL,YAAQ,aAAa,IAFhB;AAGL,aAAS,aAAa;AAHjB,GAAP;AAKD;;AAGD;AACO,SAAS,UAAT,CAAoB,GAApB,EAAyB;AAC9B,MAAI,OAAQ,OAAO,UAAU,GAAlB,GAAwB,IAAI,IAA5B,GAAmC,EAA9C;AACA,SAAO;AACL,UAAM,MADD;AAEL,+BAFK;AAGL,aAAS;AACP;AADO;AAHJ,GAAP;AAOD;;AAED;AACO,SAAS,aAAT,CAAuB,OAAvB,EAAgC;AACrC,SAAO;AACL,UAAM,MADD;AAEL,kCAFK;AAGL,aAAS;AACP;AADO;AAHJ,GAAP;AAOD;;AAED;AACO,SAAS,mBAAT,CAA6B,KAA7B,EAAoC;AACzC,SAAO;AACL,UAAM,MADD;AAEL,2CAFK;AAGL,aAAS;AAHJ,GAAP;AAKD","file":"websocket-message/server-actions.js","sourcesContent":["// Send the user to a new page\nimport { push  } from 'react-router-redux'\n\n// Redux client actions\nimport {\n  // ACCOUNT_REGISTER_ERROR,\n  // ACCOUNT_LOGIN_ERROR,\n  ACCOUNT_LOG_USER\n} from '../actions/client-actions'\n\nimport {\n  GROUPS_ADD,\n  GROUPS_REMOVE,\n  GROUPS_ADD_ACCOUNT,\n  GROUPS_REMOVE_ACCOUNT,\n} from '../actions/actions'\n\nimport {\n  SESSION_STATE_GET\n} from './query-actions'\n\n// Server socket actions\n// Socket action types:\n\nexport const MUTATE = 'MUTATE'\nexport const QUERY = 'QUERY'\nexport const ACTION = 'ACTION'\n\n\n// Register a new account in the db and add to the account list\nexport const REGISTER_ACCOUNT = 'REGISTER_ACCOUNT'\n// Register using socket action creator\nexport function registerAccount({\n  firstName,\n  surename,\n  email,\n  password,\n  reEnterPassword\n}) {\n  return {\n    type: MUTATE,\n    action: REGISTER_ACCOUNT,\n    payload: {\n      firstName,\n      surename,\n      email,\n      password,\n      reEnterPassword,\n    }\n  }\n}\n\n// Check the account and add to the account list\nexport const LOGIN_ACCOUNT = 'LOGIN_ACCOUNT'\n// Register using socket action creator\nexport function loginAccount({email, password}) {\n  return {\n    type: MUTATE,\n    action: LOGIN_ACCOUNT,\n    payload: {\n      email,\n      password\n    }\n  }\n}\n\n// Log the account in the client redux store\nexport function wsLogAccount({email, firstName, surename, token}) {\n  return {\n    type: ACTION,\n    action: ACCOUNT_LOG_USER,\n    payload: {\n      email,\n      firstName,\n      surename,\n      token,\n    }\n  }\n}\n\n// Goto page\nexport function wsGotoPage({ url, options = {} }) {\n  let routerAction = push(url)\n  return {\n    type: ACTION,\n    action: routerAction.type,\n    payload: routerAction.payload\n  }\n}\n\n\n// Register a group socket action creator\nexport function wsGroupAdd(obj) {\n  let name = (obj && 'name' in obj)? obj.name : '';\n  return {\n    type: MUTATE,\n    action: GROUPS_ADD,\n    payload: {\n      name,\n    }\n  }\n}\n\n// Register a group socket action creator\nexport function wsGroupRemove(groupId) {\n  return {\n    type: MUTATE,\n    action: GROUPS_REMOVE,\n    payload: {\n      groupId,\n    }\n  }\n}\n\n// update state in components ControlRoom socket action creator\nexport function swUpdateControlRoom(state) {\n  return {\n    type: ACTION,\n    action: SESSION_STATE_GET,\n    payload: state,\n  }\n}\n"],"sourceRoot":"/source/"}