{"version":3,"sources":["websocket-message/server-actions.js"],"names":["registerAccount","loginAccount","wsLogAccount","wsGotoPage","MUTATE","QUERY","ACTION","REGISTER_ACCOUNT","firstName","surename","email","password","reEnterPassword","type","action","payload","LOGIN_ACCOUNT","token","url","options","routerAction"],"mappings":";;;;;;QAqBgBA,e,GAAAA,e;QAuBAC,Y,GAAAA,Y;QAYAC,Y,GAAAA,Y;QAcAC,U,GAAAA,U;;AArEhB;;AAGA;;AAMA;AACA;;AAXA;AAaO,IAAMC,0BAAS,QAAf;;AAVP;AAWO,IAAMC,wBAAQ,OAAd;AACA,IAAMC,0BAAS,QAAf;;AAGP;AACO,IAAMC,8CAAmB,kBAAzB;AACP;AACO,SAASP,eAAT,OAMJ;AAAA,MALDQ,SAKC,QALDA,SAKC;AAAA,MAJDC,QAIC,QAJDA,QAIC;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MADDC,eACC,QADDA,eACC;;AACD,SAAO;AACLC,UAAMT,MADD;AAELU,YAAQP,gBAFH;AAGLQ,aAAS;AACPP,0BADO;AAEPC,wBAFO;AAGPC,kBAHO;AAIPC,wBAJO;AAKPC;AALO;AAHJ,GAAP;AAWD;;AAED;AACO,IAAMI,wCAAgB,eAAtB;AACP;AACO,SAASf,YAAT,QAAyC;AAAA,MAAlBS,KAAkB,SAAlBA,KAAkB;AAAA,MAAXC,QAAW,SAAXA,QAAW;;AAC9C,SAAO;AACLE,UAAMT,MADD;AAELU,YAAQE,aAFH;AAGLD,aAAS;AACPL,kBADO;AAEPC;AAFO;AAHJ,GAAP;AAQD;;AAED;AACO,SAAST,YAAT,QAA2D;AAAA,MAApCQ,KAAoC,SAApCA,KAAoC;AAAA,MAA7BF,SAA6B,SAA7BA,SAA6B;AAAA,MAAlBC,QAAkB,SAAlBA,QAAkB;AAAA,MAARQ,KAAQ,SAARA,KAAQ;;AAChE,SAAO;AACLJ,UAAMP,MADD;AAELQ,2CAFK;AAGLC,aAAS;AACPL,kBADO;AAEPF,0BAFO;AAGPC,wBAHO;AAIPQ;AAJO;AAHJ,GAAP;AAUD;;AAED;AACO,SAASd,UAAT,QAA2C;AAAA,MAArBe,GAAqB,SAArBA,GAAqB;AAAA,4BAAhBC,OAAgB;AAAA,MAAhBA,OAAgB,iCAAN,EAAM;;AAChD,MAAIC,eAAe,4BAAKF,GAAL,CAAnB;AACA,SAAO;AACLL,UAAMP,MADD;AAELQ,YAAQM,aAAaP,IAFhB;AAGLE,aAASK,aAAaL;AAHjB,GAAP;AAKD","file":"websocket-message/server-actions.js","sourcesContent":["// Send the user to a new page\nimport { push  } from 'react-router-redux'\n\n// Redux client actions\nimport {\n  // ACCOUNT_REGISTER_ERROR,\n  // ACCOUNT_LOGIN_ERROR,\n  ACCOUNT_LOG_USER\n} from '../actions/client-actions'\n\n// Server socket actions\n// Socket action types:\n\nexport const MUTATE = 'MUTATE'\nexport const QUERY = 'QUERY'\nexport const ACTION = 'ACTION'\n\n\n// Register a new account in the db and add to the account list\nexport const REGISTER_ACCOUNT = 'REGISTER_ACCOUNT'\n// Register using socket action creator\nexport function registerAccount({\n  firstName,\n  surename,\n  email,\n  password,\n  reEnterPassword\n}) {\n  return {\n    type: MUTATE,\n    action: REGISTER_ACCOUNT,\n    payload: {\n      firstName,\n      surename,\n      email,\n      password,\n      reEnterPassword,\n    }\n  }\n}\n\n// Check the account and add to the account list\nexport const LOGIN_ACCOUNT = 'LOGIN_ACCOUNT'\n// Register using socket action creator\nexport function loginAccount({email, password}) {\n  return {\n    type: MUTATE,\n    action: LOGIN_ACCOUNT,\n    payload: {\n      email,\n      password\n    }\n  }\n}\n\n// Log the account in the client redux store\nexport function wsLogAccount({email, firstName, surename, token}) {\n  return {\n    type: ACTION,\n    action: ACCOUNT_LOG_USER,\n    payload: {\n      email,\n      firstName,\n      surename,\n      token,\n    }\n  }\n}\n\n// Goto page\nexport function wsGotoPage({ url, options = {} }) {\n  let routerAction = push(url)\n  return {\n    type: ACTION,\n    action: routerAction.type,\n    payload: routerAction.payload\n  }\n}\n"],"sourceRoot":"/source/"}