{"version":3,"sources":["websocket-message/server-query.js"],"names":["action","payload","ws","store","payloadResponse","result","account","temp","getState","send","accounts","list","includes","console","log","type","session","surveyPath","surveyPointer","groups","indexOf","group","length","groupType","ideas","task","taskList","taskPointer","filter","element","selectedGroup","similarList","query"],"mappings":"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","file":"websocket-message/server-query.js","sourcesContent":["// WebSocket communications types\n// look doc/server-websocket-message-system.md\nimport Immutable from 'immutable'\n\nimport {\n  MUTATE,\n  QUERY,\n  ACTION,\n\n  wsGotoPage,\n  swUpdateControlRoom,\n  swSetSurveyInitials,\n} from './server-actions'\n\nimport {\n  SESSION_STATE_GET,\n  SURVEY_STATE_GET,\n} from './query-actions'\n\nimport {\n  AWAIT,\n  QUESTION,\n  INSTRUCTIONS,\n  MATH_CHALLENGE,\n  ALT_OBJECT_TASK,\n  SIMILARITIES,\n  FAVOURITES,\n  MATH_RESULTS,\n  RESULTS,\n} from '../components/survey/survey-types'\n\n// Redux server actions\nimport {\n  // Remove the WS from a store state\n  storeStateWithoutWebSocket,\n  // groupsAdd,\n  // groupsRemove,\n  // groupsAddAccount,\n  // groupsRemoveAccount,\n  // moveAccounFromGroup,\n} from '../actions/actions'\n\n// Redux client actions\nimport {\n  // ACCOUNT_REGISTER_ERROR,\n  // ACCOUNT_LOGIN_ERROR,\n} from '../actions/client-actions'\n\n/**\n * Query will process an asynchronous message from a client send by a websocket\n *\n * @param {Object} An object whose values correspond to:\n *                    action: Async action to process\n *                    payload: The info to process\n *                    ws: websocket that trigger the message.\n * @returns {}\n */\n\nexport default async function query({ action, payload, ws, store }) {\n  let payloadResponse,\n      result,\n      account,\n      temp = {}\n\n  switch (action) {\n    case SESSION_STATE_GET:\n      // update state in components ControlRoom socket action creator\n      payloadResponse = storeStateWithoutWebSocket( store.getState() )\n\n      ws.send(\n        swUpdateControlRoom(payloadResponse)\n      )\n      return true\n\n    case SURVEY_STATE_GET:\n      // Send initial values to the surveys if needed\n      result = store.getState()\n      account = payload\n\n      if ( !result.accounts.list.includes(account) ) {\n        console.log( SURVEY_STATE_GET + ': Account not found' )\n        return false\n      }\n      temp.account = result.accounts[account]\n      temp.type = result.session.surveyPath[\n        temp.account.surveyPointer\n      ].type\n\n      switch (temp.type) {\n        case SIMILARITIES:\n          // debugger\n          if ( result.groups.list.indexOf(temp.account.group) + 1 >= result.groups.list.length ) {\n            temp.payload = {\n              group: result.groups.list[0],\n              groupType: result.groups[ result.groups.list[0] ].type,\n              ideas: result.task.taskList[ result.task.taskPointer ].filter(\n                element => result.groups.list[0] == element.group\n              ),\n            }\n          } else {\n            temp.selectedGroup = result.groups.list[ result.groups.list.indexOf(temp.account.group) + 1 ]\n            temp.payload = {\n              group: temp.selectedGroup,\n              groupType: result.groups[ temp.selectedGroup ].type,\n              ideas: result.task.taskList[ result.task.taskPointer ].filter(\n                element => temp.selectedGroup == element.group\n              ),\n            }\n          }\n\n          console.log('SIMILARITIES SIMILARITIES SIMILARITIES SIMILARITIES SIMILARITIES SIMILARITIES')\n          console.log(temp.payload)\n\n          ws.send(\n            swSetSurveyInitials( temp.payload )\n          )\n\n          return\n\n        case FAVOURITES:\n          if ( result.groups.list.indexOf(temp.account.group) - 1 < 0 ) {\n            temp.selectedGroup = result.groups.list[ result.groups.list.length - 1 ]\n            temp.payload = {\n              group: temp.selectedGroup,\n              groupType: result.groups[ temp.selectedGroup ].type,\n              ideas: result.task.similarList[ result.task.taskPointer ].filter(\n                element => temp.selectedGroup == element.group\n              ),\n            }\n          } else {\n            temp.selectedGroup = result.groups.list[ result.groups.list.indexOf(temp.account.group) - 1 ]\n            temp.payload = {\n              group: temp.selectedGroup,\n              groupType: result.groups[ temp.selectedGroup ].type,\n              ideas: result.task.similarList[ result.task.taskPointer ].filter(\n                element => temp.selectedGroup == element.group\n              ),\n            }\n          }\n\n          console.log('FAVOURITES FAVOURITES FAVOURITES FAVOURITES FAVOURITES FAVOURITES')\n          console.log(temp.payload)\n\n          ws.send(\n            swSetSurveyInitials( temp.payload )\n          )\n\n          return\n\n        case RESULTS:\n          ws.send(\n            swSetSurveyInitials( temp.payload )\n          )\n\n          return\n\n        default:\n\n      }\n\n      console.log('SESSION_STATE_GET return!!!')\n      return\n  }\n}\n"],"sourceRoot":"/source/"}