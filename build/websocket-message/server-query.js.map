{"version":3,"sources":["websocket-message/server-query.js"],"names":["action","payload","ws","store","payloadResponse","result","account","temp","getState","send","accounts","list","includes","console","log","type","session","surveyPath","surveyPointer","groupType","groups","group","taskType","selectedGroup","indexOf","length","ideas","task","taskList","taskPointer","filter","element","similarList","favouritList","mathPointer","findIndex","mathResults","results","surveyInfo","surveyId","groupId","query"],"mappings":"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","file":"websocket-message/server-query.js","sourcesContent":["// WebSocket communications types\n// look doc/server-websocket-message-system.md\nimport Immutable from 'immutable'\n\nimport {\n  MUTATE,\n  QUERY,\n  ACTION,\n\n  wsGotoPage,\n  swUpdateControlRoom,\n  swSetSurveyInitials,\n} from './server-actions'\n\nimport {\n  SESSION_STATE_GET,\n  SURVEY_STATE_GET,\n} from './query-actions'\n\nimport {\n  AWAIT,\n  QUESTION,\n  INSTRUCTIONS,\n  MATH_CHALLENGE,\n  ALT_OBJECT_TASK,\n  SIMILARITIES,\n  FAVOURITES,\n  MATH_RESULTS,\n  RESULTS,\n} from '../components/survey/survey-types'\n\n// Redux server actions\nimport {\n  // Remove the WS from a store state\n  storeStateWithoutWebSocket,\n  // groupsAdd,\n  // groupsRemove,\n  // groupsAddAccount,\n  // groupsRemoveAccount,\n  // moveAccounFromGroup,\n} from '../actions/actions'\n\n// Redux client actions\nimport {\n  // ACCOUNT_REGISTER_ERROR,\n  // ACCOUNT_LOGIN_ERROR,\n} from '../actions/client-actions'\n\n/**\n * Query will process an asynchronous message from a client send by a websocket\n *\n * @param {Object} An object whose values correspond to:\n *                    action: Async action to process\n *                    payload: The info to process\n *                    ws: websocket that trigger the message.\n * @returns {}\n */\n\nexport default async function query({ action, payload, ws, store }) {\n  let payloadResponse,\n      result,\n      account,\n      temp = {}\n\n  switch (action) {\n    case SESSION_STATE_GET:\n      // update state in components ControlRoom socket action creator\n      payloadResponse = storeStateWithoutWebSocket( store.getState() )\n\n      ws.send(\n        swUpdateControlRoom(payloadResponse)\n      )\n      return true\n\n    case SURVEY_STATE_GET:\n      // Send initial values to the surveys if needed\n      temp = {}\n      result = store.getState()\n      account = payload\n\n      if ( !result.accounts.list.includes(account) ) {\n        console.log( SURVEY_STATE_GET + ': Account not found' )\n        return false\n      }\n      temp.account = result.accounts[account]\n      temp.type = result.session.surveyPath[\n        temp.account.surveyPointer\n      ].type\n\n      switch (temp.type) {\n        case INSTRUCTIONS:\n        case ALT_OBJECT_TASK:\n          temp.payload = result.session.surveyPath[\n            temp.account.surveyPointer\n          ].payload\n\n          ws.send(\n            swSetSurveyInitials( { groupType: result.groups[ temp.account.group ].type, taskType: temp.payload } )\n          )\n\n          return\n        case QUESTION:\n            temp.payload = result.session.surveyPath[\n              temp.account.surveyPointer\n            ].payload\n\n            ws.send(\n              swSetSurveyInitials( temp.payload )\n            )\n\n            return\n        case SIMILARITIES:\n\n          temp.selectedGroup = 0;\n          console.log(\"this is the current group: \"+temp.account.group)\n        //  debugger;\n          if (temp.account.surveyPointer > 17 ){\n            if ( (result.groups.list.indexOf(temp.account.group) - 1) < 0  ) {\n              temp.selectedGroup = result.groups.list[ result.groups.list.length - 1 ]\n            } else {\n              temp.selectedGroup = result.groups.list[ result.groups.list.indexOf(temp.account.group) - 1 ]\n            }\n          } else {\n            if ( (result.groups.list.indexOf(temp.account.group) + 1) >= result.groups.list.length ) {\n              temp.selectedGroup = result.groups.list[ 0 ]\n            } else {\n              temp.selectedGroup = result.groups.list[ result.groups.list.indexOf(temp.account.group) + 1 ]\n            }\n          }\n\n\n\n          temp.payload = {\n            group: temp.selectedGroup,\n            groupType: result.groups[ temp.selectedGroup ].type,\n            ideas: result.task.taskList[ result.task.taskPointer ].filter(\n              element => temp.selectedGroup == element.group\n            ),\n          }\n\n          console.log('SIMILARITIES SIMILARITIES SIMILARITIES SIMILARITIES SIMILARITIES SIMILARITIES')\n          console.log(temp.payload)\n\n          ws.send(\n            swSetSurveyInitials( temp.payload )\n          )\n\n          return\n\n        case FAVOURITES:\n\n        temp.selectedGroup = 0;\n      //  debugger;\n        if (temp.account.surveyPointer > 17 ){\n          if ( (result.groups.list.indexOf(temp.account.group) + 1) >= result.groups.list.length ) {\n            temp.selectedGroup = result.groups.list[ 0 ]\n          } else {\n            temp.selectedGroup = result.groups.list[ result.groups.list.indexOf(temp.account.group) + 1 ]\n          }\n        } else {\n          if ( (result.groups.list.indexOf(temp.account.group) - 1) < 0  ) {\n            temp.selectedGroup = result.groups.list[ result.groups.list.length - 1 ]\n          } else {\n            temp.selectedGroup = result.groups.list[ result.groups.list.indexOf(temp.account.group) - 1 ]\n          }\n        }\n\n        temp.payload = {\n          group: temp.selectedGroup,\n          groupType: result.groups[ temp.selectedGroup ].type,\n          ideas: result.task.similarList[ result.task.taskPointer ].filter(\n            element => temp.selectedGroup == element.group\n          ),\n        }\n          // if ( result.groups.list.indexOf(temp.account.group) - 1 < 0 ) {\n          //   temp.selectedGroup = result.groups.list[ result.groups.list.length - 1 ]\n          //   temp.payload = {\n          //     group: temp.selectedGroup,\n          //     groupType: result.groups[ temp.selectedGroup ].type,\n          //     ideas: result.task.similarList[ result.task.taskPointer ].filter(\n          //       element => temp.selectedGroup == element.group\n          //     ),\n          //   }\n          // } else {\n          //   temp.selectedGroup = result.groups.list[ result.groups.list.indexOf(temp.account.group) - 1 ]\n          //   temp.payload = {\n          //     group: temp.selectedGroup,\n          //     groupType: result.groups[ temp.selectedGroup ].type,\n          //     ideas: result.task.similarList[ result.task.taskPointer ].filter(\n          //       element => temp.selectedGroup == element.group\n          //     ),\n          //   }\n          // }\n\n          console.log('FAVOURITES FAVOURITES FAVOURITES FAVOURITES FAVOURITES FAVOURITES')\n          console.log(temp.payload)\n\n          ws.send(\n            swSetSurveyInitials( temp.payload )\n          )\n          return\n\n        case RESULTS:\n          try {\n\n            console.log('PRE PRE RESULTS RESULTS RESULTS RESULTS RESULTS RESULTS')\n            result = storeStateWithoutWebSocket( result )\n            temp.payload = {\n              group: temp.account.group,\n              groupType: result.groups[ temp.account.group ].type,\n              accounts: result.accounts,\n              ideas: result.task.favouritList[ result.task.taskPointer ].filter(\n                element => temp.account.group == element.group\n              ),\n            }\n\n            console.log('RESULTS RESULTS RESULTS RESULTS RESULTS RESULTS')\n            console.log(temp.payload)\n\n            ws.send(\n              swSetSurveyInitials( temp.payload )\n            )\n            return\n\n          } catch (e ) {\n            console.log(\"CAGADA: \"+e)\n          }\n          return\n\n        case MATH_RESULTS:\n          try {\n            console.log('PRE PRE MATH_MATH_RESULTS MATH_MATH_RESULTS MATH_MATH_RESULTS MATH_MATH_RESULTS MATH_MATH_RESULTS MATH_MATH_RESULTS')\n            result = storeStateWithoutWebSocket( result )\n            temp.mathPointer = result.session.surveyPath.findIndex(\n              element => element.type == MATH_CHALLENGE\n            )\n\n            temp.payload = {\n              group: temp.account.group,\n              groupType: result.groups[ temp.account.group ].type,\n              accounts: result.accounts,\n              mathResults: result.results.surveyInfo.filter(\n                element => (temp.mathPointer == element.surveyId) && (temp.account.group == element.groupId)\n              ),\n            }\n\n            console.log('MATH_RESULTS MATH_RESULTS MATH_RESULTS MATH_RESULTS MATH_RESULTS MATH_RESULTS')\n            console.log(temp.payload)\n\n            ws.send(\n              swSetSurveyInitials( temp.payload )\n            )\n            return\n\n          } catch (e ) {\n            console.log(\"CAGADA: \"+e)\n          }\n          return\n        default:\n\n      }\n\n      console.log('SESSION_STATE_GET return!!!')\n      return\n  }\n}\n"],"sourceRoot":"/source/"}